Starting Application on LuoRong with PID 14304 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36495a22: startup date [Tue Nov 21 08:08:39 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$61a5e493] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 6918 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1b62dc8b
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@14b8d3b1{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.Action
		sw.entity.ActionGroup
		sw.entity.Asset
		sw.entity.AssetType
		sw.entity.Group
		sw.entity.Menu
		sw.entity.Project
		sw.entity.ProRef
		sw.entity.ReferenceFile
		sw.entity.User
		sw.entity.UserGroup]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@440b382f
Adding type registration boolean -> org.hibernate.type.BooleanType@440b382f
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@440b382f
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@655ba990
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4d9b639e
Adding type registration yes_no -> org.hibernate.type.YesNoType@457c5302
Adding type registration byte -> org.hibernate.type.ByteType@592386e8
Adding type registration byte -> org.hibernate.type.ByteType@592386e8
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@592386e8
Adding type registration character -> org.hibernate.type.CharacterType@6fba0cd3
Adding type registration char -> org.hibernate.type.CharacterType@6fba0cd3
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6fba0cd3
Adding type registration short -> org.hibernate.type.ShortType@7052e572
Adding type registration short -> org.hibernate.type.ShortType@7052e572
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7052e572
Adding type registration integer -> org.hibernate.type.IntegerType@4593e6bc
Adding type registration int -> org.hibernate.type.IntegerType@4593e6bc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4593e6bc
Adding type registration long -> org.hibernate.type.LongType@40661117
Adding type registration long -> org.hibernate.type.LongType@40661117
Adding type registration java.lang.Long -> org.hibernate.type.LongType@40661117
Adding type registration float -> org.hibernate.type.FloatType@7f0ddaa7
Adding type registration float -> org.hibernate.type.FloatType@7f0ddaa7
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f0ddaa7
Adding type registration double -> org.hibernate.type.DoubleType@1e0e8f7d
Adding type registration double -> org.hibernate.type.DoubleType@1e0e8f7d
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e0e8f7d
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@57182d31
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@57182d31
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6bc896aa
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6bc896aa
Adding type registration string -> org.hibernate.type.StringType@59d12143
Adding type registration java.lang.String -> org.hibernate.type.StringType@59d12143
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3de3667c
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4059e07e
Adding type registration url -> org.hibernate.type.UrlType@48013a0
Adding type registration java.net.URL -> org.hibernate.type.UrlType@48013a0
Adding type registration date -> org.hibernate.type.DateType@3789c885
Adding type registration java.sql.Date -> org.hibernate.type.DateType@3789c885
Adding type registration time -> org.hibernate.type.TimeType@6fc44700
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6fc44700
Adding type registration timestamp -> org.hibernate.type.TimestampType@a2b2aa9
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a2b2aa9
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a2b2aa9
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@318840e0
Adding type registration calendar -> org.hibernate.type.CalendarType@c233e2c
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@c233e2c
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@c233e2c
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b4d7051
Adding type registration locale -> org.hibernate.type.LocaleType@63abd346
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@63abd346
Adding type registration currency -> org.hibernate.type.CurrencyType@1b06c2e1
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1b06c2e1
Adding type registration timezone -> org.hibernate.type.TimeZoneType@67bcbe9c
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@67bcbe9c
Adding type registration class -> org.hibernate.type.ClassType@42fbdc03
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@42fbdc03
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@76f8f73d
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@76f8f73d
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3037804b
Adding type registration binary -> org.hibernate.type.BinaryType@7c882df3
Adding type registration byte[] -> org.hibernate.type.BinaryType@7c882df3
Adding type registration [B -> org.hibernate.type.BinaryType@7c882df3
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@203ec52
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@203ec52
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@203ec52
Adding type registration row_version -> org.hibernate.type.RowVersionType@306cee8d
Adding type registration image -> org.hibernate.type.ImageType@39985128
Adding type registration characters -> org.hibernate.type.CharArrayType@2b0f829c
Adding type registration char[] -> org.hibernate.type.CharArrayType@2b0f829c
Adding type registration [C -> org.hibernate.type.CharArrayType@2b0f829c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6ae446a6
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6ae446a6
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6ae446a6
Adding type registration text -> org.hibernate.type.TextType@228f4ab1
Adding type registration ntext -> org.hibernate.type.NTextType@3174a414
Adding type registration blob -> org.hibernate.type.BlobType@165696e8
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@165696e8
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e5087f1
Adding type registration clob -> org.hibernate.type.ClobType@3103117
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3103117
Adding type registration nclob -> org.hibernate.type.NClobType@2236b2a5
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2236b2a5
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ddfd345
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@243ca00c
Adding type registration serializable -> org.hibernate.type.SerializableType@6b4b7907
Adding type registration object -> org.hibernate.type.ObjectType@9ec5e24
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@9ec5e24
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@13c07fe5
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@78b61ec7
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22f70bd7
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5e86b303
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4ea9c061
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@621bf55
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1c12a5f5
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@77e703df
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.Group
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Group
Bind entity sw.entity.Group on table t_group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=info, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property info with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:info]
building SimpleValue for info
Building property info
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Asset
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Asset
Bind entity sw.entity.Asset on table t_asset
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='ass_typ_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=asset_type, insertable=true, updatable=true, unique=false}
Building property assetType
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=backup_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property backupForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:backupForm]
building SimpleValue for backupForm
Building property backupForm
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=depart, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property depart with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:depart]
building SimpleValue for depart
Building property depart
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=importance, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property importance with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:importance]
building SimpleValue for importance
Building property importance
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=principle, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property principle with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:principle]
building SimpleValue for principle
Building property principle
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=remark, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property remark with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:remark]
building SimpleValue for remark
Building property remark
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=save_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property saveForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:saveForm]
building SimpleValue for saveForm
Building property saveForm
Binding entity from annotated class: sw.entity.ProRef
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ProRef
Bind entity sw.entity.ProRef on table t_project_refence
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ProRef:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='ref_pro_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=reference_file, insertable=true, updatable=true, unique=false}
Building property referenceFile
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Binding entity from annotated class: sw.entity.UserGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name UserGroup
Bind entity sw.entity.UserGroup on table t_usergroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=is_headman, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property isHeadman with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:isHeadman]
building SimpleValue for isHeadman
Building property isHeadman
Binding column: Ejb3JoinColumn{logicalColumnName='modify_userid', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.Menu
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Menu
Bind entity sw.entity.Menu on table t_menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=href, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property href with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:href]
building SimpleValue for href
Building property href
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=pid, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property pid with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:pid]
building SimpleValue for pid
Building property pid
Binding entity from annotated class: sw.entity.ReferenceFile
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ReferenceFile
Bind entity sw.entity.ReferenceFile on table t_referencefile
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=company, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property company with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:company]
building SimpleValue for company
Building property company
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=file_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property fileName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:fileName]
building SimpleValue for fileName
Building property fileName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=publish_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property publishDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:publishDate]
building SimpleValue for publishDate
Building property publishDate
Binding entity from annotated class: sw.entity.Project
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Project
Bind entity sw.entity.Project on table t_project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:name]
building SimpleValue for name
Building property name
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.AssetType
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AssetType
Bind entity sw.entity.AssetType on table t_asset_type
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Action
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Action
Bind entity sw.entity.Action on table t_action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=url, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property url with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:url]
building SimpleValue for url
Building property url
Binding entity from annotated class: sw.entity.ActionGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ActionGroup
Bind entity sw.entity.ActionGroup on table t_actiongroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='action_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=action, insertable=true, updatable=true, unique=false}
Building property action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for info
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for backupForm
Starting fillSimpleValue for depart
Starting fillSimpleValue for description
Starting fillSimpleValue for importance
Starting fillSimpleValue for name
Starting fillSimpleValue for principle
Starting fillSimpleValue for remark
Starting fillSimpleValue for saveForm
Starting fillSimpleValue for id
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for isHeadman
Starting fillSimpleValue for id
Starting fillSimpleValue for href
Starting fillSimpleValue for name
Starting fillSimpleValue for pid
Starting fillSimpleValue for id
Starting fillSimpleValue for company
Starting fillSimpleValue for fileName
Starting fillSimpleValue for publishDate
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for description
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for url
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Forcing column [id] to be non-null as it is part of the primary key for table [t_group]
Forcing column [id] to be non-null as it is part of the primary key for table [t_asset]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project_refence]
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Forcing column [id] to be non-null as it is part of the primary key for table [t_usergroup]
Forcing column [id] to be non-null as it is part of the primary key for table [t_menu]
Forcing column [id] to be non-null as it is part of the primary key for table [t_referencefile]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project]
Forcing column [id] to be non-null as it is part of the primary key for table [t_asset_type]
Forcing column [id] to be non-null as it is part of the primary key for table [t_action]
Forcing column [id] to be non-null as it is part of the primary key for table [t_actiongroup]
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.AssetType
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.ReferenceFile
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.AssetType
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.ReferenceFile
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@12e5a524
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3266163620200112043.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=14304, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@70cb0891, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@14b8d3b1{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar;C:\Users\LR\.m2\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;C:\Users\LR\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\LR\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi\3.14\poi-3.14.jar;C:\Users\LR\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi-ooxml\3.14\poi-ooxml-3.14.jar;C:\Users\LR\.m2\repository\com\github\virtuald\curvesapi\1.03\curvesapi-1.03.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi-ooxml-schemas\3.14\poi-ooxml-schemas-3.14.jar;C:\Users\LR\.m2\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;C:\Users\LR\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3266163620200112043.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@207bab0e, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@54cd967d, payload=[Ljava.lang.Class;@1948b67a}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@4812e0f9, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@32170dcb}, constraintType=GENERIC}.
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@ed2adc1, payload=[Ljava.lang.Class;@4c1ed33a}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@72d75997, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@13df41ac}, constraintType=GENERIC}.
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Static SQL for entity: sw.entity.Group
 Version select: select id from t_group where id =?
 Snapshot select: select group_.id, group_.create_date as create_d2_4_, group_.info as info3_4_, group_.user_id as user_id5_4_, group_.name as name4_4_ from t_group group_ where group_.id=?
 Insert 0: insert into t_group (create_date, info, user_id, name, id) values (?, ?, ?, ?, ?)
 Update 0: update t_group set create_date=?, info=?, user_id=?, name=? where id=?
 Delete 0: delete from t_group where id=?
 Identity insert: insert into t_group (create_date, info, user_id, name) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ccf822]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@632f565]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_9_1_}

Static select for entity sw.entity.Group [NONE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_9_1_, user1_.email as email2_9_1_, user1_.name as name3_9_1_, user1_.password as password4_9_1_, user1_.tel as tel5_9_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18971345]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@627a5c8e]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_9_1_}

Static select for entity sw.entity.Group [READ]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_9_1_, user1_.email as email2_9_1_, user1_.name as name3_9_1_, user1_.password as password4_9_1_, user1_.tel as tel5_9_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@106523e1]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33c5dad7]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43e13b1a]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22d1ee48]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE_NOWAIT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fdf8ba7]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cf265b6]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE_SKIPLOCKED]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@317c7bce]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f33d29]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [FORCE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a232bf4]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2091266e]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_READ]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cf75d20]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b74ab6c]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_WRITE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22ff5e3a]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e9b5ef0]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1aaf84]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24ffa2eb]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [OPTIMISTIC]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50e7045a]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c58f563]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [OPTIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Group: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Group: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static SQL for entity: sw.entity.Asset
 Version select: select id from t_asset where id =?
 Snapshot select: select asset_.id, asset_.ass_typ_id as ass_typ10_2_, asset_.backup_form as backup_f2_2_, asset_.depart as depart3_2_, asset_.description as descript4_2_, asset_.importance as importan5_2_, asset_.name as name6_2_, asset_.principle as principl7_2_, asset_.project_id as project11_2_, asset_.remark as remark8_2_, asset_.save_form as save_for9_2_ from t_asset asset_ where asset_.id=?
 Insert 0: insert into t_asset (ass_typ_id, backup_form, depart, description, importance, name, principle, project_id, remark, save_form, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update t_asset set ass_typ_id=?, backup_form=?, depart=?, description=?, importance=?, name=?, principle=?, project_id=?, remark=?, save_form=? where id=?
 Delete 0: delete from t_asset where id=?
 Identity insert: insert into t_asset (ass_typ_id, backup_form, depart, description, importance, name, principle, project_id, remark, save_form) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@298b886]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b622765]
Visiting attribute path : assetType.name
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f33e3c4]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21e5ed1d]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.Asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(assetType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.AssetType)
                - SQL table alias mapping - assettype1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_9_3_}

Static select for entity sw.entity.Asset [NONE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_, assettype1_.id as id1_3_1_, assettype1_.name as name2_3_1_, project2_.id as id1_6_2_, project2_.create_date as create_d2_6_2_, project2_.description as descript3_6_2_, project2_.name as name4_6_2_, project2_.user_id as user_id5_6_2_, user3_.id as id1_9_3_, user3_.email as email2_9_3_, user3_.name as name3_9_3_, user3_.password as password4_9_3_, user3_.tel as tel5_9_3_ from t_asset asset0_ left outer join t_asset_type assettype1_ on asset0_.ass_typ_id=assettype1_.id left outer join t_project project2_ on asset0_.project_id=project2_.id left outer join t_user user3_ on project2_.user_id=user3_.id where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38ffeaa7]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48c4e1bf]
Visiting attribute path : assetType.name
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47aef043]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55397a35]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.Asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(assetType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.AssetType)
                - SQL table alias mapping - assettype1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_9_3_}

Static select for entity sw.entity.Asset [READ]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_, assettype1_.id as id1_3_1_, assettype1_.name as name2_3_1_, project2_.id as id1_6_2_, project2_.create_date as create_d2_6_2_, project2_.description as descript3_6_2_, project2_.name as name4_6_2_, project2_.user_id as user_id5_6_2_, user3_.id as id1_9_3_, user3_.email as email2_9_3_, user3_.name as name3_9_3_, user3_.password as password4_9_3_, user3_.tel as tel5_9_3_ from t_asset asset0_ left outer join t_asset_type assettype1_ on asset0_.ass_typ_id=assettype1_.id left outer join t_project project2_ on asset0_.project_id=project2_.id left outer join t_user user3_ on project2_.user_id=user3_.id where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79bb474b]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@207bb937]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@557f7656]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76ddf2ad]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59edea59]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@770eeaf4]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE_NOWAIT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e5f3622]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e2d6568]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e747b13]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE_SKIPLOCKED]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@790dbed9]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d65b0]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e2c3a29]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [FORCE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a43be43]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46c02c55]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6912bbd6]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_READ]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e64b111]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2445085]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ef48710]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_WRITE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75134de6]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bebd4c6]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@417d1cac]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_FORCE_INCREMENT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e6e1518]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bd7da4d]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22e62fe7]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [OPTIMISTIC]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c7e3876]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cf1c940]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f7b482e]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [OPTIMISTIC_FORCE_INCREMENT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Asset: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Asset: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static SQL for entity: sw.entity.ProRef
 Version select: select id from t_project_refence where id =?
 Snapshot select: select proref_.id, proref_.project_id as project_2_7_, proref_.ref_pro_id as ref_pro_3_7_ from t_project_refence proref_ where proref_.id=?
 Insert 0: insert into t_project_refence (project_id, ref_pro_id, id) values (?, ?, ?)
 Update 0: update t_project_refence set project_id=?, ref_pro_id=? where id=?
 Delete 0: delete from t_project_refence where id=?
 Identity insert: insert into t_project_refence (project_id, ref_pro_id) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@624b703f]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@523d3839]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec16e29]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67054da0]
Visiting attribute path : referenceFile.company
Visiting attribute path : referenceFile.fileName
Visiting attribute path : referenceFile.publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_9_2_}
          - JOIN (JoinDefinedByMetadata(referenceFile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.ReferenceFile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_8_3_}

Static select for entity sw.entity.ProRef [NONE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_, project1_.id as id1_6_1_, project1_.create_date as create_d2_6_1_, project1_.description as descript3_6_1_, project1_.name as name4_6_1_, project1_.user_id as user_id5_6_1_, user2_.id as id1_9_2_, user2_.email as email2_9_2_, user2_.name as name3_9_2_, user2_.password as password4_9_2_, user2_.tel as tel5_9_2_, referencef3_.id as id1_8_3_, referencef3_.company as company2_8_3_, referencef3_.file_name as file_nam3_8_3_, referencef3_.publish_date as publish_4_8_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44a7947f]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4759effa]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ee48749]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a002ed6]
Visiting attribute path : referenceFile.company
Visiting attribute path : referenceFile.fileName
Visiting attribute path : referenceFile.publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_9_2_}
          - JOIN (JoinDefinedByMetadata(referenceFile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.ReferenceFile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_8_3_}

Static select for entity sw.entity.ProRef [READ]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_, project1_.id as id1_6_1_, project1_.create_date as create_d2_6_1_, project1_.description as descript3_6_1_, project1_.name as name4_6_1_, project1_.user_id as user_id5_6_1_, user2_.id as id1_9_2_, user2_.email as email2_9_2_, user2_.name as name3_9_2_, user2_.password as password4_9_2_, user2_.tel as tel5_9_2_, referencef3_.id as id1_8_3_, referencef3_.company as company2_8_3_, referencef3_.file_name as file_nam3_8_3_, referencef3_.publish_date as publish_4_8_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4161a4c2]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ab01ad]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f89fc86]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3021601]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37bbb512]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@375602af]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE_NOWAIT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24f7a85a]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bc74c75]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c037ad8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE_SKIPLOCKED]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@652fa87a]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4655591d]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21672eb5]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [FORCE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39133e9b]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@521e306b]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a14ae1b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_READ]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a53a624]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f1ca738]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6097b4b6]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_WRITE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17824c06]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43ecb98d]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e839742]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1be41ae8]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b8077d0]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@93bd865]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3233b0f0]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23838638]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ac9add]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ProRef: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ProRef: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_9_, user_.name as name3_9_, user_.password as password4_9_, user_.tel as tel5_9_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb71088]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@655d1031]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1667794b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4643c99e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2618f6c6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2120c765]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8e173a8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@699b8198]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73e7a9d0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33f17c25]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4afb98d1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=?
Static SQL for entity: sw.entity.UserGroup
 Version select: select id from t_usergroup where id =?
 Snapshot select: select usergroup_.id, usergroup_.create_date as create_d2_10_, usergroup_.group_id as group_id4_10_, usergroup_.is_headman as is_headm3_10_, usergroup_.modify_userid as modify_u5_10_, usergroup_.project_id as project_6_10_, usergroup_.user_id as user_id7_10_ from t_usergroup usergroup_ where usergroup_.id=?
 Insert 0: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update t_usergroup set create_date=?, group_id=?, is_headman=?, modify_userid=?, project_id=?, user_id=? where id=?
 Delete 0: delete from t_usergroup where id=?
 Identity insert: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id) values (?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69cad77f]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bdcffc2]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61fc8b04]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2efb01d4]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63549f26]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@693b7a5d]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@640cd26c]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_9_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_9_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_6_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_9_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_9_6_}

Static select for entity sw.entity.UserGroup [NONE]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_, group1_.id as id1_4_1_, group1_.create_date as create_d2_4_1_, group1_.info as info3_4_1_, group1_.user_id as user_id5_4_1_, group1_.name as name4_4_1_, user2_.id as id1_9_2_, user2_.email as email2_9_2_, user2_.name as name3_9_2_, user2_.password as password4_9_2_, user2_.tel as tel5_9_2_, user3_.id as id1_9_3_, user3_.email as email2_9_3_, user3_.name as name3_9_3_, user3_.password as password4_9_3_, user3_.tel as tel5_9_3_, project4_.id as id1_6_4_, project4_.create_date as create_d2_6_4_, project4_.description as descript3_6_4_, project4_.name as name4_6_4_, project4_.user_id as user_id5_6_4_, user5_.id as id1_9_5_, user5_.email as email2_9_5_, user5_.name as name3_9_5_, user5_.password as password4_9_5_, user5_.tel as tel5_9_5_, user6_.id as id1_9_6_, user6_.email as email2_9_6_, user6_.name as name3_9_6_, user6_.password as password4_9_6_, user6_.tel as tel5_9_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8df31f8]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f154089]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7643f89c]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d464bf1]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6114eeaa]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7441dd1f]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69c61a26]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_9_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_9_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_6_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_9_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_9_6_}

Static select for entity sw.entity.UserGroup [READ]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_, group1_.id as id1_4_1_, group1_.create_date as create_d2_4_1_, group1_.info as info3_4_1_, group1_.user_id as user_id5_4_1_, group1_.name as name4_4_1_, user2_.id as id1_9_2_, user2_.email as email2_9_2_, user2_.name as name3_9_2_, user2_.password as password4_9_2_, user2_.tel as tel5_9_2_, user3_.id as id1_9_3_, user3_.email as email2_9_3_, user3_.name as name3_9_3_, user3_.password as password4_9_3_, user3_.tel as tel5_9_3_, project4_.id as id1_6_4_, project4_.create_date as create_d2_6_4_, project4_.description as descript3_6_4_, project4_.name as name4_6_4_, project4_.user_id as user_id5_6_4_, user5_.id as id1_9_5_, user5_.email as email2_9_5_, user5_.name as name3_9_5_, user5_.password as password4_9_5_, user5_.tel as tel5_9_5_, user6_.id as id1_9_6_, user6_.email as email2_9_6_, user6_.name as name3_9_6_, user6_.password as password4_9_6_, user6_.tel as tel5_9_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70630ba5]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8eb656f]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e3bc65]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e35a13f]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15f9f1c4]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [UPGRADE]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@466a2e09]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e0edcfd]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44a37929]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ae1dd2]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39efd88]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_NOWAIT]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b1f2032]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1749ad83]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63cf605f]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7143d2a4]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16bcfafb]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_SKIPLOCKED]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cc3781a]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b2f1a81]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a35543d]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1de1f6c9]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7830cd2c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [FORCE]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b882bb9]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4939f641]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@379e0be7]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d312b4e]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76d4a0ed]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_READ]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70d9cb88]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@737001b9]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20f014f2]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ecb1eef]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50e0e77e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_WRITE]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@236e5912]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4563c4f3]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12ef1036]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43986db0]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c3eda1c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57a1d334]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d5018af]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47c4cb23]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ea5889c]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bafb3b9]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36875703]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65a89c38]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@136cd94f]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f5fbb6e]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10522da1]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.UserGroup: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.UserGroup: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static SQL for entity: sw.entity.Menu
 Version select: select id from t_menu where id =?
 Snapshot select: select menu_.id, menu_.href as href2_5_, menu_.name as name3_5_, menu_.pid as pid4_5_ from t_menu menu_ where menu_.id=?
 Insert 0: insert into t_menu (href, name, pid, id) values (?, ?, ?, ?)
 Update 0: update t_menu set href=?, name=?, pid=? where id=?
 Delete 0: delete from t_menu where id=?
 Identity insert: insert into t_menu (href, name, pid) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@313a3acf]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [NONE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@268f6c2e]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [READ]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@473dc810]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17329188]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE_NOWAIT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12e82980]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE_SKIPLOCKED]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5042a2bb]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [FORCE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@580f36a9]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_READ]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3073e277]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_WRITE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f8dd651]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b509b15]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@746c2225]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Menu: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Menu: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static SQL for entity: sw.entity.ReferenceFile
 Version select: select id from t_referencefile where id =?
 Snapshot select: select referencef_.id, referencef_.company as company2_8_, referencef_.file_name as file_nam3_8_, referencef_.publish_date as publish_4_8_ from t_referencefile referencef_ where referencef_.id=?
 Insert 0: insert into t_referencefile (company, file_name, publish_date, id) values (?, ?, ?, ?)
 Update 0: update t_referencefile set company=?, file_name=?, publish_date=? where id=?
 Delete 0: delete from t_referencefile where id=?
 Identity insert: insert into t_referencefile (company, file_name, publish_date) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22004d68]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [NONE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6081f5c7]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [READ]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52c08a9e]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@432c0d3]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE_NOWAIT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f430719]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE_SKIPLOCKED]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17906cfc]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [FORCE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56cd3f2b]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_READ]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77abea32]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_WRITE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@752224bc]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a76c46a]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [OPTIMISTIC]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f488dda]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [OPTIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ReferenceFile: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ReferenceFile: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static SQL for entity: sw.entity.Project
 Version select: select id from t_project where id =?
 Snapshot select: select project_.id, project_.create_date as create_d2_6_, project_.description as descript3_6_, project_.name as name4_6_, project_.user_id as user_id5_6_ from t_project project_ where project_.id=?
 Insert 0: insert into t_project (create_date, description, name, user_id, id) values (?, ?, ?, ?, ?)
 Update 0: update t_project set create_date=?, description=?, name=?, user_id=? where id=?
 Delete 0: delete from t_project where id=?
 Identity insert: insert into t_project (create_date, description, name, user_id) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23766b38]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@590f4821]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_9_1_}

Static select for entity sw.entity.Project [NONE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_9_1_, user1_.email as email2_9_1_, user1_.name as name3_9_1_, user1_.password as password4_9_1_, user1_.tel as tel5_9_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bf4672e]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6be7e5bb]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_9_1_}

Static select for entity sw.entity.Project [READ]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_9_1_, user1_.email as email2_9_1_, user1_.name as name3_9_1_, user1_.password as password4_9_1_, user1_.tel as tel5_9_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75b6a9d]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c46b89a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4658d23c]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40e988ca]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE_NOWAIT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39126a25]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79afa2dd]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE_SKIPLOCKED]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@750cdafa]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a6bfb17]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [FORCE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ed61fcd]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ca3b54d]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_READ]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39f54e8d]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c5920f5]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_WRITE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d11e9ee]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@114fe170]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34342524]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32b0d998]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [OPTIMISTIC]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c1afadf]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@182d52d6]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [OPTIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Project: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Project: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static SQL for entity: sw.entity.AssetType
 Version select: select id from t_asset_type where id =?
 Snapshot select: select assettype_.id, assettype_.name as name2_3_ from t_asset_type assettype_ where assettype_.id=?
 Insert 0: insert into t_asset_type (name, id) values (?, ?)
 Update 0: update t_asset_type set name=? where id=?
 Delete 0: delete from t_asset_type where id=?
 Identity insert: insert into t_asset_type (name) values (?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ce53452]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [NONE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79a5339b]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [READ]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@eae8700]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ead6e09]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE_NOWAIT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c690fbd]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE_SKIPLOCKED]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6233dd70]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [FORCE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78cf9755]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_READ]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a6b9130]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_WRITE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@92e2353]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_FORCE_INCREMENT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51bdc2c8]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [OPTIMISTIC]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f1cb097]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [OPTIMISTIC_FORCE_INCREMENT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.AssetType: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.AssetType: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static SQL for entity: sw.entity.Action
 Version select: select id from t_action where id =?
 Snapshot select: select action_.id, action_.menu_id as menu_id4_0_, action_.name as name2_0_, action_.url as url3_0_ from t_action action_ where action_.id=?
 Insert 0: insert into t_action (menu_id, name, url, id) values (?, ?, ?, ?)
 Update 0: update t_action set menu_id=?, name=?, url=? where id=?
 Delete 0: delete from t_action where id=?
 Identity insert: insert into t_action (menu_id, name, url) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e7740db]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27fdb87]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

Static select for entity sw.entity.Action [NONE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_5_1_, menu1_.href as href2_5_1_, menu1_.name as name3_5_1_, menu1_.pid as pid4_5_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c9e3e2a]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32ae8dd4]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

Static select for entity sw.entity.Action [READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_5_1_, menu1_.href as href2_5_1_, menu1_.name as name3_5_1_, menu1_.pid as pid4_5_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39029875]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f968bc4]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fdb8a1c]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3815b7fa]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_NOWAIT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33d6c397]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7995d042]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_SKIPLOCKED]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c2a02ed]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18de15cf]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [FORCE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f9ed156]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@374a8e4b]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f528500]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69169ebf]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_WRITE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@acd7d00]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58c4a93d]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fa37fc]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41796216]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c09b645]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fc8e65d]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static SQL for entity: sw.entity.ActionGroup
 Version select: select id from t_actiongroup where id =?
 Snapshot select: select actiongrou_.id, actiongrou_.action_id as action_i3_1_, actiongrou_.create_date as create_d2_1_, actiongrou_.group_id as group_id4_1_, actiongrou_.menu_id as menu_id5_1_, actiongrou_.user_id as user_id6_1_ from t_actiongroup actiongrou_ where actiongrou_.id=?
 Insert 0: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update t_actiongroup set action_id=?, create_date=?, group_id=?, menu_id=?, user_id=? where id=?
 Delete 0: delete from t_actiongroup where id=?
 Identity insert: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id) values (?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75ab4260]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dcfb536]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a9aac4f]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@650a7e9f]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75c9c286]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@163007f1]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@408fdc25]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_9_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_5_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_9_6_}

Static select for entity sw.entity.ActionGroup [NONE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_5_2_, menu2_.href as href2_5_2_, menu2_.name as name3_5_2_, menu2_.pid as pid4_5_2_, group3_.id as id1_4_3_, group3_.create_date as create_d2_4_3_, group3_.info as info3_4_3_, group3_.user_id as user_id5_4_3_, group3_.name as name4_4_3_, user4_.id as id1_9_4_, user4_.email as email2_9_4_, user4_.name as name3_9_4_, user4_.password as password4_9_4_, user4_.tel as tel5_9_4_, menu5_.id as id1_5_5_, menu5_.href as href2_5_5_, menu5_.name as name3_5_5_, menu5_.pid as pid4_5_5_, user6_.id as id1_9_6_, user6_.email as email2_9_6_, user6_.name as name3_9_6_, user6_.password as password4_9_6_, user6_.tel as tel5_9_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35d2a497]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fbe2c61]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65dd269c]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fe0550f]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4830a3e1]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1929d928]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c57b8dc]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_9_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_5_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_9_6_}

Static select for entity sw.entity.ActionGroup [READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_5_2_, menu2_.href as href2_5_2_, menu2_.name as name3_5_2_, menu2_.pid as pid4_5_2_, group3_.id as id1_4_3_, group3_.create_date as create_d2_4_3_, group3_.info as info3_4_3_, group3_.user_id as user_id5_4_3_, group3_.name as name4_4_3_, user4_.id as id1_9_4_, user4_.email as email2_9_4_, user4_.name as name3_9_4_, user4_.password as password4_9_4_, user4_.tel as tel5_9_4_, menu5_.id as id1_5_5_, menu5_.href as href2_5_5_, menu5_.name as name3_5_5_, menu5_.pid as pid4_5_5_, user6_.id as id1_9_6_, user6_.email as email2_9_6_, user6_.name as name3_9_6_, user6_.password as password4_9_6_, user6_.tel as tel5_9_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a59110b]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13b15192]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7de92630]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fbaa1cf]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61575760]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78f3a719]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6681a214]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3db605f3]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5818a633]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a0148ef]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_NOWAIT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17bc6b9]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11dbc478]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@717db09c]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2eecee04]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c669123]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_SKIPLOCKED]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@135176d3]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46618e49]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e66e02f]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3619fcde]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fefd01d]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [FORCE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55b6166f]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@354e0935]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54c048b9]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31a02920]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a787ff9]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fbade22]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19b011c8]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60ce32b0]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49acbb45]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e055838]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_WRITE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37222261]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a322c9c]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e72617a]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28e57bff]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48810f81]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53cc9cc1]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d91feca]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d2c0dfe]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a31b20e]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3666a8fd]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74c37755]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2efba73f]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d59d35d]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@424f707c]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35eb1c4c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Instantiated session factory
HHH000228: Running hbm2ddl schema update
No alter strings for table : t_action
No alter strings for table : t_actiongroup
No alter strings for table : t_asset
No alter strings for table : t_asset_type
No alter strings for table : t_group
No alter strings for table : t_menu
No alter strings for table : t_project
No alter strings for table : t_project_refence
No alter strings for table : t_referencefile
No alter strings for table : t_user
No alter strings for table : t_usergroup
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@278424e7
Registering SessionFactory: 6d326f4a-2b43-430c-b0cb-c029f49d4371 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@731d2023
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36495a22: startup date [Tue Nov 21 08:08:39 CST 2017]; root of context hierarchy
Mapped "{[/pro/projectList],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectPage(org.springframework.ui.Model)
Mapped "{[/pro/updateProject],methods=[POST]}" onto public java.lang.String sw.controller.ProjectController.updateProject(sw.entity.Project)
Mapped "{[/pro/projectAdd],methods=[POST]}" onto public java.lang.String sw.controller.ProjectController.projectAdd(sw.entity.Project,org.springframework.ui.Model)
Mapped "{[/pro/delProject/{id}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.delCollege(int)
Mapped "{[/pro/findAllGroups/{projectId}],methods=[GET]}" onto public void sw.controller.ProjectController.findAllGroups(int,org.springframework.ui.Model)
Mapped "{[/pro/menu]}" onto public sw.model.MMenu sw.controller.ProjectController.findByroot()
Mapped "{[/pro/projectMain/{projectId}/{groupIds}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectMain(int,java.lang.String,org.springframework.ui.Model)
Mapped "{[/pro/projectForm/{id}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectForm(int,org.springframework.ui.Model)
Mapped "{[/pro/projectForm],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectFormView(org.springframework.ui.Model)
Mapped "{[/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage(org.springframework.ui.Model)
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model,javax.servlet.http.HttpSession)
Mapped "{[/logout],methods=[GET]}" onto public java.lang.String sw.controller.UserController.logout(javax.servlet.http.HttpSession)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession) throws java.io.IOException
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 23.58 seconds (JVM running for 24.835)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@34a16534
HHH000397: Using ASTQueryTranslatorFactory
parse() - HQL: select generatedAlias0 from sw.entity.Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'sw'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Project'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'user'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : sw.entity.Project (generatedAlias0) -> project0_
Resolved : generatedAlias0 -> project0_.id
getDataType() : user -> org.hibernate.type.ManyToOneType(sw.entity.User)
dereferenceEntityJoin() : generating join for user in sw.entity.Project (generatedAlias1) parent = [ {null} ]
FromClause{level=1} : sw.entity.User (generatedAlias1) -> user1_
addJoinByPathMap() : generatedAlias0.user -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=t_user,tableAlias=user1_,origin=t_project project0_,columns={project0_.user_id ,className=sw.entity.User}}
Resolved : generatedAlias0.user -> project0_.user_id
createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 't_user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=sw.entity.Project.user,tableName=t_user,tableAlias=user1_,origin=t_project project0_,columns={project0_.user_id ,className=sw.entity.User}}

Resolved : generatedAlias0 -> project0_.id
Resolved : generatedAlias1 -> user1_.id
getDataType() : id -> org.hibernate.type.IntegerType@4593e6bc
Resolved : generatedAlias1.id -> user1_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} project0_.id ) ( FromClause{level=1} ( t_project project0_ t_user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
Using FROM fragment [t_project project0_]
Using FROM fragment [left outer join t_user user1_ on project0_.user_id=user1_.id]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (t_user,t_project)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'project0_.id as id1_6_' {alias=generatedAlias0, className=sw.entity.Project, tableAlias=project0_}
    |  \-[SQL_TOKEN] SqlFragment: 'project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[project0_, user1_], fromElementsByPath=[generatedAlias0.user], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 't_project project0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=t_project,tableAlias=project0_,origin=null,columns={,className=sw.entity.Project}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join t_user user1_ on project0_.user_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=sw.entity.Project.user,tableName=t_user,tableAlias=user1_,origin=t_project project0_,columns={project0_.user_id ,className=sw.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=sw.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=sw.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.IntegerType@4593e6bc}

throwQueryException() : no errors
HQL: select generatedAlias0 from sw.entity.Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
SQL: select project0_.id as id1_6_, project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
throwQueryException() : no errors
select project0_.id as id1_6_, project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
parse() - HQL: select generatedAlias0 from sw.entity.UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'sw'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'UserGroup'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'user'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : sw.entity.UserGroup (generatedAlias0) -> usergroup0_
Resolved : generatedAlias0 -> usergroup0_.id
getDataType() : user -> org.hibernate.type.ManyToOneType(sw.entity.User)
dereferenceEntityJoin() : generating join for user in sw.entity.UserGroup (generatedAlias1) parent = [ {null} ]
FromClause{level=1} : sw.entity.User (generatedAlias1) -> user1_
addJoinByPathMap() : generatedAlias0.user -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=t_user,tableAlias=user1_,origin=t_usergroup usergroup0_,columns={usergroup0_.user_id ,className=sw.entity.User}}
Resolved : generatedAlias0.user -> usergroup0_.user_id
createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 't_user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=sw.entity.UserGroup.user,tableName=t_user,tableAlias=user1_,origin=t_usergroup usergroup0_,columns={usergroup0_.user_id ,className=sw.entity.User}}

Resolved : generatedAlias0 -> usergroup0_.id
Resolved : generatedAlias1 -> user1_.id
getDataType() : id -> org.hibernate.type.IntegerType@4593e6bc
Resolved : generatedAlias1.id -> user1_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} usergroup0_.id ) ( FromClause{level=1} ( t_usergroup usergroup0_ t_user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
Using FROM fragment [t_usergroup usergroup0_]
Using FROM fragment [left outer join t_user user1_ on usergroup0_.user_id=user1_.id]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (t_user,t_usergroup)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'usergroup0_.id as id1_10_' {alias=generatedAlias0, className=sw.entity.UserGroup, tableAlias=usergroup0_}
    |  \-[SQL_TOKEN] SqlFragment: 'usergroup0_.create_date as create_d2_10_, usergroup0_.group_id as group_id4_10_, usergroup0_.is_headman as is_headm3_10_, usergroup0_.modify_userid as modify_u5_10_, usergroup0_.project_id as project_6_10_, usergroup0_.user_id as user_id7_10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[user1_, usergroup0_], fromElementsByPath=[generatedAlias0.user], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 't_usergroup usergroup0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=t_usergroup,tableAlias=usergroup0_,origin=null,columns={,className=sw.entity.UserGroup}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join t_user user1_ on usergroup0_.user_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=sw.entity.UserGroup.user,tableName=t_user,tableAlias=user1_,origin=t_usergroup usergroup0_,columns={usergroup0_.user_id ,className=sw.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=sw.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=sw.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.IntegerType@4593e6bc}

throwQueryException() : no errors
HQL: select generatedAlias0 from sw.entity.UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
SQL: select usergroup0_.id as id1_10_, usergroup0_.create_date as create_d2_10_, usergroup0_.group_id as group_id4_10_, usergroup0_.is_headman as is_headm3_10_, usergroup0_.modify_userid as modify_u5_10_, usergroup0_.project_id as project_6_10_, usergroup0_.user_id as user_id7_10_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
throwQueryException() : no errors
select usergroup0_.id as id1_10_, usergroup0_.create_date as create_d2_10_, usergroup0_.group_id as group_id4_10_, usergroup0_.is_headman as is_headm3_10_, usergroup0_.modify_userid as modify_u5_10_, usergroup0_.project_id as project_6_10_, usergroup0_.user_id as user_id7_10_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_9_1_, user1_.email as email2_9_1_, user1_.name as name3_9_1_, user1_.password as password4_9_1_, user1_.tel as tel5_9_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_9_1_, user1_.email as email2_9_1_, user1_.name as name3_9_1_, user1_.password as password4_9_1_, user1_.tel as tel5_9_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_9_1_, user1_.email as email2_9_1_, user1_.name as name3_9_1_, user1_.password as password4_9_1_, user1_.tel as tel5_9_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
begin
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_9_1_, user1_.email as email2_9_1_, user1_.name as name3_9_1_, user1_.password as password4_9_1_, user1_.tel as tel5_9_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#3]
Done materializing entity [sw.entity.Project#3]
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#3
committing
begin
Rendered criteria query -> select generatedAlias0 from Menu as generatedAlias0
parse() - HQL: select generatedAlias0 from sw.entity.Menu as generatedAlias0
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'sw'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Menu'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : sw.entity.Menu (generatedAlias0) -> menu0_
Resolved : generatedAlias0 -> menu0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} menu0_.id ) ( FromClause{level=1} t_menu menu0_ ) )
Using FROM fragment [t_menu menu0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (t_menu)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'menu0_.id as id1_5_' {alias=generatedAlias0, className=sw.entity.Menu, tableAlias=menu0_}
    |  \-[SQL_TOKEN] SqlFragment: 'menu0_.href as href2_5_, menu0_.name as name3_5_, menu0_.pid as pid4_5_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[menu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 't_menu menu0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=t_menu,tableAlias=menu0_,origin=null,columns={,className=sw.entity.Menu}}

throwQueryException() : no errors
HQL: select generatedAlias0 from sw.entity.Menu as generatedAlias0
SQL: select menu0_.id as id1_5_, menu0_.href as href2_5_, menu0_.name as name3_5_, menu0_.pid as pid4_5_ from t_menu menu0_
throwQueryException() : no errors
select menu0_.id as id1_5_, menu0_.href as href2_5_, menu0_.name as name3_5_, menu0_.pid as pid4_5_ from t_menu menu0_
Result set row: 0
Result row: EntityKey[sw.entity.Menu#1]
Result set row: 1
Result row: EntityKey[sw.entity.Menu#2]
Result set row: 2
Result row: EntityKey[sw.entity.Menu#3]
Result set row: 3
Result row: EntityKey[sw.entity.Menu#4]
Result set row: 4
Result row: EntityKey[sw.entity.Menu#5]
Result set row: 5
Result row: EntityKey[sw.entity.Menu#6]
Result set row: 6
Result row: EntityKey[sw.entity.Menu#7]
Result set row: 7
Result row: EntityKey[sw.entity.Menu#8]
Resolving associations for [sw.entity.Menu#1]
Done materializing entity [sw.entity.Menu#1]
Resolving associations for [sw.entity.Menu#2]
Done materializing entity [sw.entity.Menu#2]
Resolving associations for [sw.entity.Menu#3]
Done materializing entity [sw.entity.Menu#3]
Resolving associations for [sw.entity.Menu#4]
Done materializing entity [sw.entity.Menu#4]
Resolving associations for [sw.entity.Menu#5]
Done materializing entity [sw.entity.Menu#5]
Resolving associations for [sw.entity.Menu#6]
Done materializing entity [sw.entity.Menu#6]
Resolving associations for [sw.entity.Menu#7]
Done materializing entity [sw.entity.Menu#7]
Resolving associations for [sw.entity.Menu#8]
Done materializing entity [sw.entity.Menu#8]
committing
begin
committing
begin
Rendered criteria query -> select generatedAlias0 from Menu as generatedAlias0
select menu0_.id as id1_5_, menu0_.href as href2_5_, menu0_.name as name3_5_, menu0_.pid as pid4_5_ from t_menu menu0_
Result set row: 0
Result row: EntityKey[sw.entity.Menu#1]
Result set row: 1
Result row: EntityKey[sw.entity.Menu#2]
Result set row: 2
Result row: EntityKey[sw.entity.Menu#3]
Result set row: 3
Result row: EntityKey[sw.entity.Menu#4]
Result set row: 4
Result row: EntityKey[sw.entity.Menu#5]
Result set row: 5
Result row: EntityKey[sw.entity.Menu#6]
Result set row: 6
Result row: EntityKey[sw.entity.Menu#7]
Result set row: 7
Result row: EntityKey[sw.entity.Menu#8]
committing
begin
committing
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36495a22: startup date [Tue Nov 21 08:08:39 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 14304 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@565e776b: startup date [Tue Nov 21 10:00:25 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$61a5e493] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1673 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@249bc274
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@71fd3908{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.Action
		sw.entity.ActionGroup
		sw.entity.Asset
		sw.entity.AssetType
		sw.entity.Group
		sw.entity.Menu
		sw.entity.Project
		sw.entity.ProRef
		sw.entity.ReferenceFile
		sw.entity.User
		sw.entity.UserGroup]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@440b382f
Adding type registration boolean -> org.hibernate.type.BooleanType@440b382f
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@440b382f
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@655ba990
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4d9b639e
Adding type registration yes_no -> org.hibernate.type.YesNoType@457c5302
Adding type registration byte -> org.hibernate.type.ByteType@592386e8
Adding type registration byte -> org.hibernate.type.ByteType@592386e8
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@592386e8
Adding type registration character -> org.hibernate.type.CharacterType@6fba0cd3
Adding type registration char -> org.hibernate.type.CharacterType@6fba0cd3
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6fba0cd3
Adding type registration short -> org.hibernate.type.ShortType@7052e572
Adding type registration short -> org.hibernate.type.ShortType@7052e572
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7052e572
Adding type registration integer -> org.hibernate.type.IntegerType@4593e6bc
Adding type registration int -> org.hibernate.type.IntegerType@4593e6bc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4593e6bc
Adding type registration long -> org.hibernate.type.LongType@40661117
Adding type registration long -> org.hibernate.type.LongType@40661117
Adding type registration java.lang.Long -> org.hibernate.type.LongType@40661117
Adding type registration float -> org.hibernate.type.FloatType@7f0ddaa7
Adding type registration float -> org.hibernate.type.FloatType@7f0ddaa7
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f0ddaa7
Adding type registration double -> org.hibernate.type.DoubleType@1e0e8f7d
Adding type registration double -> org.hibernate.type.DoubleType@1e0e8f7d
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e0e8f7d
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@57182d31
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@57182d31
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6bc896aa
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6bc896aa
Adding type registration string -> org.hibernate.type.StringType@59d12143
Adding type registration java.lang.String -> org.hibernate.type.StringType@59d12143
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3de3667c
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4059e07e
Adding type registration url -> org.hibernate.type.UrlType@48013a0
Adding type registration java.net.URL -> org.hibernate.type.UrlType@48013a0
Adding type registration date -> org.hibernate.type.DateType@3789c885
Adding type registration java.sql.Date -> org.hibernate.type.DateType@3789c885
Adding type registration time -> org.hibernate.type.TimeType@6fc44700
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6fc44700
Adding type registration timestamp -> org.hibernate.type.TimestampType@a2b2aa9
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a2b2aa9
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a2b2aa9
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@318840e0
Adding type registration calendar -> org.hibernate.type.CalendarType@c233e2c
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@c233e2c
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@c233e2c
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b4d7051
Adding type registration locale -> org.hibernate.type.LocaleType@63abd346
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@63abd346
Adding type registration currency -> org.hibernate.type.CurrencyType@1b06c2e1
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1b06c2e1
Adding type registration timezone -> org.hibernate.type.TimeZoneType@67bcbe9c
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@67bcbe9c
Adding type registration class -> org.hibernate.type.ClassType@42fbdc03
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@42fbdc03
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@76f8f73d
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@76f8f73d
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3037804b
Adding type registration binary -> org.hibernate.type.BinaryType@7c882df3
Adding type registration byte[] -> org.hibernate.type.BinaryType@7c882df3
Adding type registration [B -> org.hibernate.type.BinaryType@7c882df3
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@203ec52
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@203ec52
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@203ec52
Adding type registration row_version -> org.hibernate.type.RowVersionType@306cee8d
Adding type registration image -> org.hibernate.type.ImageType@39985128
Adding type registration characters -> org.hibernate.type.CharArrayType@2b0f829c
Adding type registration char[] -> org.hibernate.type.CharArrayType@2b0f829c
Adding type registration [C -> org.hibernate.type.CharArrayType@2b0f829c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6ae446a6
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6ae446a6
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6ae446a6
Adding type registration text -> org.hibernate.type.TextType@228f4ab1
Adding type registration ntext -> org.hibernate.type.NTextType@3174a414
Adding type registration blob -> org.hibernate.type.BlobType@165696e8
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@165696e8
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e5087f1
Adding type registration clob -> org.hibernate.type.ClobType@3103117
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3103117
Adding type registration nclob -> org.hibernate.type.NClobType@2236b2a5
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2236b2a5
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ddfd345
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@243ca00c
Adding type registration serializable -> org.hibernate.type.SerializableType@6b4b7907
Adding type registration object -> org.hibernate.type.ObjectType@9ec5e24
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@9ec5e24
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3aaa7109
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1033f84a
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5ac73f1f
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1a1e5d52
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@73d54521
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7c2b02b9
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f77e5e4
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@776bcf95
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.Group
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Group
Bind entity sw.entity.Group on table t_group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=info, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property info with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:info]
building SimpleValue for info
Building property info
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Asset
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Asset
Bind entity sw.entity.Asset on table t_asset
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='ass_typ_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=asset_type, insertable=true, updatable=true, unique=false}
Building property assetType
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=backup_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property backupForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:backupForm]
building SimpleValue for backupForm
Building property backupForm
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=depart, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property depart with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:depart]
building SimpleValue for depart
Building property depart
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=importance, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property importance with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:importance]
building SimpleValue for importance
Building property importance
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=principle, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property principle with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:principle]
building SimpleValue for principle
Building property principle
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=remark, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property remark with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:remark]
building SimpleValue for remark
Building property remark
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=save_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property saveForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:saveForm]
building SimpleValue for saveForm
Building property saveForm
Binding entity from annotated class: sw.entity.ProRef
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ProRef
Bind entity sw.entity.ProRef on table t_project_refence
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ProRef:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='ref_pro_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=reference_file, insertable=true, updatable=true, unique=false}
Building property referenceFile
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Binding entity from annotated class: sw.entity.UserGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name UserGroup
Bind entity sw.entity.UserGroup on table t_usergroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=is_headman, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property isHeadman with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:isHeadman]
building SimpleValue for isHeadman
Building property isHeadman
Binding column: Ejb3JoinColumn{logicalColumnName='modify_userid', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.Menu
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Menu
Bind entity sw.entity.Menu on table t_menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=href, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property href with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:href]
building SimpleValue for href
Building property href
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=pid, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property pid with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:pid]
building SimpleValue for pid
Building property pid
Binding entity from annotated class: sw.entity.ReferenceFile
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ReferenceFile
Bind entity sw.entity.ReferenceFile on table t_referencefile
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=company, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property company with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:company]
building SimpleValue for company
Building property company
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=file_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property fileName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:fileName]
building SimpleValue for fileName
Building property fileName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=publish_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property publishDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:publishDate]
building SimpleValue for publishDate
Building property publishDate
Binding entity from annotated class: sw.entity.Project
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Project
Bind entity sw.entity.Project on table t_project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:name]
building SimpleValue for name
Building property name
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.AssetType
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AssetType
Bind entity sw.entity.AssetType on table t_asset_type
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Action
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Action
Bind entity sw.entity.Action on table t_action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=url, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property url with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:url]
building SimpleValue for url
Building property url
Binding entity from annotated class: sw.entity.ActionGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ActionGroup
Bind entity sw.entity.ActionGroup on table t_actiongroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='action_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=action, insertable=true, updatable=true, unique=false}
Building property action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for info
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for backupForm
Starting fillSimpleValue for depart
Starting fillSimpleValue for description
Starting fillSimpleValue for importance
Starting fillSimpleValue for name
Starting fillSimpleValue for principle
Starting fillSimpleValue for remark
Starting fillSimpleValue for saveForm
Starting fillSimpleValue for id
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for isHeadman
Starting fillSimpleValue for id
Starting fillSimpleValue for href
Starting fillSimpleValue for name
Starting fillSimpleValue for pid
Starting fillSimpleValue for id
Starting fillSimpleValue for company
Starting fillSimpleValue for fileName
Starting fillSimpleValue for publishDate
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for description
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for url
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Forcing column [id] to be non-null as it is part of the primary key for table [t_group]
Forcing column [id] to be non-null as it is part of the primary key for table [t_asset]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project_refence]
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Forcing column [id] to be non-null as it is part of the primary key for table [t_usergroup]
Forcing column [id] to be non-null as it is part of the primary key for table [t_menu]
Forcing column [id] to be non-null as it is part of the primary key for table [t_referencefile]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project]
Forcing column [id] to be non-null as it is part of the primary key for table [t_asset_type]
Forcing column [id] to be non-null as it is part of the primary key for table [t_action]
Forcing column [id] to be non-null as it is part of the primary key for table [t_actiongroup]
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.AssetType
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.ReferenceFile
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.AssetType
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.ReferenceFile
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@12e5a524
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3266163620200112043.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=14304, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5f8de3f6, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@71fd3908{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar;C:\Users\LR\.m2\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;C:\Users\LR\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\LR\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi\3.14\poi-3.14.jar;C:\Users\LR\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi-ooxml\3.14\poi-ooxml-3.14.jar;C:\Users\LR\.m2\repository\com\github\virtuald\curvesapi\1.03\curvesapi-1.03.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi-ooxml-schemas\3.14\poi-ooxml-schemas-3.14.jar;C:\Users\LR\.m2\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;C:\Users\LR\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3266163620200112043.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5293b7b7, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@3e864b71, payload=[Ljava.lang.Class;@9eb1a19}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@22bb2f07, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@7f135b61}, constraintType=GENERIC}.
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@4bb841ba, payload=[Ljava.lang.Class;@64d734d2}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@3d0b09e0, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@2feaa6b5}, constraintType=GENERIC}.
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Static SQL for entity: sw.entity.Group
 Version select: select id from t_group where id =?
 Snapshot select: select group_.id, group_.create_date as create_d2_4_, group_.info as info3_4_, group_.user_id as user_id5_4_, group_.name as name4_4_ from t_group group_ where group_.id=?
 Insert 0: insert into t_group (create_date, info, user_id, name, id) values (?, ?, ?, ?, ?)
 Update 0: update t_group set create_date=?, info=?, user_id=?, name=? where id=?
 Delete 0: delete from t_group where id=?
 Identity insert: insert into t_group (create_date, info, user_id, name) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76c8e982]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18a4116a]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_9_1_}

Static select for entity sw.entity.Group [NONE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_9_1_, user1_.email as email2_9_1_, user1_.name as name3_9_1_, user1_.password as password4_9_1_, user1_.tel as tel5_9_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bdcc2bc]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a0c67e3]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_9_1_}

Static select for entity sw.entity.Group [READ]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_9_1_, user1_.email as email2_9_1_, user1_.name as name3_9_1_, user1_.password as password4_9_1_, user1_.tel as tel5_9_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20b287ec]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2355d6fb]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d534774]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ffa285d]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE_NOWAIT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2295c157]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d1ec46a]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE_SKIPLOCKED]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2358b754]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58929494]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [FORCE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73042678]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6096f137]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_READ]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cecef85]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6df05b09]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_WRITE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ab810c9]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4681907d]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29c6b3b7]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@388c0f02]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [OPTIMISTIC]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72446216]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bc4931c]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [OPTIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Group: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Group: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static SQL for entity: sw.entity.Asset
 Version select: select id from t_asset where id =?
 Snapshot select: select asset_.id, asset_.ass_typ_id as ass_typ10_2_, asset_.backup_form as backup_f2_2_, asset_.depart as depart3_2_, asset_.description as descript4_2_, asset_.importance as importan5_2_, asset_.name as name6_2_, asset_.principle as principl7_2_, asset_.project_id as project11_2_, asset_.remark as remark8_2_, asset_.save_form as save_for9_2_ from t_asset asset_ where asset_.id=?
 Insert 0: insert into t_asset (ass_typ_id, backup_form, depart, description, importance, name, principle, project_id, remark, save_form, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update t_asset set ass_typ_id=?, backup_form=?, depart=?, description=?, importance=?, name=?, principle=?, project_id=?, remark=?, save_form=? where id=?
 Delete 0: delete from t_asset where id=?
 Identity insert: insert into t_asset (ass_typ_id, backup_form, depart, description, importance, name, principle, project_id, remark, save_form) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73e87d79]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@557eb953]
Visiting attribute path : assetType.name
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a9e211a]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7848bec]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.Asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(assetType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.AssetType)
                - SQL table alias mapping - assettype1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_9_3_}

Static select for entity sw.entity.Asset [NONE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_, assettype1_.id as id1_3_1_, assettype1_.name as name2_3_1_, project2_.id as id1_6_2_, project2_.create_date as create_d2_6_2_, project2_.description as descript3_6_2_, project2_.name as name4_6_2_, project2_.user_id as user_id5_6_2_, user3_.id as id1_9_3_, user3_.email as email2_9_3_, user3_.name as name3_9_3_, user3_.password as password4_9_3_, user3_.tel as tel5_9_3_ from t_asset asset0_ left outer join t_asset_type assettype1_ on asset0_.ass_typ_id=assettype1_.id left outer join t_project project2_ on asset0_.project_id=project2_.id left outer join t_user user3_ on project2_.user_id=user3_.id where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2af6274f]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e6a3aa2]
Visiting attribute path : assetType.name
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e196543]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c8e9a45]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.Asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(assetType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.AssetType)
                - SQL table alias mapping - assettype1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_9_3_}

Static select for entity sw.entity.Asset [READ]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_, assettype1_.id as id1_3_1_, assettype1_.name as name2_3_1_, project2_.id as id1_6_2_, project2_.create_date as create_d2_6_2_, project2_.description as descript3_6_2_, project2_.name as name4_6_2_, project2_.user_id as user_id5_6_2_, user3_.id as id1_9_3_, user3_.email as email2_9_3_, user3_.name as name3_9_3_, user3_.password as password4_9_3_, user3_.tel as tel5_9_3_ from t_asset asset0_ left outer join t_asset_type assettype1_ on asset0_.ass_typ_id=assettype1_.id left outer join t_project project2_ on asset0_.project_id=project2_.id left outer join t_user user3_ on project2_.user_id=user3_.id where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ba3c56e]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f779f2]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42043ee6]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47891b7d]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@282de52d]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b3d0dc0]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE_NOWAIT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44e0a529]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bdf257]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@224dbcad]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE_SKIPLOCKED]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63459c20]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3856bb1c]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77b1c06f]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [FORCE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38daf625]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d804366]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24cb5201]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_READ]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bcfe363]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58a574d6]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26806e99]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_WRITE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@126055d1]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a9bf7f9]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fcaa895]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_FORCE_INCREMENT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f94a260]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ab0c765]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30a44ca6]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [OPTIMISTIC]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ad97f70]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7734a573]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6567164f]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [OPTIMISTIC_FORCE_INCREMENT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Asset: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Asset: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static SQL for entity: sw.entity.ProRef
 Version select: select id from t_project_refence where id =?
 Snapshot select: select proref_.id, proref_.project_id as project_2_7_, proref_.ref_pro_id as ref_pro_3_7_ from t_project_refence proref_ where proref_.id=?
 Insert 0: insert into t_project_refence (project_id, ref_pro_id, id) values (?, ?, ?)
 Update 0: update t_project_refence set project_id=?, ref_pro_id=? where id=?
 Delete 0: delete from t_project_refence where id=?
 Identity insert: insert into t_project_refence (project_id, ref_pro_id) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64c4d76c]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@738b380b]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cbe5050]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57fbba14]
Visiting attribute path : referenceFile.company
Visiting attribute path : referenceFile.fileName
Visiting attribute path : referenceFile.publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_9_2_}
          - JOIN (JoinDefinedByMetadata(referenceFile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.ReferenceFile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_8_3_}

Static select for entity sw.entity.ProRef [NONE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_, project1_.id as id1_6_1_, project1_.create_date as create_d2_6_1_, project1_.description as descript3_6_1_, project1_.name as name4_6_1_, project1_.user_id as user_id5_6_1_, user2_.id as id1_9_2_, user2_.email as email2_9_2_, user2_.name as name3_9_2_, user2_.password as password4_9_2_, user2_.tel as tel5_9_2_, referencef3_.id as id1_8_3_, referencef3_.company as company2_8_3_, referencef3_.file_name as file_nam3_8_3_, referencef3_.publish_date as publish_4_8_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b027cc1]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5866ca45]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51cca505]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52b4d8ec]
Visiting attribute path : referenceFile.company
Visiting attribute path : referenceFile.fileName
Visiting attribute path : referenceFile.publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_9_2_}
          - JOIN (JoinDefinedByMetadata(referenceFile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.ReferenceFile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_8_3_}

Static select for entity sw.entity.ProRef [READ]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_, project1_.id as id1_6_1_, project1_.create_date as create_d2_6_1_, project1_.description as descript3_6_1_, project1_.name as name4_6_1_, project1_.user_id as user_id5_6_1_, user2_.id as id1_9_2_, user2_.email as email2_9_2_, user2_.name as name3_9_2_, user2_.password as password4_9_2_, user2_.tel as tel5_9_2_, referencef3_.id as id1_8_3_, referencef3_.company as company2_8_3_, referencef3_.file_name as file_nam3_8_3_, referencef3_.publish_date as publish_4_8_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e889013]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6663cb25]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b304d4d]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51225430]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ba794f9]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52b4e8e5]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE_NOWAIT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11f4b557]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f7556dc]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a737a17]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE_SKIPLOCKED]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e192803]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@231e0481]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@322c6137]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [FORCE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45821e41]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@232ff0f1]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72db187a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_READ]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27fe7076]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d49c5ab]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17fb02b0]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_WRITE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4352bdf9]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39b991d4]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7698ead1]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20732c8e]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c2b57b6]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d54f680]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64faa6f8]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f38500]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b699348]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ProRef: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ProRef: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_9_, user_.name as name3_9_, user_.password as password4_9_, user_.tel as tel5_9_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a1537bb]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f3d90a2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b32f195]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44d34c7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d4d0b3a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@777ab8d8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cec45b8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@614bc74]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d78e97c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9b3b076]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dca26c1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=?
Static SQL for entity: sw.entity.UserGroup
 Version select: select id from t_usergroup where id =?
 Snapshot select: select usergroup_.id, usergroup_.create_date as create_d2_10_, usergroup_.group_id as group_id4_10_, usergroup_.is_headman as is_headm3_10_, usergroup_.modify_userid as modify_u5_10_, usergroup_.project_id as project_6_10_, usergroup_.user_id as user_id7_10_ from t_usergroup usergroup_ where usergroup_.id=?
 Insert 0: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update t_usergroup set create_date=?, group_id=?, is_headman=?, modify_userid=?, project_id=?, user_id=? where id=?
 Delete 0: delete from t_usergroup where id=?
 Identity insert: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id) values (?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@496bcfab]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a951339]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f5a2efc]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35b1108d]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e9a02bb]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a58444e]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b236c35]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_9_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_9_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_6_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_9_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_9_6_}

Static select for entity sw.entity.UserGroup [NONE]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_, group1_.id as id1_4_1_, group1_.create_date as create_d2_4_1_, group1_.info as info3_4_1_, group1_.user_id as user_id5_4_1_, group1_.name as name4_4_1_, user2_.id as id1_9_2_, user2_.email as email2_9_2_, user2_.name as name3_9_2_, user2_.password as password4_9_2_, user2_.tel as tel5_9_2_, user3_.id as id1_9_3_, user3_.email as email2_9_3_, user3_.name as name3_9_3_, user3_.password as password4_9_3_, user3_.tel as tel5_9_3_, project4_.id as id1_6_4_, project4_.create_date as create_d2_6_4_, project4_.description as descript3_6_4_, project4_.name as name4_6_4_, project4_.user_id as user_id5_6_4_, user5_.id as id1_9_5_, user5_.email as email2_9_5_, user5_.name as name3_9_5_, user5_.password as password4_9_5_, user5_.tel as tel5_9_5_, user6_.id as id1_9_6_, user6_.email as email2_9_6_, user6_.name as name3_9_6_, user6_.password as password4_9_6_, user6_.tel as tel5_9_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@746cf9e6]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b7492f]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3af00c41]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e019296]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e590808]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@327dca21]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c0d9ba7]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_9_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_9_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_6_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_9_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_9_6_}

Static select for entity sw.entity.UserGroup [READ]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_, group1_.id as id1_4_1_, group1_.create_date as create_d2_4_1_, group1_.info as info3_4_1_, group1_.user_id as user_id5_4_1_, group1_.name as name4_4_1_, user2_.id as id1_9_2_, user2_.email as email2_9_2_, user2_.name as name3_9_2_, user2_.password as password4_9_2_, user2_.tel as tel5_9_2_, user3_.id as id1_9_3_, user3_.email as email2_9_3_, user3_.name as name3_9_3_, user3_.password as password4_9_3_, user3_.tel as tel5_9_3_, project4_.id as id1_6_4_, project4_.create_date as create_d2_6_4_, project4_.description as descript3_6_4_, project4_.name as name4_6_4_, project4_.user_id as user_id5_6_4_, user5_.id as id1_9_5_, user5_.email as email2_9_5_, user5_.name as name3_9_5_, user5_.password as password4_9_5_, user5_.tel as tel5_9_5_, user6_.id as id1_9_6_, user6_.email as email2_9_6_, user6_.name as name3_9_6_, user6_.password as password4_9_6_, user6_.tel as tel5_9_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4398d4ab]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fdb3897]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a00758]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@498b64b]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21354aca]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [UPGRADE]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@272cd1fb]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@675c48f2]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cb42dc9]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d568aad]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@373ffc06]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_NOWAIT]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@322129cb]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66ac6e8a]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e3b6195]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15ef6ae8]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e13c7ee]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_SKIPLOCKED]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b4e3a98]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40da58ae]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b6cbec]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a06ab98]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@623f78d2]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [FORCE]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70b24313]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59a8266c]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40c83c63]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@220055b2]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c3959bf]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_READ]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14ba9512]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@351de217]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73afa1aa]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33fda8c8]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@223a70ed]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_WRITE]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@786d23e7]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28a43259]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59e882b8]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@488be079]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35caa22e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c757834]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@360a6423]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56316b1e]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41121d34]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e0a4296]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b440c08]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@275ab3a2]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bd85b2d]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30772412]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4129ce3a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.UserGroup: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.UserGroup: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static SQL for entity: sw.entity.Menu
 Version select: select id from t_menu where id =?
 Snapshot select: select menu_.id, menu_.href as href2_5_, menu_.name as name3_5_, menu_.pid as pid4_5_ from t_menu menu_ where menu_.id=?
 Insert 0: insert into t_menu (href, name, pid, id) values (?, ?, ?, ?)
 Update 0: update t_menu set href=?, name=?, pid=? where id=?
 Delete 0: delete from t_menu where id=?
 Identity insert: insert into t_menu (href, name, pid) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@331ca21e]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [NONE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43ba7c89]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [READ]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ab7650b]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64c0db9c]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE_NOWAIT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60a0e439]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE_SKIPLOCKED]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c0faf]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [FORCE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5716f543]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_READ]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44a78a9d]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_WRITE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16cb51a3]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@649a91a0]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66bf10b6]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Menu: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Menu: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static SQL for entity: sw.entity.ReferenceFile
 Version select: select id from t_referencefile where id =?
 Snapshot select: select referencef_.id, referencef_.company as company2_8_, referencef_.file_name as file_nam3_8_, referencef_.publish_date as publish_4_8_ from t_referencefile referencef_ where referencef_.id=?
 Insert 0: insert into t_referencefile (company, file_name, publish_date, id) values (?, ?, ?, ?)
 Update 0: update t_referencefile set company=?, file_name=?, publish_date=? where id=?
 Delete 0: delete from t_referencefile where id=?
 Identity insert: insert into t_referencefile (company, file_name, publish_date) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@428360a2]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [NONE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e4045b8]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [READ]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52288bcb]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68a67144]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE_NOWAIT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e62926b]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE_SKIPLOCKED]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1df5514e]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [FORCE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e76a61d]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_READ]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e4f287b]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_WRITE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dee7c2b]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1879bf98]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [OPTIMISTIC]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b434536]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [OPTIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ReferenceFile: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ReferenceFile: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static SQL for entity: sw.entity.Project
 Version select: select id from t_project where id =?
 Snapshot select: select project_.id, project_.create_date as create_d2_6_, project_.description as descript3_6_, project_.name as name4_6_, project_.user_id as user_id5_6_ from t_project project_ where project_.id=?
 Insert 0: insert into t_project (create_date, description, name, user_id, id) values (?, ?, ?, ?, ?)
 Update 0: update t_project set create_date=?, description=?, name=?, user_id=? where id=?
 Delete 0: delete from t_project where id=?
 Identity insert: insert into t_project (create_date, description, name, user_id) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37b73b9]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1470fed3]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_9_1_}

Static select for entity sw.entity.Project [NONE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_9_1_, user1_.email as email2_9_1_, user1_.name as name3_9_1_, user1_.password as password4_9_1_, user1_.tel as tel5_9_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46734ec6]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bfe8a38]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_9_1_}

Static select for entity sw.entity.Project [READ]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_9_1_, user1_.email as email2_9_1_, user1_.name as name3_9_1_, user1_.password as password4_9_1_, user1_.tel as tel5_9_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@619ccab2]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5de829cd]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d8874e4]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e1dc855]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE_NOWAIT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72a7221a]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c8edd5]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE_SKIPLOCKED]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@117c2d9]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49c1017]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [FORCE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42fcf314]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b87233c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_READ]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f7f9af3]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4012cfa4]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_WRITE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12de8a59]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e8696ec]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68bf0177]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@460ffbe8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [OPTIMISTIC]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cb43433]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cf6f798]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [OPTIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Project: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Project: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static SQL for entity: sw.entity.AssetType
 Version select: select id from t_asset_type where id =?
 Snapshot select: select assettype_.id, assettype_.name as name2_3_ from t_asset_type assettype_ where assettype_.id=?
 Insert 0: insert into t_asset_type (name, id) values (?, ?)
 Update 0: update t_asset_type set name=? where id=?
 Delete 0: delete from t_asset_type where id=?
 Identity insert: insert into t_asset_type (name) values (?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@451f8355]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [NONE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75295c76]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [READ]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71406c7]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29842c62]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE_NOWAIT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71ad23dd]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE_SKIPLOCKED]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67ec6358]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [FORCE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6857a3e0]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_READ]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1efb51b3]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_WRITE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5da3665c]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_FORCE_INCREMENT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bf22d3c]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [OPTIMISTIC]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71073726]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [OPTIMISTIC_FORCE_INCREMENT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.AssetType: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.AssetType: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static SQL for entity: sw.entity.Action
 Version select: select id from t_action where id =?
 Snapshot select: select action_.id, action_.menu_id as menu_id4_0_, action_.name as name2_0_, action_.url as url3_0_ from t_action action_ where action_.id=?
 Insert 0: insert into t_action (menu_id, name, url, id) values (?, ?, ?, ?)
 Update 0: update t_action set menu_id=?, name=?, url=? where id=?
 Delete 0: delete from t_action where id=?
 Identity insert: insert into t_action (menu_id, name, url) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20105e60]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e30870b]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

Static select for entity sw.entity.Action [NONE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_5_1_, menu1_.href as href2_5_1_, menu1_.name as name3_5_1_, menu1_.pid as pid4_5_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e6c9462]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73384a18]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

Static select for entity sw.entity.Action [READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_5_1_, menu1_.href as href2_5_1_, menu1_.name as name3_5_1_, menu1_.pid as pid4_5_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c13a6e2]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@109af6ab]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11f3f701]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69ec3660]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_NOWAIT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e04ba58]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@438f8d2a]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_SKIPLOCKED]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bd8fc0d]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68b77009]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [FORCE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57ee46e8]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@317fcd4a]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@629bd454]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bb5d109]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_WRITE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ef40a8]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@474d8dbe]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@221531c7]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34ebf30d]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f60a853]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46dae465]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static SQL for entity: sw.entity.ActionGroup
 Version select: select id from t_actiongroup where id =?
 Snapshot select: select actiongrou_.id, actiongrou_.action_id as action_i3_1_, actiongrou_.create_date as create_d2_1_, actiongrou_.group_id as group_id4_1_, actiongrou_.menu_id as menu_id5_1_, actiongrou_.user_id as user_id6_1_ from t_actiongroup actiongrou_ where actiongrou_.id=?
 Insert 0: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update t_actiongroup set action_id=?, create_date=?, group_id=?, menu_id=?, user_id=? where id=?
 Delete 0: delete from t_actiongroup where id=?
 Identity insert: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id) values (?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dc21428]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22d40fcc]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ee20f24]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bc8b81f]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27d21dae]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@637a4c40]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5055fbce]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_9_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_5_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_9_6_}

Static select for entity sw.entity.ActionGroup [NONE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_5_2_, menu2_.href as href2_5_2_, menu2_.name as name3_5_2_, menu2_.pid as pid4_5_2_, group3_.id as id1_4_3_, group3_.create_date as create_d2_4_3_, group3_.info as info3_4_3_, group3_.user_id as user_id5_4_3_, group3_.name as name4_4_3_, user4_.id as id1_9_4_, user4_.email as email2_9_4_, user4_.name as name3_9_4_, user4_.password as password4_9_4_, user4_.tel as tel5_9_4_, menu5_.id as id1_5_5_, menu5_.href as href2_5_5_, menu5_.name as name3_5_5_, menu5_.pid as pid4_5_5_, user6_.id as id1_9_6_, user6_.email as email2_9_6_, user6_.name as name3_9_6_, user6_.password as password4_9_6_, user6_.tel as tel5_9_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ce0a6f8]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ecd081]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42e35115]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d8cc9a0]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21a974eb]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43bc5818]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a5f5ed]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_9_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_5_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_9_6_}

Static select for entity sw.entity.ActionGroup [READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_5_2_, menu2_.href as href2_5_2_, menu2_.name as name3_5_2_, menu2_.pid as pid4_5_2_, group3_.id as id1_4_3_, group3_.create_date as create_d2_4_3_, group3_.info as info3_4_3_, group3_.user_id as user_id5_4_3_, group3_.name as name4_4_3_, user4_.id as id1_9_4_, user4_.email as email2_9_4_, user4_.name as name3_9_4_, user4_.password as password4_9_4_, user4_.tel as tel5_9_4_, menu5_.id as id1_5_5_, menu5_.href as href2_5_5_, menu5_.name as name3_5_5_, menu5_.pid as pid4_5_5_, user6_.id as id1_9_6_, user6_.email as email2_9_6_, user6_.name as name3_9_6_, user6_.password as password4_9_6_, user6_.tel as tel5_9_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ccf7295]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@671b36c3]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e2dbab8]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29a12432]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b58525a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@154bc4dc]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@268060f5]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f233cfd]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4056ce1]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@84852a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_NOWAIT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a6ca07]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c79c669]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78f0a519]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b95bef2]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e806d04]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_SKIPLOCKED]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cd8be33]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17d9482f]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a8cef9d]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43ccf5d9]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a7e9882]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [FORCE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@273b2fd2]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ec09e0b]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4074a5d9]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ecf57ba]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62f00768]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@288afdfb]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@98323c5]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6baaaeda]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14b0f371]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@779c9186]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_WRITE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@671119bb]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a4bfcd9]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@594844b7]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36fb52e4]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72735789]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67cbd02a]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@103d5c99]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@789a8e08]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41694bb1]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@572e9f99]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d0dc871]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@af40e4d]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29858add]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a8891dc]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3455d6c2]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Instantiated session factory
HHH000228: Running hbm2ddl schema update
No alter strings for table : t_action
No alter strings for table : t_actiongroup
No alter strings for table : t_asset
No alter strings for table : t_asset_type
No alter strings for table : t_group
No alter strings for table : t_menu
No alter strings for table : t_project
No alter strings for table : t_project_refence
No alter strings for table : t_referencefile
No alter strings for table : t_user
No alter strings for table : t_usergroup
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 447bc006-29c5-4560-b47e-1f3144f1f1e3 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@565e776b: startup date [Tue Nov 21 10:00:25 CST 2017]; root of context hierarchy
Mapped "{[/pro/projectList],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectPage(org.springframework.ui.Model)
Mapped "{[/pro/updateProject],methods=[POST]}" onto public java.lang.String sw.controller.ProjectController.updateProject(sw.entity.Project)
Mapped "{[/pro/projectAdd],methods=[POST]}" onto public java.lang.String sw.controller.ProjectController.projectAdd(sw.entity.Project,org.springframework.ui.Model)
Mapped "{[/pro/delProject/{id}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.delCollege(int)
Mapped "{[/pro/findAllGroups/{projectId}],methods=[GET]}" onto public void sw.controller.ProjectController.findAllGroups(int,org.springframework.ui.Model)
Mapped "{[/pro/menu]}" onto public sw.model.MMenu sw.controller.ProjectController.findByroot()
Mapped "{[/pro/projectMain/{projectId}/{groupIds}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectMain(int,java.lang.String,org.springframework.ui.Model)
Mapped "{[/pro/projectForm/{id}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectForm(int,org.springframework.ui.Model)
Mapped "{[/pro/projectForm],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectFormView(org.springframework.ui.Model)
Mapped "{[/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage(org.springframework.ui.Model)
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model,javax.servlet.http.HttpSession)
Mapped "{[/logout],methods=[GET]}" onto public java.lang.String sw.controller.UserController.logout(javax.servlet.http.HttpSession)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession) throws java.io.IOException
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.022 seconds (JVM running for 6717.256)
Starting Application on LuoRong with PID 1728 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4fed91f0: startup date [Tue Nov 21 14:10:23 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a1a3b1d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3539 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1b08dbd
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@70560be3{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.Action
		sw.entity.ActionGroup
		sw.entity.Asset
		sw.entity.AssetType
		sw.entity.Group
		sw.entity.Menu
		sw.entity.Project
		sw.entity.ProRef
		sw.entity.ReferenceFile
		sw.entity.User
		sw.entity.UserGroup]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@135d8aeb
Adding type registration boolean -> org.hibernate.type.BooleanType@135d8aeb
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@135d8aeb
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6f63d47c
Adding type registration true_false -> org.hibernate.type.TrueFalseType@56cc7125
Adding type registration yes_no -> org.hibernate.type.YesNoType@3446d0cc
Adding type registration byte -> org.hibernate.type.ByteType@1833a6f1
Adding type registration byte -> org.hibernate.type.ByteType@1833a6f1
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1833a6f1
Adding type registration character -> org.hibernate.type.CharacterType@4276fb9e
Adding type registration char -> org.hibernate.type.CharacterType@4276fb9e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4276fb9e
Adding type registration short -> org.hibernate.type.ShortType@3ddc81f1
Adding type registration short -> org.hibernate.type.ShortType@3ddc81f1
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ddc81f1
Adding type registration integer -> org.hibernate.type.IntegerType@709fc264
Adding type registration int -> org.hibernate.type.IntegerType@709fc264
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@709fc264
Adding type registration long -> org.hibernate.type.LongType@54d2e95f
Adding type registration long -> org.hibernate.type.LongType@54d2e95f
Adding type registration java.lang.Long -> org.hibernate.type.LongType@54d2e95f
Adding type registration float -> org.hibernate.type.FloatType@6f35280e
Adding type registration float -> org.hibernate.type.FloatType@6f35280e
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6f35280e
Adding type registration double -> org.hibernate.type.DoubleType@2ab14f64
Adding type registration double -> org.hibernate.type.DoubleType@2ab14f64
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2ab14f64
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@56122dde
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@56122dde
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1cb4fbe8
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1cb4fbe8
Adding type registration string -> org.hibernate.type.StringType@14086cb5
Adding type registration java.lang.String -> org.hibernate.type.StringType@14086cb5
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@481d4a4b
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4d737d2e
Adding type registration url -> org.hibernate.type.UrlType@34842b22
Adding type registration java.net.URL -> org.hibernate.type.UrlType@34842b22
Adding type registration date -> org.hibernate.type.DateType@238f4f44
Adding type registration java.sql.Date -> org.hibernate.type.DateType@238f4f44
Adding type registration time -> org.hibernate.type.TimeType@2e6c35db
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2e6c35db
Adding type registration timestamp -> org.hibernate.type.TimestampType@41f3202b
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@41f3202b
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@41f3202b
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@29d2653c
Adding type registration calendar -> org.hibernate.type.CalendarType@41aa8f12
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@41aa8f12
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@41aa8f12
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5e1ec1b0
Adding type registration locale -> org.hibernate.type.LocaleType@1c17151a
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c17151a
Adding type registration currency -> org.hibernate.type.CurrencyType@2d0c69f1
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2d0c69f1
Adding type registration timezone -> org.hibernate.type.TimeZoneType@63a9f2b2
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@63a9f2b2
Adding type registration class -> org.hibernate.type.ClassType@34957ccb
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@34957ccb
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5725d314
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5725d314
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4bbe5baf
Adding type registration binary -> org.hibernate.type.BinaryType@70e8b335
Adding type registration byte[] -> org.hibernate.type.BinaryType@70e8b335
Adding type registration [B -> org.hibernate.type.BinaryType@70e8b335
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@42f21bfc
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@42f21bfc
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@42f21bfc
Adding type registration row_version -> org.hibernate.type.RowVersionType@ed39657
Adding type registration image -> org.hibernate.type.ImageType@2807129b
Adding type registration characters -> org.hibernate.type.CharArrayType@399ea956
Adding type registration char[] -> org.hibernate.type.CharArrayType@399ea956
Adding type registration [C -> org.hibernate.type.CharArrayType@399ea956
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6ae2529d
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6ae2529d
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6ae2529d
Adding type registration text -> org.hibernate.type.TextType@4d24b361
Adding type registration ntext -> org.hibernate.type.NTextType@26230acd
Adding type registration blob -> org.hibernate.type.BlobType@2a4ef9bd
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a4ef9bd
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@485c39d7
Adding type registration clob -> org.hibernate.type.ClobType@3479aae0
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3479aae0
Adding type registration nclob -> org.hibernate.type.NClobType@5930d60
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5930d60
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6e85908d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7090b748
Adding type registration serializable -> org.hibernate.type.SerializableType@2c001bd6
Adding type registration object -> org.hibernate.type.ObjectType@76f468a5
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76f468a5
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@19bd0543
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4c59e791
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@23791936
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@592711d3
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@28c180a9
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ba79f4f
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@40fc93a4
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@21b4bbe1
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.Group
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Group
Bind entity sw.entity.Group on table t_group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=info, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property info with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:info]
building SimpleValue for info
Building property info
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Asset
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Asset
Bind entity sw.entity.Asset on table t_asset
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='ass_typ_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=asset_type, insertable=true, updatable=true, unique=false}
Building property assetType
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=backup_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property backupForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:backupForm]
building SimpleValue for backupForm
Building property backupForm
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=depart, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property depart with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:depart]
building SimpleValue for depart
Building property depart
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=importance, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property importance with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:importance]
building SimpleValue for importance
Building property importance
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=principle, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property principle with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:principle]
building SimpleValue for principle
Building property principle
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=remark, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property remark with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:remark]
building SimpleValue for remark
Building property remark
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=save_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property saveForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:saveForm]
building SimpleValue for saveForm
Building property saveForm
Binding entity from annotated class: sw.entity.ProRef
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ProRef
Bind entity sw.entity.ProRef on table t_project_refence
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ProRef:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='ref_pro_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=reference_file, insertable=true, updatable=true, unique=false}
Building property referenceFile
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Binding entity from annotated class: sw.entity.UserGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name UserGroup
Bind entity sw.entity.UserGroup on table t_usergroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=is_headman, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property isHeadman with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:isHeadman]
building SimpleValue for isHeadman
Building property isHeadman
Binding column: Ejb3JoinColumn{logicalColumnName='modify_userid', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.Menu
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Menu
Bind entity sw.entity.Menu on table t_menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=href, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property href with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:href]
building SimpleValue for href
Building property href
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=pid, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property pid with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:pid]
building SimpleValue for pid
Building property pid
Binding entity from annotated class: sw.entity.ReferenceFile
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ReferenceFile
Bind entity sw.entity.ReferenceFile on table t_referencefile
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=company, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property company with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:company]
building SimpleValue for company
Building property company
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=file_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property fileName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:fileName]
building SimpleValue for fileName
Building property fileName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=publish_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property publishDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:publishDate]
building SimpleValue for publishDate
Building property publishDate
Binding entity from annotated class: sw.entity.Project
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Project
Bind entity sw.entity.Project on table t_project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:name]
building SimpleValue for name
Building property name
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.AssetType
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AssetType
Bind entity sw.entity.AssetType on table t_asset_type
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Action
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Action
Bind entity sw.entity.Action on table t_action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=url, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property url with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:url]
building SimpleValue for url
Building property url
Binding entity from annotated class: sw.entity.ActionGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ActionGroup
Bind entity sw.entity.ActionGroup on table t_actiongroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='action_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=action, insertable=true, updatable=true, unique=false}
Building property action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for info
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for backupForm
Starting fillSimpleValue for depart
Starting fillSimpleValue for description
Starting fillSimpleValue for importance
Starting fillSimpleValue for name
Starting fillSimpleValue for principle
Starting fillSimpleValue for remark
Starting fillSimpleValue for saveForm
Starting fillSimpleValue for id
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for isHeadman
Starting fillSimpleValue for id
Starting fillSimpleValue for href
Starting fillSimpleValue for name
Starting fillSimpleValue for pid
Starting fillSimpleValue for id
Starting fillSimpleValue for company
Starting fillSimpleValue for fileName
Starting fillSimpleValue for publishDate
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for description
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for url
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Forcing column [id] to be non-null as it is part of the primary key for table [t_group]
Forcing column [id] to be non-null as it is part of the primary key for table [t_asset]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project_refence]
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Forcing column [id] to be non-null as it is part of the primary key for table [t_usergroup]
Forcing column [id] to be non-null as it is part of the primary key for table [t_menu]
Forcing column [id] to be non-null as it is part of the primary key for table [t_referencefile]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project]
Forcing column [id] to be non-null as it is part of the primary key for table [t_asset_type]
Forcing column [id] to be non-null as it is part of the primary key for table [t_action]
Forcing column [id] to be non-null as it is part of the primary key for table [t_actiongroup]
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.AssetType
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.ReferenceFile
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.AssetType
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.ReferenceFile
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@66e68c5e
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.2462197091988804125.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=1728, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3c4d30f5, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@70560be3{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar;C:\Users\LR\.m2\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;C:\Users\LR\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\LR\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi\3.14\poi-3.14.jar;C:\Users\LR\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi-ooxml\3.14\poi-ooxml-3.14.jar;C:\Users\LR\.m2\repository\com\github\virtuald\curvesapi\1.03\curvesapi-1.03.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi-ooxml-schemas\3.14\poi-ooxml-schemas-3.14.jar;C:\Users\LR\.m2\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;C:\Users\LR\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.2462197091988804125.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@49945439, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@5491634a, payload=[Ljava.lang.Class;@2ecc8bb3}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@1ccf0947, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@50f7d0ed}, constraintType=GENERIC}.
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@15f840ae, payload=[Ljava.lang.Class;@762082fb}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@5b14650d, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@587b521}, constraintType=GENERIC}.
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Static SQL for entity: sw.entity.Group
 Version select: select id from t_group where id =?
 Snapshot select: select group_.id, group_.create_date as create_d2_4_, group_.info as info3_4_, group_.user_id as user_id5_4_, group_.name as name4_4_ from t_group group_ where group_.id=?
 Insert 0: insert into t_group (create_date, info, user_id, name, id) values (?, ?, ?, ?, ?)
 Update 0: update t_group set create_date=?, info=?, user_id=?, name=? where id=?
 Delete 0: delete from t_group where id=?
 Identity insert: insert into t_group (create_date, info, user_id, name) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3764cea6]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dc7c909]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_9_1_}

Static select for entity sw.entity.Group [NONE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_9_1_, user1_.email as email2_9_1_, user1_.name as name3_9_1_, user1_.password as password4_9_1_, user1_.tel as tel5_9_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a479146]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@215da6ba]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_9_1_}

Static select for entity sw.entity.Group [READ]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_9_1_, user1_.email as email2_9_1_, user1_.name as name3_9_1_, user1_.password as password4_9_1_, user1_.tel as tel5_9_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68c48bcc]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58e5f0c2]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49ac999e]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e4498e9]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE_NOWAIT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69d01803]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16396350]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE_SKIPLOCKED]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c8022ae]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@692eb830]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [FORCE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@345065a6]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15a4b80f]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_READ]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9d76db3]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@620fb94d]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_WRITE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@525b01c3]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34b9f22a]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2be3f021]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb3ec5a]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [OPTIMISTIC]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20e06da4]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@500200f1]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [OPTIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Group: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Group: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static SQL for entity: sw.entity.Asset
 Version select: select id from t_asset where id =?
 Snapshot select: select asset_.id, asset_.ass_typ_id as ass_typ10_2_, asset_.backup_form as backup_f2_2_, asset_.depart as depart3_2_, asset_.description as descript4_2_, asset_.importance as importan5_2_, asset_.name as name6_2_, asset_.principle as principl7_2_, asset_.project_id as project11_2_, asset_.remark as remark8_2_, asset_.save_form as save_for9_2_ from t_asset asset_ where asset_.id=?
 Insert 0: insert into t_asset (ass_typ_id, backup_form, depart, description, importance, name, principle, project_id, remark, save_form, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update t_asset set ass_typ_id=?, backup_form=?, depart=?, description=?, importance=?, name=?, principle=?, project_id=?, remark=?, save_form=? where id=?
 Delete 0: delete from t_asset where id=?
 Identity insert: insert into t_asset (ass_typ_id, backup_form, depart, description, importance, name, principle, project_id, remark, save_form) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d83ca18]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11b4b1b9]
Visiting attribute path : assetType.name
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ce05133]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@525d8083]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.Asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(assetType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.AssetType)
                - SQL table alias mapping - assettype1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_9_3_}

Static select for entity sw.entity.Asset [NONE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_, assettype1_.id as id1_3_1_, assettype1_.name as name2_3_1_, project2_.id as id1_6_2_, project2_.create_date as create_d2_6_2_, project2_.description as descript3_6_2_, project2_.name as name4_6_2_, project2_.user_id as user_id5_6_2_, user3_.id as id1_9_3_, user3_.email as email2_9_3_, user3_.name as name3_9_3_, user3_.password as password4_9_3_, user3_.tel as tel5_9_3_ from t_asset asset0_ left outer join t_asset_type assettype1_ on asset0_.ass_typ_id=assettype1_.id left outer join t_project project2_ on asset0_.project_id=project2_.id left outer join t_user user3_ on project2_.user_id=user3_.id where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@175f6e23]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@496c032f]
Visiting attribute path : assetType.name
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2af66a82]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2aee68cf]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.Asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(assetType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.AssetType)
                - SQL table alias mapping - assettype1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_9_3_}

Static select for entity sw.entity.Asset [READ]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_, assettype1_.id as id1_3_1_, assettype1_.name as name2_3_1_, project2_.id as id1_6_2_, project2_.create_date as create_d2_6_2_, project2_.description as descript3_6_2_, project2_.name as name4_6_2_, project2_.user_id as user_id5_6_2_, user3_.id as id1_9_3_, user3_.email as email2_9_3_, user3_.name as name3_9_3_, user3_.password as password4_9_3_, user3_.tel as tel5_9_3_ from t_asset asset0_ left outer join t_asset_type assettype1_ on asset0_.ass_typ_id=assettype1_.id left outer join t_project project2_ on asset0_.project_id=project2_.id left outer join t_user user3_ on project2_.user_id=user3_.id where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54d67ae4]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1db2db4a]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3da2cb6e]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a449764]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ee3e7d3]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2531a4da]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE_NOWAIT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b30e8af]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fdc7b91]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@676311c4]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE_SKIPLOCKED]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b4ae817]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fb9adab]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30ab68a9]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [FORCE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c4d34fb]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17d2862d]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c574a5e]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_READ]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@490843c3]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a725fed]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cb1ef47]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_WRITE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@372cb549]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@345855d0]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a05fcb]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_FORCE_INCREMENT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5574348b]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@105e94fa]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1585cf3d]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [OPTIMISTIC]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6121616a]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16a85219]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2def9bd6]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [OPTIMISTIC_FORCE_INCREMENT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Asset: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Asset: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static SQL for entity: sw.entity.ProRef
 Version select: select id from t_project_refence where id =?
 Snapshot select: select proref_.id, proref_.project_id as project_2_7_, proref_.ref_pro_id as ref_pro_3_7_ from t_project_refence proref_ where proref_.id=?
 Insert 0: insert into t_project_refence (project_id, ref_pro_id, id) values (?, ?, ?)
 Update 0: update t_project_refence set project_id=?, ref_pro_id=? where id=?
 Delete 0: delete from t_project_refence where id=?
 Identity insert: insert into t_project_refence (project_id, ref_pro_id) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@472f8530]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ea4ef87]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2479fc63]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@152ae454]
Visiting attribute path : referenceFile.company
Visiting attribute path : referenceFile.fileName
Visiting attribute path : referenceFile.publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_9_2_}
          - JOIN (JoinDefinedByMetadata(referenceFile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.ReferenceFile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_8_3_}

Static select for entity sw.entity.ProRef [NONE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_, project1_.id as id1_6_1_, project1_.create_date as create_d2_6_1_, project1_.description as descript3_6_1_, project1_.name as name4_6_1_, project1_.user_id as user_id5_6_1_, user2_.id as id1_9_2_, user2_.email as email2_9_2_, user2_.name as name3_9_2_, user2_.password as password4_9_2_, user2_.tel as tel5_9_2_, referencef3_.id as id1_8_3_, referencef3_.company as company2_8_3_, referencef3_.file_name as file_nam3_8_3_, referencef3_.publish_date as publish_4_8_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4642b0e2]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27140bda]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47dcc6f3]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@578303a2]
Visiting attribute path : referenceFile.company
Visiting attribute path : referenceFile.fileName
Visiting attribute path : referenceFile.publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_9_2_}
          - JOIN (JoinDefinedByMetadata(referenceFile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.ReferenceFile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_8_3_}

Static select for entity sw.entity.ProRef [READ]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_, project1_.id as id1_6_1_, project1_.create_date as create_d2_6_1_, project1_.description as descript3_6_1_, project1_.name as name4_6_1_, project1_.user_id as user_id5_6_1_, user2_.id as id1_9_2_, user2_.email as email2_9_2_, user2_.name as name3_9_2_, user2_.password as password4_9_2_, user2_.tel as tel5_9_2_, referencef3_.id as id1_8_3_, referencef3_.company as company2_8_3_, referencef3_.file_name as file_nam3_8_3_, referencef3_.publish_date as publish_4_8_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37cb9cf6]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c355630]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4377f3de]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2830fb6a]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b5cb5e3]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17494255]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE_NOWAIT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@380d007d]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c91bc3b]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1971616]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE_SKIPLOCKED]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5149e0b1]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3570774d]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c6ee053]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [FORCE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@123cd507]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b021f8a]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@309512c1]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_READ]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44756d39]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@140e651d]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c956e47]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_WRITE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6366d649]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@157488eb]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32343b54]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@673567c5]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@db086e6]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e4de29f]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@528ab5dc]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@748b0b9c]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5235688]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ProRef: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ProRef: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_9_, user_.name as name3_9_, user_.password as password4_9_, user_.tel as tel5_9_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20027a5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a816a64]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6637daa1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@130cf2fc]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61305fd1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c5d10d6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d43a67]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d843954]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60cf225]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@191e97e4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25883768]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_9_0_, user0_.email as email2_9_0_, user0_.name as name3_9_0_, user0_.password as password4_9_0_, user0_.tel as tel5_9_0_ from t_user user0_ where user0_.id=?
Static SQL for entity: sw.entity.UserGroup
 Version select: select id from t_usergroup where id =?
 Snapshot select: select usergroup_.id, usergroup_.create_date as create_d2_10_, usergroup_.group_id as group_id4_10_, usergroup_.is_headman as is_headm3_10_, usergroup_.modify_userid as modify_u5_10_, usergroup_.project_id as project_6_10_, usergroup_.user_id as user_id7_10_ from t_usergroup usergroup_ where usergroup_.id=?
 Insert 0: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update t_usergroup set create_date=?, group_id=?, is_headman=?, modify_userid=?, project_id=?, user_id=? where id=?
 Delete 0: delete from t_usergroup where id=?
 Identity insert: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id) values (?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fdb85a8]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c5f5964]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@115edca3]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f0fef02]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25992b32]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@545bf8d8]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@503a1f71]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_9_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_9_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_6_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_9_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_9_6_}

Static select for entity sw.entity.UserGroup [NONE]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_, group1_.id as id1_4_1_, group1_.create_date as create_d2_4_1_, group1_.info as info3_4_1_, group1_.user_id as user_id5_4_1_, group1_.name as name4_4_1_, user2_.id as id1_9_2_, user2_.email as email2_9_2_, user2_.name as name3_9_2_, user2_.password as password4_9_2_, user2_.tel as tel5_9_2_, user3_.id as id1_9_3_, user3_.email as email2_9_3_, user3_.name as name3_9_3_, user3_.password as password4_9_3_, user3_.tel as tel5_9_3_, project4_.id as id1_6_4_, project4_.create_date as create_d2_6_4_, project4_.description as descript3_6_4_, project4_.name as name4_6_4_, project4_.user_id as user_id5_6_4_, user5_.id as id1_9_5_, user5_.email as email2_9_5_, user5_.name as name3_9_5_, user5_.password as password4_9_5_, user5_.tel as tel5_9_5_, user6_.id as id1_9_6_, user6_.email as email2_9_6_, user6_.name as name3_9_6_, user6_.password as password4_9_6_, user6_.tel as tel5_9_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c521f14]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5311e6cb]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d4169fa]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67ee6a10]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b786ab9]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b73558c]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@387fd5a2]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_9_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_9_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_6_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_9_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_9_6_}

Static select for entity sw.entity.UserGroup [READ]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_, group1_.id as id1_4_1_, group1_.create_date as create_d2_4_1_, group1_.info as info3_4_1_, group1_.user_id as user_id5_4_1_, group1_.name as name4_4_1_, user2_.id as id1_9_2_, user2_.email as email2_9_2_, user2_.name as name3_9_2_, user2_.password as password4_9_2_, user2_.tel as tel5_9_2_, user3_.id as id1_9_3_, user3_.email as email2_9_3_, user3_.name as name3_9_3_, user3_.password as password4_9_3_, user3_.tel as tel5_9_3_, project4_.id as id1_6_4_, project4_.create_date as create_d2_6_4_, project4_.description as descript3_6_4_, project4_.name as name4_6_4_, project4_.user_id as user_id5_6_4_, user5_.id as id1_9_5_, user5_.email as email2_9_5_, user5_.name as name3_9_5_, user5_.password as password4_9_5_, user5_.tel as tel5_9_5_, user6_.id as id1_9_6_, user6_.email as email2_9_6_, user6_.name as name3_9_6_, user6_.password as password4_9_6_, user6_.tel as tel5_9_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e3b921d]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa2aa05]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e29c33e]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c20199c]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c803f8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [UPGRADE]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1aa573c6]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@769567aa]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33077d43]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28d03a6]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23b511f3]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_NOWAIT]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ec08a18]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c5fa0b7]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17ee1046]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d84d8e9]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33903292]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_SKIPLOCKED]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@522b664f]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ea8e5a1]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c9e5c44]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@458e4286]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7199b91b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [FORCE]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48a5df64]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41ca3060]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d270823]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b9fb61c]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5382e6a1]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_READ]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43db8581]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60b1924c]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24c2d715]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b2aa981]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7acd2b8e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_WRITE]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1682e569]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ac2216a]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59c0f2e7]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58e8fd1b]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b47d0bf]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70556dcc]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31c3de1e]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@241432b1]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f7400f2]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36169241]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@190a89b3]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43a2417a]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41a457d5]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cae1943]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65c5f336]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.UserGroup: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.UserGroup: select usergroup0_.id as id1_10_0_, usergroup0_.create_date as create_d2_10_0_, usergroup0_.group_id as group_id4_10_0_, usergroup0_.is_headman as is_headm3_10_0_, usergroup0_.modify_userid as modify_u5_10_0_, usergroup0_.project_id as project_6_10_0_, usergroup0_.user_id as user_id7_10_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static SQL for entity: sw.entity.Menu
 Version select: select id from t_menu where id =?
 Snapshot select: select menu_.id, menu_.href as href2_5_, menu_.name as name3_5_, menu_.pid as pid4_5_ from t_menu menu_ where menu_.id=?
 Insert 0: insert into t_menu (href, name, pid, id) values (?, ?, ?, ?)
 Update 0: update t_menu set href=?, name=?, pid=? where id=?
 Delete 0: delete from t_menu where id=?
 Identity insert: insert into t_menu (href, name, pid) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@343dc765]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [NONE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b5c5b72]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [READ]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b96a4cf]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cc7018]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE_NOWAIT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39007a28]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE_SKIPLOCKED]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dd1aa2]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [FORCE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f4921e3]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_READ]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475a506b]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_WRITE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22c97fe2]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5869c7ef]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d4653b9]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Menu: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Menu: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static SQL for entity: sw.entity.ReferenceFile
 Version select: select id from t_referencefile where id =?
 Snapshot select: select referencef_.id, referencef_.company as company2_8_, referencef_.file_name as file_nam3_8_, referencef_.publish_date as publish_4_8_ from t_referencefile referencef_ where referencef_.id=?
 Insert 0: insert into t_referencefile (company, file_name, publish_date, id) values (?, ?, ?, ?)
 Update 0: update t_referencefile set company=?, file_name=?, publish_date=? where id=?
 Delete 0: delete from t_referencefile where id=?
 Identity insert: insert into t_referencefile (company, file_name, publish_date) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ebfb539]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [NONE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d3b921e]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [READ]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ca89e8d]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61823e90]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE_NOWAIT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@299a60b0]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE_SKIPLOCKED]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e1c2864]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [FORCE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53c77abf]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_READ]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1598d940]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_WRITE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@447fb25d]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9c37413]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [OPTIMISTIC]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35a8de74]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [OPTIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ReferenceFile: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ReferenceFile: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static SQL for entity: sw.entity.Project
 Version select: select id from t_project where id =?
 Snapshot select: select project_.id, project_.create_date as create_d2_6_, project_.description as descript3_6_, project_.name as name4_6_, project_.user_id as user_id5_6_ from t_project project_ where project_.id=?
 Insert 0: insert into t_project (create_date, description, name, user_id, id) values (?, ?, ?, ?, ?)
 Update 0: update t_project set create_date=?, description=?, name=?, user_id=? where id=?
 Delete 0: delete from t_project where id=?
 Identity insert: insert into t_project (create_date, description, name, user_id) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a70d888]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@760cd39c]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_9_1_}

Static select for entity sw.entity.Project [NONE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_9_1_, user1_.email as email2_9_1_, user1_.name as name3_9_1_, user1_.password as password4_9_1_, user1_.tel as tel5_9_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@686453dd]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a530770]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_9_1_}

Static select for entity sw.entity.Project [READ]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_9_1_, user1_.email as email2_9_1_, user1_.name as name3_9_1_, user1_.password as password4_9_1_, user1_.tel as tel5_9_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77c23387]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6200fc9d]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c76259f]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a2f1254]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE_NOWAIT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3faee998]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b52e262]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE_SKIPLOCKED]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39cdfeee]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78aeed74]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [FORCE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74e341f1]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ab38938]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_READ]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f91c57]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56f1f021]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_WRITE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@207d598e]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fcc13ae]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e5908e]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e143b66]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [OPTIMISTIC]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@217a0a69]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37d4771b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [OPTIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Project: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Project: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static SQL for entity: sw.entity.AssetType
 Version select: select id from t_asset_type where id =?
 Snapshot select: select assettype_.id, assettype_.name as name2_3_ from t_asset_type assettype_ where assettype_.id=?
 Insert 0: insert into t_asset_type (name, id) values (?, ?)
 Update 0: update t_asset_type set name=? where id=?
 Delete 0: delete from t_asset_type where id=?
 Identity insert: insert into t_asset_type (name) values (?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8a4a58c]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [NONE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7eb3577b]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [READ]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@476edb09]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9c09fa]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE_NOWAIT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b3e6aee]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE_SKIPLOCKED]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b35a6d8]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [FORCE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@331cd348]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_READ]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1781da7b]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_WRITE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5407e9d6]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_FORCE_INCREMENT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69034156]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [OPTIMISTIC]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2432b4e8]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [OPTIMISTIC_FORCE_INCREMENT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.AssetType: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.AssetType: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static SQL for entity: sw.entity.Action
 Version select: select id from t_action where id =?
 Snapshot select: select action_.id, action_.menu_id as menu_id4_0_, action_.name as name2_0_, action_.url as url3_0_ from t_action action_ where action_.id=?
 Insert 0: insert into t_action (menu_id, name, url, id) values (?, ?, ?, ?)
 Update 0: update t_action set menu_id=?, name=?, url=? where id=?
 Delete 0: delete from t_action where id=?
 Identity insert: insert into t_action (menu_id, name, url) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67c9d456]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c5b551c]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

Static select for entity sw.entity.Action [NONE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_5_1_, menu1_.href as href2_5_1_, menu1_.name as name3_5_1_, menu1_.pid as pid4_5_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38549df6]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a47fa2d]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

Static select for entity sw.entity.Action [READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_5_1_, menu1_.href as href2_5_1_, menu1_.name as name3_5_1_, menu1_.pid as pid4_5_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13d4c906]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f544962]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a43027d]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f69dad8]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_NOWAIT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ab8d0e]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cb9bf2d]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_SKIPLOCKED]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dc70f78]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a048ac3]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [FORCE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b250c79]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c153ae4]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22e9eb37]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c689a62]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_WRITE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@198f4511]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76d27ccc]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e1153fe]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c4cc89b]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@691de1c2]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@294176c6]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static SQL for entity: sw.entity.ActionGroup
 Version select: select id from t_actiongroup where id =?
 Snapshot select: select actiongrou_.id, actiongrou_.action_id as action_i3_1_, actiongrou_.create_date as create_d2_1_, actiongrou_.group_id as group_id4_1_, actiongrou_.menu_id as menu_id5_1_, actiongrou_.user_id as user_id6_1_ from t_actiongroup actiongrou_ where actiongrou_.id=?
 Insert 0: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update t_actiongroup set action_id=?, create_date=?, group_id=?, menu_id=?, user_id=? where id=?
 Delete 0: delete from t_actiongroup where id=?
 Identity insert: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id) values (?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43236b65]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ff2219]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c0aace5]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72c4090c]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b50ed92]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@448d8637]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a9eeea5]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_9_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_5_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_9_6_}

Static select for entity sw.entity.ActionGroup [NONE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_5_2_, menu2_.href as href2_5_2_, menu2_.name as name3_5_2_, menu2_.pid as pid4_5_2_, group3_.id as id1_4_3_, group3_.create_date as create_d2_4_3_, group3_.info as info3_4_3_, group3_.user_id as user_id5_4_3_, group3_.name as name4_4_3_, user4_.id as id1_9_4_, user4_.email as email2_9_4_, user4_.name as name3_9_4_, user4_.password as password4_9_4_, user4_.tel as tel5_9_4_, menu5_.id as id1_5_5_, menu5_.href as href2_5_5_, menu5_.name as name3_5_5_, menu5_.pid as pid4_5_5_, user6_.id as id1_9_6_, user6_.email as email2_9_6_, user6_.name as name3_9_6_, user6_.password as password4_9_6_, user6_.tel as tel5_9_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f5803bf]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@511f555e]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dc008c2]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@410d2d22]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b8d7bf0]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@702543f0]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@717f9059]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_9_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_5_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_9_6_}

Static select for entity sw.entity.ActionGroup [READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_5_2_, menu2_.href as href2_5_2_, menu2_.name as name3_5_2_, menu2_.pid as pid4_5_2_, group3_.id as id1_4_3_, group3_.create_date as create_d2_4_3_, group3_.info as info3_4_3_, group3_.user_id as user_id5_4_3_, group3_.name as name4_4_3_, user4_.id as id1_9_4_, user4_.email as email2_9_4_, user4_.name as name3_9_4_, user4_.password as password4_9_4_, user4_.tel as tel5_9_4_, menu5_.id as id1_5_5_, menu5_.href as href2_5_5_, menu5_.name as name3_5_5_, menu5_.pid as pid4_5_5_, user6_.id as id1_9_6_, user6_.email as email2_9_6_, user6_.name as name3_9_6_, user6_.password as password4_9_6_, user6_.tel as tel5_9_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b690c07]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ed7f3a7]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4038fe29]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33c2db1d]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aeaf66d]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b716a5c]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19803c14]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2464f8d7]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14f7458d]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@501917c4]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_NOWAIT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4861f14f]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6535f51c]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d8a7949]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3aa6043e]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71fbbf14]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_SKIPLOCKED]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b2c3922]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f4f2e4d]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e021af]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@695febd8]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e63ea7b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [FORCE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8b88cbc]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cf014e2]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d310335]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1120b943]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@128ed7eb]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ef5965c]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f76449f]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ba3e515]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f6d74b]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22c52c8b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_WRITE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fdac6f0]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54a6c3fd]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f0c0c96]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6658bcc1]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a41acc]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47ff9cae]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b35550b]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec256db]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6563bb41]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ff2040e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e9e8ff6]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ae766c6]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@557ad3e0]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f411786]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e3543ee]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Instantiated session factory
HHH000228: Running hbm2ddl schema update
No alter strings for table : t_action
No alter strings for table : t_actiongroup
No alter strings for table : t_asset
No alter strings for table : t_asset_type
No alter strings for table : t_group
No alter strings for table : t_menu
No alter strings for table : t_project
No alter strings for table : t_project_refence
No alter strings for table : t_referencefile
No alter strings for table : t_user
No alter strings for table : t_usergroup
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4c633793
Registering SessionFactory: a3dedd5b-3013-423f-acd2-7a5569fb0ac8 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@9e3cc36
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4fed91f0: startup date [Tue Nov 21 14:10:23 CST 2017]; root of context hierarchy
Mapped "{[/pro/updateProject],methods=[POST]}" onto public java.lang.String sw.controller.ProjectController.updateProject(sw.entity.Project)
Mapped "{[/pro/delProject/{id}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.delCollege(int)
Mapped "{[/pro/projectForm/{id}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectForm(int,org.springframework.ui.Model)
Mapped "{[/pro/projectMain/{projectId}/{groupIds}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectMain(int,java.lang.String,org.springframework.ui.Model)
Mapped "{[/pro/findAllGroups/{projectId}],methods=[GET]}" onto public void sw.controller.ProjectController.findAllGroups(int,org.springframework.ui.Model)
Mapped "{[/pro/projectList],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectPage(org.springframework.ui.Model)
Mapped "{[/pro/menu]}" onto public sw.model.MMenu sw.controller.ProjectController.findByroot()
Mapped "{[/pro/projectAdd],methods=[POST]}" onto public java.lang.String sw.controller.ProjectController.projectAdd(sw.entity.Project,org.springframework.ui.Model)
Mapped "{[/pro/projectForm],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectFormView(org.springframework.ui.Model)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession) throws java.io.IOException
Mapped "{[/login],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage(org.springframework.ui.Model)
Mapped "{[/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/logout],methods=[GET]}" onto public java.lang.String sw.controller.UserController.logout(javax.servlet.http.HttpSession)
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model,javax.servlet.http.HttpSession)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 13.178 seconds (JVM running for 13.782)
Starting Application on LuoRong with PID 13516 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@85e69a4: startup date [Tue Nov 21 14:56:35 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cc9020df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3605 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5fa3d305
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@377724a4{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.Action
		sw.entity.ActionGroup
		sw.entity.Asset
		sw.entity.AssetType
		sw.entity.Group
		sw.entity.Menu
		sw.entity.Project
		sw.entity.ProRef
		sw.entity.ReferenceFile
		sw.entity.Threat
		sw.entity.User
		sw.entity.UserGroup]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@311f67d9
Adding type registration boolean -> org.hibernate.type.BooleanType@311f67d9
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@311f67d9
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@57bd1c7e
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6f960670
Adding type registration yes_no -> org.hibernate.type.YesNoType@5ebfca16
Adding type registration byte -> org.hibernate.type.ByteType@e521e38
Adding type registration byte -> org.hibernate.type.ByteType@e521e38
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e521e38
Adding type registration character -> org.hibernate.type.CharacterType@518a6e6f
Adding type registration char -> org.hibernate.type.CharacterType@518a6e6f
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@518a6e6f
Adding type registration short -> org.hibernate.type.ShortType@2efb4c01
Adding type registration short -> org.hibernate.type.ShortType@2efb4c01
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2efb4c01
Adding type registration integer -> org.hibernate.type.IntegerType@437174f8
Adding type registration int -> org.hibernate.type.IntegerType@437174f8
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@437174f8
Adding type registration long -> org.hibernate.type.LongType@1a85f2d
Adding type registration long -> org.hibernate.type.LongType@1a85f2d
Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a85f2d
Adding type registration float -> org.hibernate.type.FloatType@18b32da2
Adding type registration float -> org.hibernate.type.FloatType@18b32da2
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@18b32da2
Adding type registration double -> org.hibernate.type.DoubleType@69da7ec
Adding type registration double -> org.hibernate.type.DoubleType@69da7ec
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@69da7ec
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5b92d7e9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5b92d7e9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1605f737
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1605f737
Adding type registration string -> org.hibernate.type.StringType@10a15079
Adding type registration java.lang.String -> org.hibernate.type.StringType@10a15079
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@69aaa7e9
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@44803f3c
Adding type registration url -> org.hibernate.type.UrlType@54e3cddb
Adding type registration java.net.URL -> org.hibernate.type.UrlType@54e3cddb
Adding type registration date -> org.hibernate.type.DateType@3440c853
Adding type registration java.sql.Date -> org.hibernate.type.DateType@3440c853
Adding type registration time -> org.hibernate.type.TimeType@56482a26
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@56482a26
Adding type registration timestamp -> org.hibernate.type.TimestampType@4830f647
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4830f647
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4830f647
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7b7c7065
Adding type registration calendar -> org.hibernate.type.CalendarType@61014b66
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@61014b66
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@61014b66
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1100003d
Adding type registration locale -> org.hibernate.type.LocaleType@1a4014f6
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a4014f6
Adding type registration currency -> org.hibernate.type.CurrencyType@3d70b73b
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3d70b73b
Adding type registration timezone -> org.hibernate.type.TimeZoneType@96b52d2
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@96b52d2
Adding type registration class -> org.hibernate.type.ClassType@6aefca9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6aefca9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@69a08a65
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@69a08a65
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5b4f4f19
Adding type registration binary -> org.hibernate.type.BinaryType@42d45f8b
Adding type registration byte[] -> org.hibernate.type.BinaryType@42d45f8b
Adding type registration [B -> org.hibernate.type.BinaryType@42d45f8b
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@27298652
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@27298652
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@27298652
Adding type registration row_version -> org.hibernate.type.RowVersionType@3f48894d
Adding type registration image -> org.hibernate.type.ImageType@5153e42d
Adding type registration characters -> org.hibernate.type.CharArrayType@cc19546
Adding type registration char[] -> org.hibernate.type.CharArrayType@cc19546
Adding type registration [C -> org.hibernate.type.CharArrayType@cc19546
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@85db0fd
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@85db0fd
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@85db0fd
Adding type registration text -> org.hibernate.type.TextType@7f3c8491
Adding type registration ntext -> org.hibernate.type.NTextType@53b5e3dc
Adding type registration blob -> org.hibernate.type.BlobType@18302a8
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@18302a8
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e27c19a
Adding type registration clob -> org.hibernate.type.ClobType@29f46059
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@29f46059
Adding type registration nclob -> org.hibernate.type.NClobType@578f26ad
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@578f26ad
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@fb0e373
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1b00b28d
Adding type registration serializable -> org.hibernate.type.SerializableType@6977109a
Adding type registration object -> org.hibernate.type.ObjectType@2f7c312a
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2f7c312a
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@69ebc78d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@27d04efb
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c037ec0
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@58d8f4a5
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6fb8979c
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4abaab06
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1d1839ef
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@27a8b35
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.Threat
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Threat
Bind entity sw.entity.Threat on table t_threat
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='asset_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=asset, insertable=true, updatable=true, unique=false}
Building property asset
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=frequency, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property frequency with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:frequency]
building SimpleValue for frequency
Building property frequency
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=threat_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property threatName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:threatName]
building SimpleValue for threatName
Building property threatName
Binding entity from annotated class: sw.entity.Group
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Group
Bind entity sw.entity.Group on table t_group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=info, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property info with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:info]
building SimpleValue for info
Building property info
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Asset
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Asset
Bind entity sw.entity.Asset on table t_asset
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='ass_typ_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=asset_type, insertable=true, updatable=true, unique=false}
Building property assetType
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=backup_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property backupForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:backupForm]
building SimpleValue for backupForm
Building property backupForm
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=depart, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property depart with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:depart]
building SimpleValue for depart
Building property depart
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=importance, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property importance with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:importance]
building SimpleValue for importance
Building property importance
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=principle, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property principle with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:principle]
building SimpleValue for principle
Building property principle
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=remark, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property remark with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:remark]
building SimpleValue for remark
Building property remark
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=save_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property saveForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:saveForm]
building SimpleValue for saveForm
Building property saveForm
Binding entity from annotated class: sw.entity.ProRef
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ProRef
Bind entity sw.entity.ProRef on table t_project_refence
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ProRef:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='ref_pro_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=reference_file, insertable=true, updatable=true, unique=false}
Building property referenceFile
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Binding entity from annotated class: sw.entity.UserGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name UserGroup
Bind entity sw.entity.UserGroup on table t_usergroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=is_headman, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property isHeadman with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:isHeadman]
building SimpleValue for isHeadman
Building property isHeadman
Binding column: Ejb3JoinColumn{logicalColumnName='modify_userid', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.Menu
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Menu
Bind entity sw.entity.Menu on table t_menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=href, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property href with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:href]
building SimpleValue for href
Building property href
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=pid, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property pid with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:pid]
building SimpleValue for pid
Building property pid
Binding entity from annotated class: sw.entity.ReferenceFile
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ReferenceFile
Bind entity sw.entity.ReferenceFile on table t_referencefile
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=company, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property company with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:company]
building SimpleValue for company
Building property company
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=file_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property fileName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:fileName]
building SimpleValue for fileName
Building property fileName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=publish_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property publishDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:publishDate]
building SimpleValue for publishDate
Building property publishDate
Binding entity from annotated class: sw.entity.Project
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Project
Bind entity sw.entity.Project on table t_project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:name]
building SimpleValue for name
Building property name
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.AssetType
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AssetType
Bind entity sw.entity.AssetType on table t_asset_type
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Action
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Action
Bind entity sw.entity.Action on table t_action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=url, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property url with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:url]
building SimpleValue for url
Building property url
Binding entity from annotated class: sw.entity.ActionGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ActionGroup
Bind entity sw.entity.ActionGroup on table t_actiongroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='action_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=action, insertable=true, updatable=true, unique=false}
Building property action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Starting fillSimpleValue for id
Starting fillSimpleValue for frequency
Starting fillSimpleValue for threatName
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for info
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for backupForm
Starting fillSimpleValue for depart
Starting fillSimpleValue for description
Starting fillSimpleValue for importance
Starting fillSimpleValue for name
Starting fillSimpleValue for principle
Starting fillSimpleValue for remark
Starting fillSimpleValue for saveForm
Starting fillSimpleValue for id
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for isHeadman
Starting fillSimpleValue for id
Starting fillSimpleValue for href
Starting fillSimpleValue for name
Starting fillSimpleValue for pid
Starting fillSimpleValue for id
Starting fillSimpleValue for company
Starting fillSimpleValue for fileName
Starting fillSimpleValue for publishDate
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for description
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for url
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Forcing column [id] to be non-null as it is part of the primary key for table [t_threat]
Forcing column [id] to be non-null as it is part of the primary key for table [t_group]
Forcing column [id] to be non-null as it is part of the primary key for table [t_asset]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project_refence]
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Forcing column [id] to be non-null as it is part of the primary key for table [t_usergroup]
Forcing column [id] to be non-null as it is part of the primary key for table [t_menu]
Forcing column [id] to be non-null as it is part of the primary key for table [t_referencefile]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project]
Forcing column [id] to be non-null as it is part of the primary key for table [t_asset_type]
Forcing column [id] to be non-null as it is part of the primary key for table [t_action]
Forcing column [id] to be non-null as it is part of the primary key for table [t_actiongroup]
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.AssetType
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.ReferenceFile
Resolving reference to class: sw.entity.Asset
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.AssetType
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.ReferenceFile
Resolving reference to class: sw.entity.Asset
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@378f5f45
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.5748290384129364955.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=13516, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7b8c2b9e, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@377724a4{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar;C:\Users\LR\.m2\repository\commons-beanutils\commons-beanutils\1.9.3\commons-beanutils-1.9.3.jar;C:\Users\LR\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\LR\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi\3.14\poi-3.14.jar;C:\Users\LR\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi-ooxml\3.14\poi-ooxml-3.14.jar;C:\Users\LR\.m2\repository\com\github\virtuald\curvesapi\1.03\curvesapi-1.03.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi-ooxml-schemas\3.14\poi-ooxml-schemas-3.14.jar;C:\Users\LR\.m2\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;C:\Users\LR\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.5748290384129364955.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@32bde4f3, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.Threat] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Threat
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@684c8240, payload=[Ljava.lang.Class;@298f3fff}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@43be5679, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@7075fdb4}, constraintType=GENERIC}.
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@4093aad4, payload=[Ljava.lang.Class;@5ab33dfd}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@336a6f7f, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@6edc2950}, constraintType=GENERIC}.
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.Threat] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Threat
Not known whether passed class name [sw.entity.Threat] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Threat
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Static SQL for entity: sw.entity.Threat
 Version select: select id from t_threat where id =?
 Snapshot select: select threat_.id, threat_.asset_id as asset_id4_9_, threat_.frequency as frequenc2_9_, threat_.threat_name as threat_n3_9_ from t_threat threat_ where threat_.id=?
 Insert 0: insert into t_threat (asset_id, frequency, threat_name, id) values (?, ?, ?, ?)
 Update 0: update t_threat set asset_id=?, frequency=?, threat_name=? where id=?
 Delete 0: delete from t_threat where id=?
 Identity insert: insert into t_threat (asset_id, frequency, threat_name) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dc90853]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@777cd851]
Visiting attribute path : asset.assetType
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cc9deb7]
Visiting attribute path : asset.assetType.name
Visiting attribute path : asset.backupForm
Visiting attribute path : asset.depart
Visiting attribute path : asset.description
Visiting attribute path : asset.importance
Visiting attribute path : asset.name
Visiting attribute path : asset.principle
Visiting attribute path : asset.project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@119e9b23]
Visiting attribute path : asset.project.createDate
Visiting attribute path : asset.project.description
Visiting attribute path : asset.project.name
Visiting attribute path : asset.project.user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@595219f1]
Visiting attribute path : asset.remark
Visiting attribute path : asset.saveForm
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
             - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:2>, path=sw.entity.Threat.asset.assetType)
             - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.Threat.asset.project)
                - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.Threat.asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}
          - JOIN (JoinDefinedByMetadata(asset)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Asset)
                - SQL table alias mapping - asset1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(assetType)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.AssetType)
                      - SQL table alias mapping - assettype2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_6_3_}

Static select for entity sw.entity.Threat [NONE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_, asset1_.id as id1_2_1_, asset1_.ass_typ_id as ass_typ10_2_1_, asset1_.backup_form as backup_f2_2_1_, asset1_.depart as depart3_2_1_, asset1_.description as descript4_2_1_, asset1_.importance as importan5_2_1_, asset1_.name as name6_2_1_, asset1_.principle as principl7_2_1_, asset1_.project_id as project11_2_1_, asset1_.remark as remark8_2_1_, asset1_.save_form as save_for9_2_1_, assettype2_.id as id1_3_2_, assettype2_.name as name2_3_2_, project3_.id as id1_6_3_, project3_.create_date as create_d2_6_3_, project3_.description as descript3_6_3_, project3_.name as name4_6_3_, project3_.user_id as user_id5_6_3_ from t_threat threat0_ left outer join t_asset asset1_ on threat0_.asset_id=asset1_.id left outer join t_asset_type assettype2_ on asset1_.ass_typ_id=assettype2_.id left outer join t_project project3_ on asset1_.project_id=project3_.id where threat0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36554b67]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e6d309d]
Visiting attribute path : asset.assetType
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f7ee64]
Visiting attribute path : asset.assetType.name
Visiting attribute path : asset.backupForm
Visiting attribute path : asset.depart
Visiting attribute path : asset.description
Visiting attribute path : asset.importance
Visiting attribute path : asset.name
Visiting attribute path : asset.principle
Visiting attribute path : asset.project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b16089e]
Visiting attribute path : asset.project.createDate
Visiting attribute path : asset.project.description
Visiting attribute path : asset.project.name
Visiting attribute path : asset.project.user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44288128]
Visiting attribute path : asset.remark
Visiting attribute path : asset.saveForm
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
             - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:2>, path=sw.entity.Threat.asset.assetType)
             - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.Threat.asset.project)
                - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.Threat.asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}
          - JOIN (JoinDefinedByMetadata(asset)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Asset)
                - SQL table alias mapping - asset1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(assetType)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.AssetType)
                      - SQL table alias mapping - assettype2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_6_3_}

Static select for entity sw.entity.Threat [READ]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_, asset1_.id as id1_2_1_, asset1_.ass_typ_id as ass_typ10_2_1_, asset1_.backup_form as backup_f2_2_1_, asset1_.depart as depart3_2_1_, asset1_.description as descript4_2_1_, asset1_.importance as importan5_2_1_, asset1_.name as name6_2_1_, asset1_.principle as principl7_2_1_, asset1_.project_id as project11_2_1_, asset1_.remark as remark8_2_1_, asset1_.save_form as save_for9_2_1_, assettype2_.id as id1_3_2_, assettype2_.name as name2_3_2_, project3_.id as id1_6_3_, project3_.create_date as create_d2_6_3_, project3_.description as descript3_6_3_, project3_.name as name4_6_3_, project3_.user_id as user_id5_6_3_ from t_threat threat0_ left outer join t_asset asset1_ on threat0_.asset_id=asset1_.id left outer join t_asset_type assettype2_ on asset1_.ass_typ_id=assettype2_.id left outer join t_project project3_ on asset1_.project_id=project3_.id where threat0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@190fa9a9]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6898b62e]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [UPGRADE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68395bd4]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5eeca586]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [UPGRADE_NOWAIT]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@736841b3]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22edd762]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [UPGRADE_SKIPLOCKED]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1916862c]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13cb5546]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [FORCE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fd1c69a]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4beb029c]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [PESSIMISTIC_READ]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c30fc2]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79e3849e]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [PESSIMISTIC_WRITE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a0f86dc]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cd37c0f]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [PESSIMISTIC_FORCE_INCREMENT]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79f1dc7f]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e8dca69]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [OPTIMISTIC]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59b9f6b3]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@357eb3bb]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [OPTIMISTIC_FORCE_INCREMENT]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Threat: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Threat: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Static SQL for entity: sw.entity.Group
 Version select: select id from t_group where id =?
 Snapshot select: select group_.id, group_.create_date as create_d2_4_, group_.info as info3_4_, group_.user_id as user_id5_4_, group_.name as name4_4_ from t_group group_ where group_.id=?
 Insert 0: insert into t_group (create_date, info, user_id, name, id) values (?, ?, ?, ?, ?)
 Update 0: update t_group set create_date=?, info=?, user_id=?, name=? where id=?
 Delete 0: delete from t_group where id=?
 Identity insert: insert into t_group (create_date, info, user_id, name) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12ee92a1]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26569e3c]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Group [NONE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c1b281d]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6605eab6]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Group [READ]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fd28b72]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5365e9e4]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@297c836b]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f0d3873]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE_NOWAIT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@535bcebf]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cfcb8eb]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE_SKIPLOCKED]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7af4c1a7]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62f022a6]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [FORCE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b92e5f3]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e1acc0f]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_READ]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d9c2e78]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39f4c0b1]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_WRITE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41f60934]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@630c65a0]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c62c038]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48d819f0]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [OPTIMISTIC]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4879542e]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@497e4eef]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [OPTIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Group: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Group: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static SQL for entity: sw.entity.Asset
 Version select: select id from t_asset where id =?
 Snapshot select: select asset_.id, asset_.ass_typ_id as ass_typ10_2_, asset_.backup_form as backup_f2_2_, asset_.depart as depart3_2_, asset_.description as descript4_2_, asset_.importance as importan5_2_, asset_.name as name6_2_, asset_.principle as principl7_2_, asset_.project_id as project11_2_, asset_.remark as remark8_2_, asset_.save_form as save_for9_2_ from t_asset asset_ where asset_.id=?
 Insert 0: insert into t_asset (ass_typ_id, backup_form, depart, description, importance, name, principle, project_id, remark, save_form, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update t_asset set ass_typ_id=?, backup_form=?, depart=?, description=?, importance=?, name=?, principle=?, project_id=?, remark=?, save_form=? where id=?
 Delete 0: delete from t_asset where id=?
 Identity insert: insert into t_asset (ass_typ_id, backup_form, depart, description, importance, name, principle, project_id, remark, save_form) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41e1c9a9]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6018d307]
Visiting attribute path : assetType.name
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14c9d680]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28223c6f]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.Asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(assetType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.AssetType)
                - SQL table alias mapping - assettype1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_10_3_}

Static select for entity sw.entity.Asset [NONE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_, assettype1_.id as id1_3_1_, assettype1_.name as name2_3_1_, project2_.id as id1_6_2_, project2_.create_date as create_d2_6_2_, project2_.description as descript3_6_2_, project2_.name as name4_6_2_, project2_.user_id as user_id5_6_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_ from t_asset asset0_ left outer join t_asset_type assettype1_ on asset0_.ass_typ_id=assettype1_.id left outer join t_project project2_ on asset0_.project_id=project2_.id left outer join t_user user3_ on project2_.user_id=user3_.id where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ea5a278]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bc75a5d]
Visiting attribute path : assetType.name
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c791a0f]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7187e39b]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.Asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(assetType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.AssetType)
                - SQL table alias mapping - assettype1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_10_3_}

Static select for entity sw.entity.Asset [READ]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_, assettype1_.id as id1_3_1_, assettype1_.name as name2_3_1_, project2_.id as id1_6_2_, project2_.create_date as create_d2_6_2_, project2_.description as descript3_6_2_, project2_.name as name4_6_2_, project2_.user_id as user_id5_6_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_ from t_asset asset0_ left outer join t_asset_type assettype1_ on asset0_.ass_typ_id=assettype1_.id left outer join t_project project2_ on asset0_.project_id=project2_.id left outer join t_user user3_ on project2_.user_id=user3_.id where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c60f9d4]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78cf3e77]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59be9aad]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@529b6617]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@319e220d]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c58ad61]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE_NOWAIT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15fadb23]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79cc905d]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@202609a0]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE_SKIPLOCKED]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63c6fd44]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5525d6ae]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45debea3]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [FORCE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11a65781]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15888535]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25930a81]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_READ]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62a4bed]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@243d6b4e]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1947ba4a]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_WRITE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4de6efac]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@185603c4]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ce77f6e]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_FORCE_INCREMENT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46866cd1]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a174343]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d0c4960]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [OPTIMISTIC]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381954f4]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@136f3d83]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c8721c7]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [OPTIMISTIC_FORCE_INCREMENT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Asset: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Asset: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static SQL for entity: sw.entity.ProRef
 Version select: select id from t_project_refence where id =?
 Snapshot select: select proref_.id, proref_.project_id as project_2_7_, proref_.ref_pro_id as ref_pro_3_7_ from t_project_refence proref_ where proref_.id=?
 Insert 0: insert into t_project_refence (project_id, ref_pro_id, id) values (?, ?, ?)
 Update 0: update t_project_refence set project_id=?, ref_pro_id=? where id=?
 Delete 0: delete from t_project_refence where id=?
 Identity insert: insert into t_project_refence (project_id, ref_pro_id) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ecb6c57]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@547fd6ac]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44cf3b40]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@638a4911]
Visiting attribute path : referenceFile.company
Visiting attribute path : referenceFile.fileName
Visiting attribute path : referenceFile.publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(referenceFile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.ReferenceFile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_8_3_}

Static select for entity sw.entity.ProRef [NONE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_, project1_.id as id1_6_1_, project1_.create_date as create_d2_6_1_, project1_.description as descript3_6_1_, project1_.name as name4_6_1_, project1_.user_id as user_id5_6_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, referencef3_.id as id1_8_3_, referencef3_.company as company2_8_3_, referencef3_.file_name as file_nam3_8_3_, referencef3_.publish_date as publish_4_8_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@157d4e58]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9d4920]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4012091d]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69db8c73]
Visiting attribute path : referenceFile.company
Visiting attribute path : referenceFile.fileName
Visiting attribute path : referenceFile.publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(referenceFile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.ReferenceFile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_8_3_}

Static select for entity sw.entity.ProRef [READ]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_, project1_.id as id1_6_1_, project1_.create_date as create_d2_6_1_, project1_.description as descript3_6_1_, project1_.name as name4_6_1_, project1_.user_id as user_id5_6_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, referencef3_.id as id1_8_3_, referencef3_.company as company2_8_3_, referencef3_.file_name as file_nam3_8_3_, referencef3_.publish_date as publish_4_8_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12e11ee9]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50755c12]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f6b2a29]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55e7737b]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@db40c84]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b185579]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE_NOWAIT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@750a91ca]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@755c2da5]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cb61dea]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE_SKIPLOCKED]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d934d77]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f111098]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53540ddd]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [FORCE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@443b0a35]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79ddc1aa]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a1401a9]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_READ]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1662c87c]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43710c35]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69c254bb]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_WRITE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69e340d7]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4454e594]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fc81629]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cde0cff]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8c785]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25befba5]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@193ba219]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23cdf833]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71fc4c3c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ProRef: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ProRef: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_10_, user_.name as name3_10_, user_.password as password4_10_, user_.tel as tel5_10_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35930370]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ab081f0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@549ba9f2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b50394c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ed60f27]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7de66bf8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ba47965]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c70bc9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2511c293]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@534bc4ea]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52f127e9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Static SQL for entity: sw.entity.UserGroup
 Version select: select id from t_usergroup where id =?
 Snapshot select: select usergroup_.id, usergroup_.create_date as create_d2_11_, usergroup_.group_id as group_id4_11_, usergroup_.is_headman as is_headm3_11_, usergroup_.modify_userid as modify_u5_11_, usergroup_.project_id as project_6_11_, usergroup_.user_id as user_id7_11_ from t_usergroup usergroup_ where usergroup_.id=?
 Insert 0: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update t_usergroup set create_date=?, group_id=?, is_headman=?, modify_userid=?, project_id=?, user_id=? where id=?
 Delete 0: delete from t_usergroup where id=?
 Identity insert: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id) values (?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b66d60f]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@296af61]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e0d4a4]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76560625]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4073a606]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@255b95fa]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e4f8b34]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_10_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_6_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_10_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.UserGroup [NONE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_, group1_.id as id1_4_1_, group1_.create_date as create_d2_4_1_, group1_.info as info3_4_1_, group1_.user_id as user_id5_4_1_, group1_.name as name4_4_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_, project4_.id as id1_6_4_, project4_.create_date as create_d2_6_4_, project4_.description as descript3_6_4_, project4_.name as name4_6_4_, project4_.user_id as user_id5_6_4_, user5_.id as id1_10_5_, user5_.email as email2_10_5_, user5_.name as name3_10_5_, user5_.password as password4_10_5_, user5_.tel as tel5_10_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7209f29c]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@597337ca]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d6cf17a]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e28b40e]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@173da35b]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3aa67282]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ea0ce55]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_10_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_6_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_10_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.UserGroup [READ]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_, group1_.id as id1_4_1_, group1_.create_date as create_d2_4_1_, group1_.info as info3_4_1_, group1_.user_id as user_id5_4_1_, group1_.name as name4_4_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_, project4_.id as id1_6_4_, project4_.create_date as create_d2_6_4_, project4_.description as descript3_6_4_, project4_.name as name4_6_4_, project4_.user_id as user_id5_6_4_, user5_.id as id1_10_5_, user5_.email as email2_10_5_, user5_.name as name3_10_5_, user5_.password as password4_10_5_, user5_.tel as tel5_10_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f85c3e2]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f2d42f9]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d7f5a62]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c440efc]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14caebe4]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [UPGRADE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6185490e]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6170c3]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59373da0]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1231c2b1]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@119475e2]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_NOWAIT]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e2e87b]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ce07d1a]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ee93c01]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@595fb497]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79d8d799]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_SKIPLOCKED]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62f6d15]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@257eb74a]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a25d863]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@671f49f7]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cb20b89]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [FORCE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c2625b2]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1539b49d]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@692b0bf0]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@642db8d2]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c55486e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_READ]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14908025]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c37ba8c]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ac7915c]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ac6b189]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54739c00]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_WRITE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4501bfd8]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c9f2e52]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14443a5d]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cf3a872]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b74709a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ebc3418]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a6eee79]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7286b30e]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@de555b2]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5db0b22d]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40b092c4]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2086ca95]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78ff2572]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9dae1b]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71014738]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.UserGroup: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.UserGroup: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static SQL for entity: sw.entity.Menu
 Version select: select id from t_menu where id =?
 Snapshot select: select menu_.id, menu_.href as href2_5_, menu_.name as name3_5_, menu_.pid as pid4_5_ from t_menu menu_ where menu_.id=?
 Insert 0: insert into t_menu (href, name, pid, id) values (?, ?, ?, ?)
 Update 0: update t_menu set href=?, name=?, pid=? where id=?
 Delete 0: delete from t_menu where id=?
 Identity insert: insert into t_menu (href, name, pid) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6745f9ef]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [NONE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@372c037f]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [READ]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42db8c6]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31194a5c]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE_NOWAIT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69148384]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE_SKIPLOCKED]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38276c87]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [FORCE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42c561bc]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_READ]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ec5cb89]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_WRITE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5eb6cbf6]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5df68264]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e4afbfb]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Menu: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Menu: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static SQL for entity: sw.entity.ReferenceFile
 Version select: select id from t_referencefile where id =?
 Snapshot select: select referencef_.id, referencef_.company as company2_8_, referencef_.file_name as file_nam3_8_, referencef_.publish_date as publish_4_8_ from t_referencefile referencef_ where referencef_.id=?
 Insert 0: insert into t_referencefile (company, file_name, publish_date, id) values (?, ?, ?, ?)
 Update 0: update t_referencefile set company=?, file_name=?, publish_date=? where id=?
 Delete 0: delete from t_referencefile where id=?
 Identity insert: insert into t_referencefile (company, file_name, publish_date) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6606c24d]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [NONE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a1388a]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [READ]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@91770bd]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ba6255]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE_NOWAIT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70a5cd22]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE_SKIPLOCKED]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b519be7]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [FORCE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39d00faa]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_READ]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c42056a]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_WRITE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52f6d4ac]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c40e28d]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [OPTIMISTIC]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@236327b]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [OPTIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ReferenceFile: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ReferenceFile: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static SQL for entity: sw.entity.Project
 Version select: select id from t_project where id =?
 Snapshot select: select project_.id, project_.create_date as create_d2_6_, project_.description as descript3_6_, project_.name as name4_6_, project_.user_id as user_id5_6_ from t_project project_ where project_.id=?
 Insert 0: insert into t_project (create_date, description, name, user_id, id) values (?, ?, ?, ?, ?)
 Update 0: update t_project set create_date=?, description=?, name=?, user_id=? where id=?
 Delete 0: delete from t_project where id=?
 Identity insert: insert into t_project (create_date, description, name, user_id) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2707c7e9]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c35081e]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Project [NONE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19d32da1]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18776c0a]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Project [READ]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c791383]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5423ea76]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64981a1c]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@699ac9ed]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE_NOWAIT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22a1fef2]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@695be14e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE_SKIPLOCKED]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56b19829]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17a96212]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [FORCE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@214eb038]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5553a045]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_READ]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@936e10f]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6354368]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_WRITE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eac9a63]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47cdab13]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b4f8e81]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5086cf3e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [OPTIMISTIC]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a39730e]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fed10d3]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [OPTIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Project: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Project: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static SQL for entity: sw.entity.AssetType
 Version select: select id from t_asset_type where id =?
 Snapshot select: select assettype_.id, assettype_.name as name2_3_ from t_asset_type assettype_ where assettype_.id=?
 Insert 0: insert into t_asset_type (name, id) values (?, ?)
 Update 0: update t_asset_type set name=? where id=?
 Delete 0: delete from t_asset_type where id=?
 Identity insert: insert into t_asset_type (name) values (?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19f4cf2f]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [NONE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bb8d5ff]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [READ]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43761ec3]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6553bfe0]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE_NOWAIT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4be79bed]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE_SKIPLOCKED]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@373f7468]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [FORCE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58ada30d]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_READ]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74aa34]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_WRITE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9454b1e]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_FORCE_INCREMENT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40d2f935]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [OPTIMISTIC]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76ae38ca]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [OPTIMISTIC_FORCE_INCREMENT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.AssetType: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.AssetType: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static SQL for entity: sw.entity.Action
 Version select: select id from t_action where id =?
 Snapshot select: select action_.id, action_.menu_id as menu_id4_0_, action_.name as name2_0_, action_.url as url3_0_ from t_action action_ where action_.id=?
 Insert 0: insert into t_action (menu_id, name, url, id) values (?, ?, ?, ?)
 Update 0: update t_action set menu_id=?, name=?, url=? where id=?
 Delete 0: delete from t_action where id=?
 Identity insert: insert into t_action (menu_id, name, url) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@529639b3]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49ee91c]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

Static select for entity sw.entity.Action [NONE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_5_1_, menu1_.href as href2_5_1_, menu1_.name as name3_5_1_, menu1_.pid as pid4_5_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3131dbb3]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ea7c319]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

Static select for entity sw.entity.Action [READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_5_1_, menu1_.href as href2_5_1_, menu1_.name as name3_5_1_, menu1_.pid as pid4_5_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a39925b]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37840730]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33d2d451]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fd0c729]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_NOWAIT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@187afc64]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5185610a]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_SKIPLOCKED]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58e51d9c]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5444964b]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [FORCE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e3320f8]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@536d633d]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23eb41d5]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c20ea4b]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_WRITE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24ec1679]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dc5e1d7]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ac3096]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f6ce1b4]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d0562d7]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@351d7f5d]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static SQL for entity: sw.entity.ActionGroup
 Version select: select id from t_actiongroup where id =?
 Snapshot select: select actiongrou_.id, actiongrou_.action_id as action_i3_1_, actiongrou_.create_date as create_d2_1_, actiongrou_.group_id as group_id4_1_, actiongrou_.menu_id as menu_id5_1_, actiongrou_.user_id as user_id6_1_ from t_actiongroup actiongrou_ where actiongrou_.id=?
 Insert 0: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update t_actiongroup set action_id=?, create_date=?, group_id=?, menu_id=?, user_id=? where id=?
 Delete 0: delete from t_actiongroup where id=?
 Identity insert: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id) values (?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d94590b]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@572cf662]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7636c065]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1112549f]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74b59e01]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f3ca0c0]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51fff8ed]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_10_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_5_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.ActionGroup [NONE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_5_2_, menu2_.href as href2_5_2_, menu2_.name as name3_5_2_, menu2_.pid as pid4_5_2_, group3_.id as id1_4_3_, group3_.create_date as create_d2_4_3_, group3_.info as info3_4_3_, group3_.user_id as user_id5_4_3_, group3_.name as name4_4_3_, user4_.id as id1_10_4_, user4_.email as email2_10_4_, user4_.name as name3_10_4_, user4_.password as password4_10_4_, user4_.tel as tel5_10_4_, menu5_.id as id1_5_5_, menu5_.href as href2_5_5_, menu5_.name as name3_5_5_, menu5_.pid as pid4_5_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a0ca3e0]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c32a254]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@127f4fe7]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9539ce8]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73aad41e]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63015f4c]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48652559]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_10_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_5_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.ActionGroup [READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_5_2_, menu2_.href as href2_5_2_, menu2_.name as name3_5_2_, menu2_.pid as pid4_5_2_, group3_.id as id1_4_3_, group3_.create_date as create_d2_4_3_, group3_.info as info3_4_3_, group3_.user_id as user_id5_4_3_, group3_.name as name4_4_3_, user4_.id as id1_10_4_, user4_.email as email2_10_4_, user4_.name as name3_10_4_, user4_.password as password4_10_4_, user4_.tel as tel5_10_4_, menu5_.id as id1_5_5_, menu5_.href as href2_5_5_, menu5_.name as name3_5_5_, menu5_.pid as pid4_5_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@566d5bac]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a8254bc]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@497f6344]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7573e1fc]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79089b3c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61371715]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39f65ab5]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49af7cc]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d4cd7f5]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f97c8e5]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_NOWAIT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43f0850]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c003def]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5de1106a]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2160fe0e]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e6b575]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_SKIPLOCKED]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ee419a3]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2de53fbf]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bae6a6b]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@557947bc]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47ba84ce]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [FORCE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43a65341]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4587417]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17571ca6]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@661a6956]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61bd210d]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@268209e1]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c7a1b17]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34c7e0dc]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23c2aa4]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@774be313]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_WRITE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b05fc4e]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73455f45]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bbe6945]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f6d09f0]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63c9241]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f5a5ab4]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@702351c2]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@126f6b1d]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fed0c1e]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f099794]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35ce60f6]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b6ab8b1]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@384c2f7f]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e433150]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@249f6203]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Instantiated session factory
HHH000228: Running hbm2ddl schema update
No alter strings for table : t_action
No alter strings for table : t_actiongroup
No alter strings for table : t_asset
No alter strings for table : t_asset_type
No alter strings for table : t_group
No alter strings for table : t_menu
No alter strings for table : t_project
No alter strings for table : t_project_refence
No alter strings for table : t_referencefile
HHH000262: Table not found: t_threat
HHH000262: Table not found: t_threat
No alter strings for table : t_user
No alter strings for table : t_usergroup
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@15129468
Registering SessionFactory: 5654ce83-e764-4950-9177-d11c7562a14f (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@73354694
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'assetServiceImpl': Unsatisfied dependency expressed through field 'assetType'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'sw.entity.AssetType' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting Application on LuoRong with PID 2932 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4fed91f0: startup date [Tue Nov 21 15:00:28 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e3cf334] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3474 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1b08dbd
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@7f99cc14{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.Action
		sw.entity.ActionGroup
		sw.entity.Asset
		sw.entity.AssetType
		sw.entity.Group
		sw.entity.Menu
		sw.entity.Project
		sw.entity.ProRef
		sw.entity.ReferenceFile
		sw.entity.Threat
		sw.entity.User
		sw.entity.UserGroup]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@3edc397b
Adding type registration boolean -> org.hibernate.type.BooleanType@3edc397b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3edc397b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@427e3249
Adding type registration true_false -> org.hibernate.type.TrueFalseType@691bccac
Adding type registration yes_no -> org.hibernate.type.YesNoType@10b42a0d
Adding type registration byte -> org.hibernate.type.ByteType@4ee03e9d
Adding type registration byte -> org.hibernate.type.ByteType@4ee03e9d
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4ee03e9d
Adding type registration character -> org.hibernate.type.CharacterType@66358a23
Adding type registration char -> org.hibernate.type.CharacterType@66358a23
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66358a23
Adding type registration short -> org.hibernate.type.ShortType@1b931614
Adding type registration short -> org.hibernate.type.ShortType@1b931614
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1b931614
Adding type registration integer -> org.hibernate.type.IntegerType@6c46be1d
Adding type registration int -> org.hibernate.type.IntegerType@6c46be1d
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6c46be1d
Adding type registration long -> org.hibernate.type.LongType@770d0139
Adding type registration long -> org.hibernate.type.LongType@770d0139
Adding type registration java.lang.Long -> org.hibernate.type.LongType@770d0139
Adding type registration float -> org.hibernate.type.FloatType@2fb779a8
Adding type registration float -> org.hibernate.type.FloatType@2fb779a8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2fb779a8
Adding type registration double -> org.hibernate.type.DoubleType@708f9c6
Adding type registration double -> org.hibernate.type.DoubleType@708f9c6
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@708f9c6
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@b8ea8da
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@b8ea8da
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@60290009
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@60290009
Adding type registration string -> org.hibernate.type.StringType@41f3202b
Adding type registration java.lang.String -> org.hibernate.type.StringType@41f3202b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@c7454cd
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e27daf6
Adding type registration url -> org.hibernate.type.UrlType@1f76936d
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1f76936d
Adding type registration date -> org.hibernate.type.DateType@69fbf27c
Adding type registration java.sql.Date -> org.hibernate.type.DateType@69fbf27c
Adding type registration time -> org.hibernate.type.TimeType@34957ccb
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@34957ccb
Adding type registration timestamp -> org.hibernate.type.TimestampType@31ccd059
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@31ccd059
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@31ccd059
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7f9183a
Adding type registration calendar -> org.hibernate.type.CalendarType@2fcb1f59
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2fcb1f59
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2fcb1f59
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@66a39ad0
Adding type registration locale -> org.hibernate.type.LocaleType@78a95208
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@78a95208
Adding type registration currency -> org.hibernate.type.CurrencyType@32b2cbb9
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@32b2cbb9
Adding type registration timezone -> org.hibernate.type.TimeZoneType@ab4350b
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@ab4350b
Adding type registration class -> org.hibernate.type.ClassType@5485886d
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5485886d
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4d24b361
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4d24b361
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@328a1ac7
Adding type registration binary -> org.hibernate.type.BinaryType@19d15236
Adding type registration byte[] -> org.hibernate.type.BinaryType@19d15236
Adding type registration [B -> org.hibernate.type.BinaryType@19d15236
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@50020346
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@50020346
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@50020346
Adding type registration row_version -> org.hibernate.type.RowVersionType@5b4a8ac1
Adding type registration image -> org.hibernate.type.ImageType@33c4011d
Adding type registration characters -> org.hibernate.type.CharArrayType@1db54b22
Adding type registration char[] -> org.hibernate.type.CharArrayType@1db54b22
Adding type registration [C -> org.hibernate.type.CharArrayType@1db54b22
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@556419d0
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@556419d0
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@556419d0
Adding type registration text -> org.hibernate.type.TextType@32337669
Adding type registration ntext -> org.hibernate.type.NTextType@66b649db
Adding type registration blob -> org.hibernate.type.BlobType@7af8b36c
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7af8b36c
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@71086bf
Adding type registration clob -> org.hibernate.type.ClobType@584901f9
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@584901f9
Adding type registration nclob -> org.hibernate.type.NClobType@121e19a4
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@121e19a4
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12dddb8a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a8d334c
Adding type registration serializable -> org.hibernate.type.SerializableType@6cac08c2
Adding type registration object -> org.hibernate.type.ObjectType@4357ea00
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4357ea00
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6848ce9c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@14333e7f
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5f76bc12
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1cd7f6cd
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3245e7e5
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3f88f714
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@55745adb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@76b6bf26
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.Threat
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Threat
Bind entity sw.entity.Threat on table t_threat
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='asset_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=asset, insertable=true, updatable=true, unique=false}
Building property asset
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=frequency, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property frequency with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:frequency]
building SimpleValue for frequency
Building property frequency
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=threat_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property threatName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:threatName]
building SimpleValue for threatName
Building property threatName
Binding entity from annotated class: sw.entity.Group
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Group
Bind entity sw.entity.Group on table t_group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=info, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property info with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:info]
building SimpleValue for info
Building property info
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Asset
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Asset
Bind entity sw.entity.Asset on table t_asset
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='ass_typ_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=asset_type, insertable=true, updatable=true, unique=false}
Building property assetType
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=backup_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property backupForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:backupForm]
building SimpleValue for backupForm
Building property backupForm
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=depart, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property depart with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:depart]
building SimpleValue for depart
Building property depart
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=importance, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property importance with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:importance]
building SimpleValue for importance
Building property importance
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=principle, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property principle with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:principle]
building SimpleValue for principle
Building property principle
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=remark, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property remark with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:remark]
building SimpleValue for remark
Building property remark
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=save_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property saveForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:saveForm]
building SimpleValue for saveForm
Building property saveForm
Binding entity from annotated class: sw.entity.ProRef
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ProRef
Bind entity sw.entity.ProRef on table t_project_refence
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ProRef:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='ref_pro_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=reference_file, insertable=true, updatable=true, unique=false}
Building property referenceFile
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Binding entity from annotated class: sw.entity.UserGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name UserGroup
Bind entity sw.entity.UserGroup on table t_usergroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=is_headman, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property isHeadman with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:isHeadman]
building SimpleValue for isHeadman
Building property isHeadman
Binding column: Ejb3JoinColumn{logicalColumnName='modify_userid', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.Menu
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Menu
Bind entity sw.entity.Menu on table t_menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=href, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property href with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:href]
building SimpleValue for href
Building property href
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=pid, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property pid with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:pid]
building SimpleValue for pid
Building property pid
Binding entity from annotated class: sw.entity.ReferenceFile
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ReferenceFile
Bind entity sw.entity.ReferenceFile on table t_referencefile
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=company, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property company with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:company]
building SimpleValue for company
Building property company
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=file_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property fileName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:fileName]
building SimpleValue for fileName
Building property fileName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=publish_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property publishDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:publishDate]
building SimpleValue for publishDate
Building property publishDate
Binding entity from annotated class: sw.entity.Project
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Project
Bind entity sw.entity.Project on table t_project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:name]
building SimpleValue for name
Building property name
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.AssetType
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AssetType
Bind entity sw.entity.AssetType on table t_asset_type
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Action
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Action
Bind entity sw.entity.Action on table t_action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=url, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property url with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:url]
building SimpleValue for url
Building property url
Binding entity from annotated class: sw.entity.ActionGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ActionGroup
Bind entity sw.entity.ActionGroup on table t_actiongroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='action_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=action, insertable=true, updatable=true, unique=false}
Building property action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Starting fillSimpleValue for id
Starting fillSimpleValue for frequency
Starting fillSimpleValue for threatName
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for info
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for backupForm
Starting fillSimpleValue for depart
Starting fillSimpleValue for description
Starting fillSimpleValue for importance
Starting fillSimpleValue for name
Starting fillSimpleValue for principle
Starting fillSimpleValue for remark
Starting fillSimpleValue for saveForm
Starting fillSimpleValue for id
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for isHeadman
Starting fillSimpleValue for id
Starting fillSimpleValue for href
Starting fillSimpleValue for name
Starting fillSimpleValue for pid
Starting fillSimpleValue for id
Starting fillSimpleValue for company
Starting fillSimpleValue for fileName
Starting fillSimpleValue for publishDate
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for description
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for url
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Forcing column [id] to be non-null as it is part of the primary key for table [t_threat]
Forcing column [id] to be non-null as it is part of the primary key for table [t_group]
Forcing column [id] to be non-null as it is part of the primary key for table [t_asset]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project_refence]
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Forcing column [id] to be non-null as it is part of the primary key for table [t_usergroup]
Forcing column [id] to be non-null as it is part of the primary key for table [t_menu]
Forcing column [id] to be non-null as it is part of the primary key for table [t_referencefile]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project]
Forcing column [id] to be non-null as it is part of the primary key for table [t_asset_type]
Forcing column [id] to be non-null as it is part of the primary key for table [t_action]
Forcing column [id] to be non-null as it is part of the primary key for table [t_actiongroup]
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.AssetType
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.ReferenceFile
Resolving reference to class: sw.entity.Asset
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.AssetType
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.ReferenceFile
Resolving reference to class: sw.entity.Asset
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@632675fc
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.4320803397423423753.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=2932, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2426ddee, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@7f99cc14{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar;C:\Users\LR\.m2\repository\commons-beanutils\commons-beanutils\1.9.3\commons-beanutils-1.9.3.jar;C:\Users\LR\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\LR\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi\3.14\poi-3.14.jar;C:\Users\LR\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi-ooxml\3.14\poi-ooxml-3.14.jar;C:\Users\LR\.m2\repository\com\github\virtuald\curvesapi\1.03\curvesapi-1.03.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi-ooxml-schemas\3.14\poi-ooxml-schemas-3.14.jar;C:\Users\LR\.m2\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;C:\Users\LR\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.4320803397423423753.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2356cc97, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.Threat] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Threat
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@380948f9, payload=[Ljava.lang.Class;@5e6bfbe9}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@362fef4a, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@132c878f}, constraintType=GENERIC}.
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@711db58f, payload=[Ljava.lang.Class;@66ce40fa}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@68d88fff, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@15876de7}, constraintType=GENERIC}.
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.Threat] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Threat
Not known whether passed class name [sw.entity.Threat] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Threat
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Static SQL for entity: sw.entity.Threat
 Version select: select id from t_threat where id =?
 Snapshot select: select threat_.id, threat_.asset_id as asset_id4_9_, threat_.frequency as frequenc2_9_, threat_.threat_name as threat_n3_9_ from t_threat threat_ where threat_.id=?
 Insert 0: insert into t_threat (asset_id, frequency, threat_name, id) values (?, ?, ?, ?)
 Update 0: update t_threat set asset_id=?, frequency=?, threat_name=? where id=?
 Delete 0: delete from t_threat where id=?
 Identity insert: insert into t_threat (asset_id, frequency, threat_name) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2eda9864]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54cba270]
Visiting attribute path : asset.assetType
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11b4b1b9]
Visiting attribute path : asset.assetType.name
Visiting attribute path : asset.backupForm
Visiting attribute path : asset.depart
Visiting attribute path : asset.description
Visiting attribute path : asset.importance
Visiting attribute path : asset.name
Visiting attribute path : asset.principle
Visiting attribute path : asset.project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ce05133]
Visiting attribute path : asset.project.createDate
Visiting attribute path : asset.project.description
Visiting attribute path : asset.project.name
Visiting attribute path : asset.project.user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@525d8083]
Visiting attribute path : asset.remark
Visiting attribute path : asset.saveForm
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
             - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:2>, path=sw.entity.Threat.asset.assetType)
             - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.Threat.asset.project)
                - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.Threat.asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}
          - JOIN (JoinDefinedByMetadata(asset)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Asset)
                - SQL table alias mapping - asset1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(assetType)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.AssetType)
                      - SQL table alias mapping - assettype2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_6_3_}

Static select for entity sw.entity.Threat [NONE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_, asset1_.id as id1_2_1_, asset1_.ass_typ_id as ass_typ10_2_1_, asset1_.backup_form as backup_f2_2_1_, asset1_.depart as depart3_2_1_, asset1_.description as descript4_2_1_, asset1_.importance as importan5_2_1_, asset1_.name as name6_2_1_, asset1_.principle as principl7_2_1_, asset1_.project_id as project11_2_1_, asset1_.remark as remark8_2_1_, asset1_.save_form as save_for9_2_1_, assettype2_.id as id1_3_2_, assettype2_.name as name2_3_2_, project3_.id as id1_6_3_, project3_.create_date as create_d2_6_3_, project3_.description as descript3_6_3_, project3_.name as name4_6_3_, project3_.user_id as user_id5_6_3_ from t_threat threat0_ left outer join t_asset asset1_ on threat0_.asset_id=asset1_.id left outer join t_asset_type assettype2_ on asset1_.ass_typ_id=assettype2_.id left outer join t_project project3_ on asset1_.project_id=project3_.id where threat0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20027a5]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a816a64]
Visiting attribute path : asset.assetType
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6637daa1]
Visiting attribute path : asset.assetType.name
Visiting attribute path : asset.backupForm
Visiting attribute path : asset.depart
Visiting attribute path : asset.description
Visiting attribute path : asset.importance
Visiting attribute path : asset.name
Visiting attribute path : asset.principle
Visiting attribute path : asset.project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@130cf2fc]
Visiting attribute path : asset.project.createDate
Visiting attribute path : asset.project.description
Visiting attribute path : asset.project.name
Visiting attribute path : asset.project.user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61305fd1]
Visiting attribute path : asset.remark
Visiting attribute path : asset.saveForm
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
             - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:2>, path=sw.entity.Threat.asset.assetType)
             - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.Threat.asset.project)
                - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.Threat.asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}
          - JOIN (JoinDefinedByMetadata(asset)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Asset)
                - SQL table alias mapping - asset1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(assetType)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.AssetType)
                      - SQL table alias mapping - assettype2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_6_3_}

Static select for entity sw.entity.Threat [READ]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_, asset1_.id as id1_2_1_, asset1_.ass_typ_id as ass_typ10_2_1_, asset1_.backup_form as backup_f2_2_1_, asset1_.depart as depart3_2_1_, asset1_.description as descript4_2_1_, asset1_.importance as importan5_2_1_, asset1_.name as name6_2_1_, asset1_.principle as principl7_2_1_, asset1_.project_id as project11_2_1_, asset1_.remark as remark8_2_1_, asset1_.save_form as save_for9_2_1_, assettype2_.id as id1_3_2_, assettype2_.name as name2_3_2_, project3_.id as id1_6_3_, project3_.create_date as create_d2_6_3_, project3_.description as descript3_6_3_, project3_.name as name4_6_3_, project3_.user_id as user_id5_6_3_ from t_threat threat0_ left outer join t_asset asset1_ on threat0_.asset_id=asset1_.id left outer join t_asset_type assettype2_ on asset1_.ass_typ_id=assettype2_.id left outer join t_project project3_ on asset1_.project_id=project3_.id where threat0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78b2862e]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66793fae]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [UPGRADE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d43a67]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d843954]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [UPGRADE_NOWAIT]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222fe305]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35fc5696]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [UPGRADE_SKIPLOCKED]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@191e97e4]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25883768]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [FORCE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72979da9]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7808027a]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [PESSIMISTIC_READ]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c5f5964]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@115edca3]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [PESSIMISTIC_WRITE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29fd1720]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42c54c0d]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [PESSIMISTIC_FORCE_INCREMENT]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25992b32]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@545bf8d8]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [OPTIMISTIC]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c16637a]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57c4b00c]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [OPTIMISTIC_FORCE_INCREMENT]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Threat: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Threat: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Static SQL for entity: sw.entity.Group
 Version select: select id from t_group where id =?
 Snapshot select: select group_.id, group_.create_date as create_d2_4_, group_.info as info3_4_, group_.user_id as user_id5_4_, group_.name as name4_4_ from t_group group_ where group_.id=?
 Insert 0: insert into t_group (create_date, info, user_id, name, id) values (?, ?, ?, ?, ?)
 Update 0: update t_group set create_date=?, info=?, user_id=?, name=? where id=?
 Delete 0: delete from t_group where id=?
 Identity insert: insert into t_group (create_date, info, user_id, name) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b2aa981]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1682e569]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Group [NONE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ac2216a]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58e8fd1b]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Group [READ]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70556dcc]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31c3de1e]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@241432b1]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36169241]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE_NOWAIT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@190a89b3]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43a2417a]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE_SKIPLOCKED]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41a457d5]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65c5f336]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [FORCE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@343dc765]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b5c5b72]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_READ]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@614a416c]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d823511]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_WRITE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cc7018]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39007a28]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6576faa4]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4522c255]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [OPTIMISTIC]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f4921e3]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475a506b]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [OPTIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Group: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Group: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static SQL for entity: sw.entity.Asset
 Version select: select id from t_asset where id =?
 Snapshot select: select asset_.id, asset_.ass_typ_id as ass_typ10_2_, asset_.backup_form as backup_f2_2_, asset_.depart as depart3_2_, asset_.description as descript4_2_, asset_.importance as importan5_2_, asset_.name as name6_2_, asset_.principle as principl7_2_, asset_.project_id as project11_2_, asset_.remark as remark8_2_, asset_.save_form as save_for9_2_ from t_asset asset_ where asset_.id=?
 Insert 0: insert into t_asset (ass_typ_id, backup_form, depart, description, importance, name, principle, project_id, remark, save_form, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update t_asset set ass_typ_id=?, backup_form=?, depart=?, description=?, importance=?, name=?, principle=?, project_id=?, remark=?, save_form=? where id=?
 Delete 0: delete from t_asset where id=?
 Identity insert: insert into t_asset (ass_typ_id, backup_form, depart, description, importance, name, principle, project_id, remark, save_form) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@143902bf]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d250f28]
Visiting attribute path : assetType.name
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4991aa7]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8ff4d76]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.Asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(assetType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.AssetType)
                - SQL table alias mapping - assettype1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_10_3_}

Static select for entity sw.entity.Asset [NONE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_, assettype1_.id as id1_3_1_, assettype1_.name as name2_3_1_, project2_.id as id1_6_2_, project2_.create_date as create_d2_6_2_, project2_.description as descript3_6_2_, project2_.name as name4_6_2_, project2_.user_id as user_id5_6_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_ from t_asset asset0_ left outer join t_asset_type assettype1_ on asset0_.ass_typ_id=assettype1_.id left outer join t_project project2_ on asset0_.project_id=project2_.id left outer join t_user user3_ on project2_.user_id=user3_.id where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52bfc86b]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fddea32]
Visiting attribute path : assetType.name
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3078e1e3]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@711ed4e8]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.Asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(assetType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.AssetType)
                - SQL table alias mapping - assettype1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_10_3_}

Static select for entity sw.entity.Asset [READ]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_, assettype1_.id as id1_3_1_, assettype1_.name as name2_3_1_, project2_.id as id1_6_2_, project2_.create_date as create_d2_6_2_, project2_.description as descript3_6_2_, project2_.name as name4_6_2_, project2_.user_id as user_id5_6_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_ from t_asset asset0_ left outer join t_asset_type assettype1_ on asset0_.ass_typ_id=assettype1_.id left outer join t_project project2_ on asset0_.project_id=project2_.id left outer join t_user user3_ on project2_.user_id=user3_.id where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e9aeb99]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29a210db]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53c77abf]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a88957d]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c0527e0]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@447fb25d]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE_NOWAIT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ac2e4d2]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cfc78ec]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35a8de74]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE_SKIPLOCKED]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78814867]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@524f632]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@760cd39c]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [FORCE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43c6f4a]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ad3ad85]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a530770]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_READ]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d72754f]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20aa077f]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6200fc9d]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_WRITE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c76259f]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a2f1254]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3faee998]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_FORCE_INCREMENT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4289692f]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39cdfeee]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71672266]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [OPTIMISTIC]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78aeed74]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@220feb0d]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ab38938]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [OPTIMISTIC_FORCE_INCREMENT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Asset: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Asset: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static SQL for entity: sw.entity.ProRef
 Version select: select id from t_project_refence where id =?
 Snapshot select: select proref_.id, proref_.project_id as project_2_7_, proref_.ref_pro_id as ref_pro_3_7_ from t_project_refence proref_ where proref_.id=?
 Insert 0: insert into t_project_refence (project_id, ref_pro_id, id) values (?, ?, ?)
 Update 0: update t_project_refence set project_id=?, ref_pro_id=? where id=?
 Delete 0: delete from t_project_refence where id=?
 Identity insert: insert into t_project_refence (project_id, ref_pro_id) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f91c57]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56f1f021]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dcbf272]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e5908e]
Visiting attribute path : referenceFile.company
Visiting attribute path : referenceFile.fileName
Visiting attribute path : referenceFile.publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(referenceFile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.ReferenceFile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_8_3_}

Static select for entity sw.entity.ProRef [NONE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_, project1_.id as id1_6_1_, project1_.create_date as create_d2_6_1_, project1_.description as descript3_6_1_, project1_.name as name4_6_1_, project1_.user_id as user_id5_6_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, referencef3_.id as id1_8_3_, referencef3_.company as company2_8_3_, referencef3_.file_name as file_nam3_8_3_, referencef3_.publish_date as publish_4_8_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e143b66]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b318f28]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8a4a58c]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7eb3577b]
Visiting attribute path : referenceFile.company
Visiting attribute path : referenceFile.fileName
Visiting attribute path : referenceFile.publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(referenceFile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.ReferenceFile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_8_3_}

Static select for entity sw.entity.ProRef [READ]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_, project1_.id as id1_6_1_, project1_.create_date as create_d2_6_1_, project1_.description as descript3_6_1_, project1_.name as name4_6_1_, project1_.user_id as user_id5_6_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, referencef3_.id as id1_8_3_, referencef3_.company as company2_8_3_, referencef3_.file_name as file_nam3_8_3_, referencef3_.publish_date as publish_4_8_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@476edb09]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9c09fa]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ab95e23]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b3e6aee]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b35a6d8]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b3dafdb]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE_NOWAIT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@331cd348]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1781da7b]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@154ec27]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE_SKIPLOCKED]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5407e9d6]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69034156]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f10ad85]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [FORCE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2432b4e8]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67c9d456]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d7f21af]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_READ]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c5b551c]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38549df6]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c72a10a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_WRITE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a47fa2d]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13d4c906]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ad74087]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f544962]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f6a7aca]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f69dad8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ab8d0e]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cb9bf2d]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dc70f78]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ProRef: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ProRef: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_10_, user_.name as name3_10_, user_.password as password4_10_, user_.tel as tel5_10_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@630a3c33]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b250c79]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c153ae4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@616c6dd7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@198f4511]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76d27ccc]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dd528e0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@691de1c2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@294176c6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45b68132]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@342a9146]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Static SQL for entity: sw.entity.UserGroup
 Version select: select id from t_usergroup where id =?
 Snapshot select: select usergroup_.id, usergroup_.create_date as create_d2_11_, usergroup_.group_id as group_id4_11_, usergroup_.is_headman as is_headm3_11_, usergroup_.modify_userid as modify_u5_11_, usergroup_.project_id as project_6_11_, usergroup_.user_id as user_id7_11_ from t_usergroup usergroup_ where usergroup_.id=?
 Insert 0: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update t_usergroup set create_date=?, group_id=?, is_headman=?, modify_userid=?, project_id=?, user_id=? where id=?
 Delete 0: delete from t_usergroup where id=?
 Identity insert: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id) values (?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dc40f47]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@120416b3]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16d37188]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@768eb19b]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57cc9b4f]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cd977a6]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62baaad1]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_10_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_6_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_10_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.UserGroup [NONE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_, group1_.id as id1_4_1_, group1_.create_date as create_d2_4_1_, group1_.info as info3_4_1_, group1_.user_id as user_id5_4_1_, group1_.name as name4_4_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_, project4_.id as id1_6_4_, project4_.create_date as create_d2_6_4_, project4_.description as descript3_6_4_, project4_.name as name4_6_4_, project4_.user_id as user_id5_6_4_, user5_.id as id1_10_5_, user5_.email as email2_10_5_, user5_.name as name3_10_5_, user5_.password as password4_10_5_, user5_.tel as tel5_10_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a13309b]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76d6fbf0]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58e901f2]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@316d3f7f]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6109e915]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a74ad2]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4038fe29]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_10_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_6_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_10_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.UserGroup [READ]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_, group1_.id as id1_4_1_, group1_.create_date as create_d2_4_1_, group1_.info as info3_4_1_, group1_.user_id as user_id5_4_1_, group1_.name as name4_4_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_, project4_.id as id1_6_4_, project4_.create_date as create_d2_6_4_, project4_.description as descript3_6_4_, project4_.name as name4_6_4_, project4_.user_id as user_id5_6_4_, user5_.id as id1_10_5_, user5_.email as email2_10_5_, user5_.name as name3_10_5_, user5_.password as password4_10_5_, user5_.tel as tel5_10_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aeaf66d]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cbf12ad]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19803c14]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2464f8d7]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14f7458d]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [UPGRADE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@501917c4]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b400ad4]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6535f51c]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d8a7949]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3aa6043e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_NOWAIT]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71fbbf14]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15c24f3f]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f4f2e4d]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e021af]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@695febd8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_SKIPLOCKED]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e63ea7b]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a67395d]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cf014e2]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d310335]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1120b943]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [FORCE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@128ed7eb]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b08021c]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f76449f]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ba3e515]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f6d74b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_READ]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22c52c8b]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b550d53]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54a6c3fd]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f0c0c96]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6658bcc1]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_WRITE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a41acc]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7828407b]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b35550b]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec256db]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6563bb41]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ff2040e]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62267070]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ae766c6]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@557ad3e0]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f411786]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e3543ee]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ca3e663]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b593356]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f0725e0]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5eee83a7]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.UserGroup: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.UserGroup: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static SQL for entity: sw.entity.Menu
 Version select: select id from t_menu where id =?
 Snapshot select: select menu_.id, menu_.href as href2_5_, menu_.name as name3_5_, menu_.pid as pid4_5_ from t_menu menu_ where menu_.id=?
 Insert 0: insert into t_menu (href, name, pid, id) values (?, ?, ?, ?)
 Update 0: update t_menu set href=?, name=?, pid=? where id=?
 Delete 0: delete from t_menu where id=?
 Identity insert: insert into t_menu (href, name, pid) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d1de6e7]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [NONE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3972bdb9]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [READ]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@415304c7]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76abae2]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE_NOWAIT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12b5efa6]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE_SKIPLOCKED]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2148ea64]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [FORCE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a5bd2a0]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_READ]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30d7847b]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_WRITE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25ab14aa]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d85b158]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39199493]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Menu: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Menu: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static SQL for entity: sw.entity.ReferenceFile
 Version select: select id from t_referencefile where id =?
 Snapshot select: select referencef_.id, referencef_.company as company2_8_, referencef_.file_name as file_nam3_8_, referencef_.publish_date as publish_4_8_ from t_referencefile referencef_ where referencef_.id=?
 Insert 0: insert into t_referencefile (company, file_name, publish_date, id) values (?, ?, ?, ?)
 Update 0: update t_referencefile set company=?, file_name=?, publish_date=? where id=?
 Delete 0: delete from t_referencefile where id=?
 Identity insert: insert into t_referencefile (company, file_name, publish_date) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c879cc]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [NONE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17cfc13c]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [READ]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c3abeed]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cac56d0]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE_NOWAIT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47a3721f]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE_SKIPLOCKED]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51975ca9]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [FORCE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48dd0be0]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_READ]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@506effb4]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_WRITE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71f8fb22]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@514f0568]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [OPTIMISTIC]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65c72ae8]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [OPTIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ReferenceFile: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ReferenceFile: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static SQL for entity: sw.entity.Project
 Version select: select id from t_project where id =?
 Snapshot select: select project_.id, project_.create_date as create_d2_6_, project_.description as descript3_6_, project_.name as name4_6_, project_.user_id as user_id5_6_ from t_project project_ where project_.id=?
 Insert 0: insert into t_project (create_date, description, name, user_id, id) values (?, ?, ?, ?, ?)
 Update 0: update t_project set create_date=?, description=?, name=?, user_id=? where id=?
 Delete 0: delete from t_project where id=?
 Identity insert: insert into t_project (create_date, description, name, user_id) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64e3f833]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c79a852]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Project [NONE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cb0ced0]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17232959]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Project [READ]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@268e0eb7]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57484b83]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f8fb1f0]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eeab112]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE_NOWAIT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bebe11f]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@175d296d]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE_SKIPLOCKED]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cd468b5]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f60a54f]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [FORCE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2188f98f]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6af8ccef]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_READ]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30e84622]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d21dbd7]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_WRITE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3192e328]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41588c35]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@523418aa]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c7b5490]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [OPTIMISTIC]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79c7460e]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36b329c9]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [OPTIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Project: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Project: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static SQL for entity: sw.entity.AssetType
 Version select: select id from t_asset_type where id =?
 Snapshot select: select assettype_.id, assettype_.name as name2_3_ from t_asset_type assettype_ where assettype_.id=?
 Insert 0: insert into t_asset_type (name, id) values (?, ?)
 Update 0: update t_asset_type set name=? where id=?
 Delete 0: delete from t_asset_type where id=?
 Identity insert: insert into t_asset_type (name) values (?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10ca345b]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [NONE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f10ef91]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [READ]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11ebf274]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d1e9f53]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE_NOWAIT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@404f3d66]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE_SKIPLOCKED]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18e9fa3b]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [FORCE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67ff6860]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_READ]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@314f695e]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_WRITE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6593f2fc]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_FORCE_INCREMENT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a65d9e8]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [OPTIMISTIC]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@500617fe]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [OPTIMISTIC_FORCE_INCREMENT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.AssetType: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.AssetType: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static SQL for entity: sw.entity.Action
 Version select: select id from t_action where id =?
 Snapshot select: select action_.id, action_.menu_id as menu_id4_0_, action_.name as name2_0_, action_.url as url3_0_ from t_action action_ where action_.id=?
 Insert 0: insert into t_action (menu_id, name, url, id) values (?, ?, ?, ?)
 Update 0: update t_action set menu_id=?, name=?, url=? where id=?
 Delete 0: delete from t_action where id=?
 Identity insert: insert into t_action (menu_id, name, url) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6619b86a]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cf0dd96]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

Static select for entity sw.entity.Action [NONE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_5_1_, menu1_.href as href2_5_1_, menu1_.name as name3_5_1_, menu1_.pid as pid4_5_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79b2f610]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@533d64bc]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

Static select for entity sw.entity.Action [READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_5_1_, menu1_.href as href2_5_1_, menu1_.name as name3_5_1_, menu1_.pid as pid4_5_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71a83211]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28319802]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15e4d8a6]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dd4aae2]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_NOWAIT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1981c4d2]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d7df29f]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_SKIPLOCKED]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75e6d668]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50022fda]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [FORCE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52e9d64f]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42a02a3a]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31da14b]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@763328b1]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_WRITE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35813db7]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16c92e0f]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79d0fac7]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58c8bcb7]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72e48f7]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cf51186]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static SQL for entity: sw.entity.ActionGroup
 Version select: select id from t_actiongroup where id =?
 Snapshot select: select actiongrou_.id, actiongrou_.action_id as action_i3_1_, actiongrou_.create_date as create_d2_1_, actiongrou_.group_id as group_id4_1_, actiongrou_.menu_id as menu_id5_1_, actiongrou_.user_id as user_id6_1_ from t_actiongroup actiongrou_ where actiongrou_.id=?
 Insert 0: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update t_actiongroup set action_id=?, create_date=?, group_id=?, menu_id=?, user_id=? where id=?
 Delete 0: delete from t_actiongroup where id=?
 Identity insert: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id) values (?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21452fab]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1922ba2c]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57fafda]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10d45a10]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a1df1c5]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f44e7f9]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c193b6d]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_10_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_5_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.ActionGroup [NONE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_5_2_, menu2_.href as href2_5_2_, menu2_.name as name3_5_2_, menu2_.pid as pid4_5_2_, group3_.id as id1_4_3_, group3_.create_date as create_d2_4_3_, group3_.info as info3_4_3_, group3_.user_id as user_id5_4_3_, group3_.name as name4_4_3_, user4_.id as id1_10_4_, user4_.email as email2_10_4_, user4_.name as name3_10_4_, user4_.password as password4_10_4_, user4_.tel as tel5_10_4_, menu5_.id as id1_5_5_, menu5_.href as href2_5_5_, menu5_.name as name3_5_5_, menu5_.pid as pid4_5_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5880cae9]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f5818cc]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d0fdac1]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6472e801]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70d7d27c]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2048f8a4]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43dabf50]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_10_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_5_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.ActionGroup [READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_5_2_, menu2_.href as href2_5_2_, menu2_.name as name3_5_2_, menu2_.pid as pid4_5_2_, group3_.id as id1_4_3_, group3_.create_date as create_d2_4_3_, group3_.info as info3_4_3_, group3_.user_id as user_id5_4_3_, group3_.name as name4_4_3_, user4_.id as id1_10_4_, user4_.email as email2_10_4_, user4_.name as name3_10_4_, user4_.password as password4_10_4_, user4_.tel as tel5_10_4_, menu5_.id as id1_5_5_, menu5_.href as href2_5_5_, menu5_.name as name3_5_5_, menu5_.pid as pid4_5_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e22e14a]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@230a121a]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f2661a3]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16a7ffbc]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43108431]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3079c48b]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15add276]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52dbfdfe]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c7826b2]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@646c9f03]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_NOWAIT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fa9df9a]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f301cca]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f2410a8]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e2045d9]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b09f984]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_SKIPLOCKED]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44a07463]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@377c0d30]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@434d0782]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48960e4]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b50239f]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [FORCE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c12a648]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58090b12]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@322f9757]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b2657bc]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a0589a8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a445a61]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d2dc5c9]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b83530d]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23ec9d4e]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48c2bf11]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_WRITE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b12284d]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d89ebf3]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@406ef564]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ab4ed64]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50be27e8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ba987f]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58fa9c99]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@795a7109]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ff5673d]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e883e1a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@521a6f06]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7caad2cb]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@634d5baa]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62ae6a9a]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e53419c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Instantiated session factory
HHH000228: Running hbm2ddl schema update
No alter strings for table : t_action
No alter strings for table : t_actiongroup
No alter strings for table : t_asset
No alter strings for table : t_asset_type
No alter strings for table : t_group
No alter strings for table : t_menu
No alter strings for table : t_project
No alter strings for table : t_project_refence
No alter strings for table : t_referencefile
No alter strings for table : t_threat
No alter strings for table : t_user
No alter strings for table : t_usergroup
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@626740e8
Registering SessionFactory: 966fff92-28e9-4ed5-abf9-3b72324ffc7a (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@5da46c93
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4fed91f0: startup date [Tue Nov 21 15:00:28 CST 2017]; root of context hierarchy
Mapped "{[/pro/projectAdd],methods=[POST]}" onto public java.lang.String sw.controller.ProjectController.projectAdd(sw.entity.Project,org.springframework.ui.Model)
Mapped "{[/pro/updateProject],methods=[POST]}" onto public java.lang.String sw.controller.ProjectController.updateProject(sw.entity.Project)
Mapped "{[/pro/delProject/{id}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.delCollege(int)
Mapped "{[/pro/menu]}" onto public sw.model.MMenu sw.controller.ProjectController.findByroot()
Mapped "{[/pro/projectList],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectPage(org.springframework.ui.Model)
Mapped "{[/pro/findAllGroups/{projectId}],methods=[GET]}" onto public void sw.controller.ProjectController.findAllGroups(int,org.springframework.ui.Model)
Mapped "{[/pro/projectMain/{projectId}/{groupIds}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectMain(int,java.lang.String,org.springframework.ui.Model)
Mapped "{[/pro/projectForm/{id}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectForm(int,org.springframework.ui.Model)
Mapped "{[/pro/projectForm],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectFormView(org.springframework.ui.Model)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model,javax.servlet.http.HttpSession)
Mapped "{[/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage(org.springframework.ui.Model)
Mapped "{[/logout],methods=[GET]}" onto public java.lang.String sw.controller.UserController.logout(javax.servlet.http.HttpSession)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 12.737 seconds (JVM running for 13.343)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5be46baf
HHH000397: Using ASTQueryTranslatorFactory
parse() - HQL: select generatedAlias0 from sw.entity.Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'sw'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Project'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'user'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : sw.entity.Project (generatedAlias0) -> project0_
Resolved : generatedAlias0 -> project0_.id
getDataType() : user -> org.hibernate.type.ManyToOneType(sw.entity.User)
dereferenceEntityJoin() : generating join for user in sw.entity.Project (generatedAlias1) parent = [ {null} ]
FromClause{level=1} : sw.entity.User (generatedAlias1) -> user1_
addJoinByPathMap() : generatedAlias0.user -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=t_user,tableAlias=user1_,origin=t_project project0_,columns={project0_.user_id ,className=sw.entity.User}}
Resolved : generatedAlias0.user -> project0_.user_id
createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 't_user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=sw.entity.Project.user,tableName=t_user,tableAlias=user1_,origin=t_project project0_,columns={project0_.user_id ,className=sw.entity.User}}

Resolved : generatedAlias0 -> project0_.id
Resolved : generatedAlias1 -> user1_.id
getDataType() : id -> org.hibernate.type.IntegerType@6c46be1d
Resolved : generatedAlias1.id -> user1_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} project0_.id ) ( FromClause{level=1} ( t_project project0_ t_user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
Using FROM fragment [t_project project0_]
Using FROM fragment [left outer join t_user user1_ on project0_.user_id=user1_.id]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (t_user,t_project)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'project0_.id as id1_6_' {alias=generatedAlias0, className=sw.entity.Project, tableAlias=project0_}
    |  \-[SQL_TOKEN] SqlFragment: 'project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[project0_, user1_], fromElementsByPath=[generatedAlias0.user], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 't_project project0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=t_project,tableAlias=project0_,origin=null,columns={,className=sw.entity.Project}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join t_user user1_ on project0_.user_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=sw.entity.Project.user,tableName=t_user,tableAlias=user1_,origin=t_project project0_,columns={project0_.user_id ,className=sw.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=sw.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=sw.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.IntegerType@6c46be1d}

throwQueryException() : no errors
HQL: select generatedAlias0 from sw.entity.Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
SQL: select project0_.id as id1_6_, project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
throwQueryException() : no errors
select project0_.id as id1_6_, project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
parse() - HQL: select generatedAlias0 from sw.entity.UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'sw'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'UserGroup'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'user'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : sw.entity.UserGroup (generatedAlias0) -> usergroup0_
Resolved : generatedAlias0 -> usergroup0_.id
getDataType() : user -> org.hibernate.type.ManyToOneType(sw.entity.User)
dereferenceEntityJoin() : generating join for user in sw.entity.UserGroup (generatedAlias1) parent = [ {null} ]
FromClause{level=1} : sw.entity.User (generatedAlias1) -> user1_
addJoinByPathMap() : generatedAlias0.user -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=t_user,tableAlias=user1_,origin=t_usergroup usergroup0_,columns={usergroup0_.user_id ,className=sw.entity.User}}
Resolved : generatedAlias0.user -> usergroup0_.user_id
createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 't_user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=sw.entity.UserGroup.user,tableName=t_user,tableAlias=user1_,origin=t_usergroup usergroup0_,columns={usergroup0_.user_id ,className=sw.entity.User}}

Resolved : generatedAlias0 -> usergroup0_.id
Resolved : generatedAlias1 -> user1_.id
getDataType() : id -> org.hibernate.type.IntegerType@6c46be1d
Resolved : generatedAlias1.id -> user1_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} usergroup0_.id ) ( FromClause{level=1} ( t_usergroup usergroup0_ t_user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
Using FROM fragment [t_usergroup usergroup0_]
Using FROM fragment [left outer join t_user user1_ on usergroup0_.user_id=user1_.id]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (t_user,t_usergroup)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'usergroup0_.id as id1_11_' {alias=generatedAlias0, className=sw.entity.UserGroup, tableAlias=usergroup0_}
    |  \-[SQL_TOKEN] SqlFragment: 'usergroup0_.create_date as create_d2_11_, usergroup0_.group_id as group_id4_11_, usergroup0_.is_headman as is_headm3_11_, usergroup0_.modify_userid as modify_u5_11_, usergroup0_.project_id as project_6_11_, usergroup0_.user_id as user_id7_11_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[user1_, usergroup0_], fromElementsByPath=[generatedAlias0.user], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 't_usergroup usergroup0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=t_usergroup,tableAlias=usergroup0_,origin=null,columns={,className=sw.entity.UserGroup}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join t_user user1_ on usergroup0_.user_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=sw.entity.UserGroup.user,tableName=t_user,tableAlias=user1_,origin=t_usergroup usergroup0_,columns={usergroup0_.user_id ,className=sw.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=sw.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=sw.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.IntegerType@6c46be1d}

throwQueryException() : no errors
HQL: select generatedAlias0 from sw.entity.UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
SQL: select usergroup0_.id as id1_11_, usergroup0_.create_date as create_d2_11_, usergroup0_.group_id as group_id4_11_, usergroup0_.is_headman as is_headm3_11_, usergroup0_.modify_userid as modify_u5_11_, usergroup0_.project_id as project_6_11_, usergroup0_.user_id as user_id7_11_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
throwQueryException() : no errors
select usergroup0_.id as id1_11_, usergroup0_.create_date as create_d2_11_, usergroup0_.group_id as group_id4_11_, usergroup0_.is_headman as is_headm3_11_, usergroup0_.modify_userid as modify_u5_11_, usergroup0_.project_id as project_6_11_, usergroup0_.user_id as user_id7_11_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_6_, project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_11_, usergroup0_.create_date as create_d2_11_, usergroup0_.group_id as group_id4_11_, usergroup0_.is_headman as is_headm3_11_, usergroup0_.modify_userid as modify_u5_11_, usergroup0_.project_id as project_6_11_, usergroup0_.user_id as user_id7_11_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_6_, project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_11_, usergroup0_.create_date as create_d2_11_, usergroup0_.group_id as group_id4_11_, usergroup0_.is_headman as is_headm3_11_, usergroup0_.modify_userid as modify_u5_11_, usergroup0_.project_id as project_6_11_, usergroup0_.user_id as user_id7_11_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
begin
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#3]
Done materializing entity [sw.entity.Project#3]
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#3
committing
begin
Rendered criteria query -> select generatedAlias0 from Menu as generatedAlias0
parse() - HQL: select generatedAlias0 from sw.entity.Menu as generatedAlias0
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'sw'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Menu'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : sw.entity.Menu (generatedAlias0) -> menu0_
Resolved : generatedAlias0 -> menu0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} menu0_.id ) ( FromClause{level=1} t_menu menu0_ ) )
Using FROM fragment [t_menu menu0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (t_menu)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'menu0_.id as id1_5_' {alias=generatedAlias0, className=sw.entity.Menu, tableAlias=menu0_}
    |  \-[SQL_TOKEN] SqlFragment: 'menu0_.href as href2_5_, menu0_.name as name3_5_, menu0_.pid as pid4_5_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[menu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 't_menu menu0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=t_menu,tableAlias=menu0_,origin=null,columns={,className=sw.entity.Menu}}

throwQueryException() : no errors
HQL: select generatedAlias0 from sw.entity.Menu as generatedAlias0
SQL: select menu0_.id as id1_5_, menu0_.href as href2_5_, menu0_.name as name3_5_, menu0_.pid as pid4_5_ from t_menu menu0_
throwQueryException() : no errors
select menu0_.id as id1_5_, menu0_.href as href2_5_, menu0_.name as name3_5_, menu0_.pid as pid4_5_ from t_menu menu0_
Result set row: 0
Result row: EntityKey[sw.entity.Menu#1]
Result set row: 1
Result row: EntityKey[sw.entity.Menu#2]
Result set row: 2
Result row: EntityKey[sw.entity.Menu#3]
Result set row: 3
Result row: EntityKey[sw.entity.Menu#4]
Result set row: 4
Result row: EntityKey[sw.entity.Menu#5]
Result set row: 5
Result row: EntityKey[sw.entity.Menu#6]
Result set row: 6
Result row: EntityKey[sw.entity.Menu#7]
Result set row: 7
Result row: EntityKey[sw.entity.Menu#8]
Resolving associations for [sw.entity.Menu#1]
Done materializing entity [sw.entity.Menu#1]
Resolving associations for [sw.entity.Menu#2]
Done materializing entity [sw.entity.Menu#2]
Resolving associations for [sw.entity.Menu#3]
Done materializing entity [sw.entity.Menu#3]
Resolving associations for [sw.entity.Menu#4]
Done materializing entity [sw.entity.Menu#4]
Resolving associations for [sw.entity.Menu#5]
Done materializing entity [sw.entity.Menu#5]
Resolving associations for [sw.entity.Menu#6]
Done materializing entity [sw.entity.Menu#6]
Resolving associations for [sw.entity.Menu#7]
Done materializing entity [sw.entity.Menu#7]
Resolving associations for [sw.entity.Menu#8]
Done materializing entity [sw.entity.Menu#8]
committing
begin
committing
begin
Rendered criteria query -> select generatedAlias0 from Menu as generatedAlias0
select menu0_.id as id1_5_, menu0_.href as href2_5_, menu0_.name as name3_5_, menu0_.pid as pid4_5_ from t_menu menu0_
Result set row: 0
Result row: EntityKey[sw.entity.Menu#1]
Result set row: 1
Result row: EntityKey[sw.entity.Menu#2]
Result set row: 2
Result row: EntityKey[sw.entity.Menu#3]
Result set row: 3
Result row: EntityKey[sw.entity.Menu#4]
Result set row: 4
Result row: EntityKey[sw.entity.Menu#5]
Result set row: 5
Result row: EntityKey[sw.entity.Menu#6]
Result set row: 6
Result row: EntityKey[sw.entity.Menu#7]
Result set row: 7
Result row: EntityKey[sw.entity.Menu#8]
committing
begin
committing
begin
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#3]
Done materializing entity [sw.entity.Project#3]
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#3
committing
Starting Application on LuoRong with PID 6780 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@72ca43c7: startup date [Tue Nov 21 15:07:16 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$edb6aea2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3369 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@90f959f
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@813b90b{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.Action
		sw.entity.ActionGroup
		sw.entity.Asset
		sw.entity.AssetType
		sw.entity.Group
		sw.entity.Menu
		sw.entity.Project
		sw.entity.ProRef
		sw.entity.ReferenceFile
		sw.entity.Threat
		sw.entity.User
		sw.entity.UserGroup]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@2416be86
Adding type registration boolean -> org.hibernate.type.BooleanType@2416be86
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2416be86
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@786fec81
Adding type registration true_false -> org.hibernate.type.TrueFalseType@15c58a30
Adding type registration yes_no -> org.hibernate.type.YesNoType@307730e
Adding type registration byte -> org.hibernate.type.ByteType@40e40ac4
Adding type registration byte -> org.hibernate.type.ByteType@40e40ac4
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@40e40ac4
Adding type registration character -> org.hibernate.type.CharacterType@3e2e09a2
Adding type registration char -> org.hibernate.type.CharacterType@3e2e09a2
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3e2e09a2
Adding type registration short -> org.hibernate.type.ShortType@3f5627e9
Adding type registration short -> org.hibernate.type.ShortType@3f5627e9
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3f5627e9
Adding type registration integer -> org.hibernate.type.IntegerType@4cd0235b
Adding type registration int -> org.hibernate.type.IntegerType@4cd0235b
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4cd0235b
Adding type registration long -> org.hibernate.type.LongType@7422e938
Adding type registration long -> org.hibernate.type.LongType@7422e938
Adding type registration java.lang.Long -> org.hibernate.type.LongType@7422e938
Adding type registration float -> org.hibernate.type.FloatType@6f289a09
Adding type registration float -> org.hibernate.type.FloatType@6f289a09
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6f289a09
Adding type registration double -> org.hibernate.type.DoubleType@2598097d
Adding type registration double -> org.hibernate.type.DoubleType@2598097d
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2598097d
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6edfaec3
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6edfaec3
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2d302705
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2d302705
Adding type registration string -> org.hibernate.type.StringType@fc7a660
Adding type registration java.lang.String -> org.hibernate.type.StringType@fc7a660
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d88ef18
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@78803e4c
Adding type registration url -> org.hibernate.type.UrlType@92ef868
Adding type registration java.net.URL -> org.hibernate.type.UrlType@92ef868
Adding type registration date -> org.hibernate.type.DateType@57d30700
Adding type registration java.sql.Date -> org.hibernate.type.DateType@57d30700
Adding type registration time -> org.hibernate.type.TimeType@2cf0f633
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2cf0f633
Adding type registration timestamp -> org.hibernate.type.TimestampType@42d94140
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@42d94140
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@42d94140
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@62bf2bd2
Adding type registration calendar -> org.hibernate.type.CalendarType@20ca0ceb
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@20ca0ceb
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@20ca0ceb
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6785b033
Adding type registration locale -> org.hibernate.type.LocaleType@20ca5d02
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@20ca5d02
Adding type registration currency -> org.hibernate.type.CurrencyType@2da90db8
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2da90db8
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2a5ffd4
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2a5ffd4
Adding type registration class -> org.hibernate.type.ClassType@10c8cdc
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10c8cdc
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45b0892d
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45b0892d
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@a4ec7c5
Adding type registration binary -> org.hibernate.type.BinaryType@532f2a75
Adding type registration byte[] -> org.hibernate.type.BinaryType@532f2a75
Adding type registration [B -> org.hibernate.type.BinaryType@532f2a75
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f9ac255
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f9ac255
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f9ac255
Adding type registration row_version -> org.hibernate.type.RowVersionType@115a3e6
Adding type registration image -> org.hibernate.type.ImageType@3ab6c682
Adding type registration characters -> org.hibernate.type.CharArrayType@4e80a6c1
Adding type registration char[] -> org.hibernate.type.CharArrayType@4e80a6c1
Adding type registration [C -> org.hibernate.type.CharArrayType@4e80a6c1
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2d707bb1
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2d707bb1
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2d707bb1
Adding type registration text -> org.hibernate.type.TextType@5fc5108d
Adding type registration ntext -> org.hibernate.type.NTextType@33b2783c
Adding type registration blob -> org.hibernate.type.BlobType@46c24cf
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@46c24cf
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2b5dc7b8
Adding type registration clob -> org.hibernate.type.ClobType@2c7b0886
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2c7b0886
Adding type registration nclob -> org.hibernate.type.NClobType@55024675
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@55024675
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@101bb593
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f27cf14
Adding type registration serializable -> org.hibernate.type.SerializableType@2bb31e7a
Adding type registration object -> org.hibernate.type.ObjectType@25c74ed
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@25c74ed
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@286b5a1c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4971a8e0
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@669d2a34
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@531f0920
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@215612e5
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@65a48887
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6ae7d28d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@419a80f8
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.Threat
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Threat
Bind entity sw.entity.Threat on table t_threat
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='asset_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=asset, insertable=true, updatable=true, unique=false}
Building property asset
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=frequency, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property frequency with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:frequency]
building SimpleValue for frequency
Building property frequency
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=threat_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property threatName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:threatName]
building SimpleValue for threatName
Building property threatName
Binding entity from annotated class: sw.entity.Group
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Group
Bind entity sw.entity.Group on table t_group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=info, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property info with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:info]
building SimpleValue for info
Building property info
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Asset
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Asset
Bind entity sw.entity.Asset on table t_asset
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='ass_typ_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=asset_type, insertable=true, updatable=true, unique=false}
Building property assetType
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=backup_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property backupForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:backupForm]
building SimpleValue for backupForm
Building property backupForm
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=depart, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property depart with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:depart]
building SimpleValue for depart
Building property depart
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=importance, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property importance with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:importance]
building SimpleValue for importance
Building property importance
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=principle, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property principle with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:principle]
building SimpleValue for principle
Building property principle
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=remark, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property remark with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:remark]
building SimpleValue for remark
Building property remark
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=save_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property saveForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:saveForm]
building SimpleValue for saveForm
Building property saveForm
Binding entity from annotated class: sw.entity.ProRef
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ProRef
Bind entity sw.entity.ProRef on table t_project_refence
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ProRef:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='ref_pro_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=reference_file, insertable=true, updatable=true, unique=false}
Building property referenceFile
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Binding entity from annotated class: sw.entity.UserGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name UserGroup
Bind entity sw.entity.UserGroup on table t_usergroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=is_headman, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property isHeadman with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:isHeadman]
building SimpleValue for isHeadman
Building property isHeadman
Binding column: Ejb3JoinColumn{logicalColumnName='modify_userid', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.Menu
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Menu
Bind entity sw.entity.Menu on table t_menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=href, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property href with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:href]
building SimpleValue for href
Building property href
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=pid, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property pid with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:pid]
building SimpleValue for pid
Building property pid
Binding entity from annotated class: sw.entity.ReferenceFile
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ReferenceFile
Bind entity sw.entity.ReferenceFile on table t_referencefile
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=company, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property company with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:company]
building SimpleValue for company
Building property company
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=file_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property fileName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:fileName]
building SimpleValue for fileName
Building property fileName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=publish_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property publishDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:publishDate]
building SimpleValue for publishDate
Building property publishDate
Binding entity from annotated class: sw.entity.Project
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Project
Bind entity sw.entity.Project on table t_project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:name]
building SimpleValue for name
Building property name
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.AssetType
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AssetType
Bind entity sw.entity.AssetType on table t_asset_type
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Action
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Action
Bind entity sw.entity.Action on table t_action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=url, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property url with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:url]
building SimpleValue for url
Building property url
Binding entity from annotated class: sw.entity.ActionGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ActionGroup
Bind entity sw.entity.ActionGroup on table t_actiongroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='action_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=action, insertable=true, updatable=true, unique=false}
Building property action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Starting fillSimpleValue for id
Starting fillSimpleValue for frequency
Starting fillSimpleValue for threatName
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for info
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for backupForm
Starting fillSimpleValue for depart
Starting fillSimpleValue for description
Starting fillSimpleValue for importance
Starting fillSimpleValue for name
Starting fillSimpleValue for principle
Starting fillSimpleValue for remark
Starting fillSimpleValue for saveForm
Starting fillSimpleValue for id
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for isHeadman
Starting fillSimpleValue for id
Starting fillSimpleValue for href
Starting fillSimpleValue for name
Starting fillSimpleValue for pid
Starting fillSimpleValue for id
Starting fillSimpleValue for company
Starting fillSimpleValue for fileName
Starting fillSimpleValue for publishDate
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for description
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for url
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Forcing column [id] to be non-null as it is part of the primary key for table [t_threat]
Forcing column [id] to be non-null as it is part of the primary key for table [t_group]
Forcing column [id] to be non-null as it is part of the primary key for table [t_asset]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project_refence]
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Forcing column [id] to be non-null as it is part of the primary key for table [t_usergroup]
Forcing column [id] to be non-null as it is part of the primary key for table [t_menu]
Forcing column [id] to be non-null as it is part of the primary key for table [t_referencefile]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project]
Forcing column [id] to be non-null as it is part of the primary key for table [t_asset_type]
Forcing column [id] to be non-null as it is part of the primary key for table [t_action]
Forcing column [id] to be non-null as it is part of the primary key for table [t_actiongroup]
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.AssetType
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.ReferenceFile
Resolving reference to class: sw.entity.Asset
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.AssetType
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.ReferenceFile
Resolving reference to class: sw.entity.Asset
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4c70a5df
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.8881924057069173491.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=6780, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@74817063, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@813b90b{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar;C:\Users\LR\.m2\repository\commons-beanutils\commons-beanutils\1.9.3\commons-beanutils-1.9.3.jar;C:\Users\LR\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\LR\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi\3.14\poi-3.14.jar;C:\Users\LR\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi-ooxml\3.14\poi-ooxml-3.14.jar;C:\Users\LR\.m2\repository\com\github\virtuald\curvesapi\1.03\curvesapi-1.03.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi-ooxml-schemas\3.14\poi-ooxml-schemas-3.14.jar;C:\Users\LR\.m2\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;C:\Users\LR\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.8881924057069173491.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@4affe007, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.Threat] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Threat
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@5940858c, payload=[Ljava.lang.Class;@4e88aab2}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@640b9bf6, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@179d34d6}, constraintType=GENERIC}.
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@66472ef9, payload=[Ljava.lang.Class;@687869b6}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@1fb42ee0, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@5d065cfc}, constraintType=GENERIC}.
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.Threat] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Threat
Not known whether passed class name [sw.entity.Threat] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Threat
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Static SQL for entity: sw.entity.Threat
 Version select: select id from t_threat where id =?
 Snapshot select: select threat_.id, threat_.asset_id as asset_id4_9_, threat_.frequency as frequenc2_9_, threat_.threat_name as threat_n3_9_ from t_threat threat_ where threat_.id=?
 Insert 0: insert into t_threat (asset_id, frequency, threat_name, id) values (?, ?, ?, ?)
 Update 0: update t_threat set asset_id=?, frequency=?, threat_name=? where id=?
 Delete 0: delete from t_threat where id=?
 Identity insert: insert into t_threat (asset_id, frequency, threat_name) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53c05266]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5387f085]
Visiting attribute path : asset.assetType
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@363f058a]
Visiting attribute path : asset.assetType.name
Visiting attribute path : asset.backupForm
Visiting attribute path : asset.depart
Visiting attribute path : asset.description
Visiting attribute path : asset.importance
Visiting attribute path : asset.name
Visiting attribute path : asset.principle
Visiting attribute path : asset.project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26ccaf79]
Visiting attribute path : asset.project.createDate
Visiting attribute path : asset.project.description
Visiting attribute path : asset.project.name
Visiting attribute path : asset.project.user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@751fbf98]
Visiting attribute path : asset.remark
Visiting attribute path : asset.saveForm
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
             - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:2>, path=sw.entity.Threat.asset.assetType)
             - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.Threat.asset.project)
                - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.Threat.asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}
          - JOIN (JoinDefinedByMetadata(asset)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Asset)
                - SQL table alias mapping - asset1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(assetType)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.AssetType)
                      - SQL table alias mapping - assettype2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_6_3_}

Static select for entity sw.entity.Threat [NONE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_, asset1_.id as id1_2_1_, asset1_.ass_typ_id as ass_typ10_2_1_, asset1_.backup_form as backup_f2_2_1_, asset1_.depart as depart3_2_1_, asset1_.description as descript4_2_1_, asset1_.importance as importan5_2_1_, asset1_.name as name6_2_1_, asset1_.principle as principl7_2_1_, asset1_.project_id as project11_2_1_, asset1_.remark as remark8_2_1_, asset1_.save_form as save_for9_2_1_, assettype2_.id as id1_3_2_, assettype2_.name as name2_3_2_, project3_.id as id1_6_3_, project3_.create_date as create_d2_6_3_, project3_.description as descript3_6_3_, project3_.name as name4_6_3_, project3_.user_id as user_id5_6_3_ from t_threat threat0_ left outer join t_asset asset1_ on threat0_.asset_id=asset1_.id left outer join t_asset_type assettype2_ on asset1_.ass_typ_id=assettype2_.id left outer join t_project project3_ on asset1_.project_id=project3_.id where threat0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@294690e3]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52f29d02]
Visiting attribute path : asset.assetType
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a6512d5]
Visiting attribute path : asset.assetType.name
Visiting attribute path : asset.backupForm
Visiting attribute path : asset.depart
Visiting attribute path : asset.description
Visiting attribute path : asset.importance
Visiting attribute path : asset.name
Visiting attribute path : asset.principle
Visiting attribute path : asset.project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26f4cdf2]
Visiting attribute path : asset.project.createDate
Visiting attribute path : asset.project.description
Visiting attribute path : asset.project.name
Visiting attribute path : asset.project.user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59bbcd76]
Visiting attribute path : asset.remark
Visiting attribute path : asset.saveForm
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
             - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:2>, path=sw.entity.Threat.asset.assetType)
             - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.Threat.asset.project)
                - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.Threat.asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}
          - JOIN (JoinDefinedByMetadata(asset)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Asset)
                - SQL table alias mapping - asset1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(assetType)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.AssetType)
                      - SQL table alias mapping - assettype2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_6_3_}

Static select for entity sw.entity.Threat [READ]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_, asset1_.id as id1_2_1_, asset1_.ass_typ_id as ass_typ10_2_1_, asset1_.backup_form as backup_f2_2_1_, asset1_.depart as depart3_2_1_, asset1_.description as descript4_2_1_, asset1_.importance as importan5_2_1_, asset1_.name as name6_2_1_, asset1_.principle as principl7_2_1_, asset1_.project_id as project11_2_1_, asset1_.remark as remark8_2_1_, asset1_.save_form as save_for9_2_1_, assettype2_.id as id1_3_2_, assettype2_.name as name2_3_2_, project3_.id as id1_6_3_, project3_.create_date as create_d2_6_3_, project3_.description as descript3_6_3_, project3_.name as name4_6_3_, project3_.user_id as user_id5_6_3_ from t_threat threat0_ left outer join t_asset asset1_ on threat0_.asset_id=asset1_.id left outer join t_asset_type assettype2_ on asset1_.ass_typ_id=assettype2_.id left outer join t_project project3_ on asset1_.project_id=project3_.id where threat0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b825b2f]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64b7b1fc]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [UPGRADE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63e01061]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d6b79a9]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [UPGRADE_NOWAIT]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@648a17a9]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e617e4d]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [UPGRADE_SKIPLOCKED]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78a1fa19]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18fe7446]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [FORCE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@df8f202]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@226bb777]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [PESSIMISTIC_READ]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49dcab38]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c0b421a]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [PESSIMISTIC_WRITE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73a49ce3]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d466ee6]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [PESSIMISTIC_FORCE_INCREMENT]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b0be2c6]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18c098db]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [OPTIMISTIC]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eff47b]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@774a5c02]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [OPTIMISTIC_FORCE_INCREMENT]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Threat: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Threat: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Static SQL for entity: sw.entity.Group
 Version select: select id from t_group where id =?
 Snapshot select: select group_.id, group_.create_date as create_d2_4_, group_.info as info3_4_, group_.user_id as user_id5_4_, group_.name as name4_4_ from t_group group_ where group_.id=?
 Insert 0: insert into t_group (create_date, info, user_id, name, id) values (?, ?, ?, ?, ?)
 Update 0: update t_group set create_date=?, info=?, user_id=?, name=? where id=?
 Delete 0: delete from t_group where id=?
 Identity insert: insert into t_group (create_date, info, user_id, name) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433c64a6]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56fa4eae]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Group [NONE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d0e420]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f1f6976]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Group [READ]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75b71713]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c723efd]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42394c28]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52362f3c]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE_NOWAIT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f0e6651]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3653a3c0]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE_SKIPLOCKED]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@557f35f9]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f6b59c9]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [FORCE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@740dac47]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e778180]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_READ]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b572896]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26fa4036]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_WRITE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74d3aee8]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5abec937]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e31d9a6]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70828c3e]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [OPTIMISTIC]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c590468]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f696cec]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [OPTIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Group: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Group: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static SQL for entity: sw.entity.Asset
 Version select: select id from t_asset where id =?
 Snapshot select: select asset_.id, asset_.ass_typ_id as ass_typ10_2_, asset_.backup_form as backup_f2_2_, asset_.depart as depart3_2_, asset_.description as descript4_2_, asset_.importance as importan5_2_, asset_.name as name6_2_, asset_.principle as principl7_2_, asset_.project_id as project11_2_, asset_.remark as remark8_2_, asset_.save_form as save_for9_2_ from t_asset asset_ where asset_.id=?
 Insert 0: insert into t_asset (ass_typ_id, backup_form, depart, description, importance, name, principle, project_id, remark, save_form, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update t_asset set ass_typ_id=?, backup_form=?, depart=?, description=?, importance=?, name=?, principle=?, project_id=?, remark=?, save_form=? where id=?
 Delete 0: delete from t_asset where id=?
 Identity insert: insert into t_asset (ass_typ_id, backup_form, depart, description, importance, name, principle, project_id, remark, save_form) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3beef843]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b04fe24]
Visiting attribute path : assetType.name
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@237e32e4]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56f65569]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.Asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(assetType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.AssetType)
                - SQL table alias mapping - assettype1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_10_3_}

Static select for entity sw.entity.Asset [NONE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_, assettype1_.id as id1_3_1_, assettype1_.name as name2_3_1_, project2_.id as id1_6_2_, project2_.create_date as create_d2_6_2_, project2_.description as descript3_6_2_, project2_.name as name4_6_2_, project2_.user_id as user_id5_6_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_ from t_asset asset0_ left outer join t_asset_type assettype1_ on asset0_.ass_typ_id=assettype1_.id left outer join t_project project2_ on asset0_.project_id=project2_.id left outer join t_user user3_ on project2_.user_id=user3_.id where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c566dfb]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9bf2d42]
Visiting attribute path : assetType.name
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4982995]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a6118e7]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.Asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(assetType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.AssetType)
                - SQL table alias mapping - assettype1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_10_3_}

Static select for entity sw.entity.Asset [READ]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_, assettype1_.id as id1_3_1_, assettype1_.name as name2_3_1_, project2_.id as id1_6_2_, project2_.create_date as create_d2_6_2_, project2_.description as descript3_6_2_, project2_.name as name4_6_2_, project2_.user_id as user_id5_6_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_ from t_asset asset0_ left outer join t_asset_type assettype1_ on asset0_.ass_typ_id=assettype1_.id left outer join t_project project2_ on asset0_.project_id=project2_.id left outer join t_user user3_ on project2_.user_id=user3_.id where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3125bd63]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e4655a3]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d16a574]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2144c910]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27bc4b71]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f0967f7]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE_NOWAIT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2882274f]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49188986]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d4a698d]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE_SKIPLOCKED]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@144b8b34]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4094163c]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eec09a2]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [FORCE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76362760]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34898afd]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6af634d7]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_READ]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d3c03ce]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63fdcb10]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38f61b34]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_WRITE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75194d97]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@380d137b]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30aa90f5]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_FORCE_INCREMENT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fe01682]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45456a31]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@210c6754]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [OPTIMISTIC]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e5721f1]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c0b41aa]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@effb9b8]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [OPTIMISTIC_FORCE_INCREMENT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Asset: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Asset: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static SQL for entity: sw.entity.ProRef
 Version select: select id from t_project_refence where id =?
 Snapshot select: select proref_.id, proref_.project_id as project_2_7_, proref_.ref_pro_id as ref_pro_3_7_ from t_project_refence proref_ where proref_.id=?
 Insert 0: insert into t_project_refence (project_id, ref_pro_id, id) values (?, ?, ?)
 Update 0: update t_project_refence set project_id=?, ref_pro_id=? where id=?
 Delete 0: delete from t_project_refence where id=?
 Identity insert: insert into t_project_refence (project_id, ref_pro_id) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19b0593f]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@206738c0]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4844a5f7]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec916dd]
Visiting attribute path : referenceFile.company
Visiting attribute path : referenceFile.fileName
Visiting attribute path : referenceFile.publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(referenceFile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.ReferenceFile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_8_3_}

Static select for entity sw.entity.ProRef [NONE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_, project1_.id as id1_6_1_, project1_.create_date as create_d2_6_1_, project1_.description as descript3_6_1_, project1_.name as name4_6_1_, project1_.user_id as user_id5_6_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, referencef3_.id as id1_8_3_, referencef3_.company as company2_8_3_, referencef3_.file_name as file_nam3_8_3_, referencef3_.publish_date as publish_4_8_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53b16d2a]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@edce5fd]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@508d6b1a]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aaf2f62]
Visiting attribute path : referenceFile.company
Visiting attribute path : referenceFile.fileName
Visiting attribute path : referenceFile.publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(referenceFile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.ReferenceFile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_8_3_}

Static select for entity sw.entity.ProRef [READ]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_, project1_.id as id1_6_1_, project1_.create_date as create_d2_6_1_, project1_.description as descript3_6_1_, project1_.name as name4_6_1_, project1_.user_id as user_id5_6_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, referencef3_.id as id1_8_3_, referencef3_.company as company2_8_3_, referencef3_.file_name as file_nam3_8_3_, referencef3_.publish_date as publish_4_8_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5550d722]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6be082d4]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70e71768]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23dd3791]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ff41672]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27e010b3]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE_NOWAIT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dcbca61]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c54f554]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b1601e5]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE_SKIPLOCKED]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58bd4624]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51b06741]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@af25dbb]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [FORCE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@384cb6a7]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e7dc7eb]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66fa421a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_READ]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b5e39ec]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e16d455]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a48a91f]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_WRITE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@501372e3]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5612cca0]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9cd872c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4282689c]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c5fed1e]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59cef95e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8d9bc73]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75b497fd]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b9e941c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ProRef: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ProRef: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_10_, user_.name as name3_10_, user_.password as password4_10_, user_.tel as tel5_10_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ee18138]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c91e1e2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41fa1701]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@432be324]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48ee098]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c3374b0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1716b279]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cdcdf57]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42aa9a76]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e5ee597]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53fcb88f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Static SQL for entity: sw.entity.UserGroup
 Version select: select id from t_usergroup where id =?
 Snapshot select: select usergroup_.id, usergroup_.create_date as create_d2_11_, usergroup_.group_id as group_id4_11_, usergroup_.is_headman as is_headm3_11_, usergroup_.modify_userid as modify_u5_11_, usergroup_.project_id as project_6_11_, usergroup_.user_id as user_id7_11_ from t_usergroup usergroup_ where usergroup_.id=?
 Insert 0: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update t_usergroup set create_date=?, group_id=?, is_headman=?, modify_userid=?, project_id=?, user_id=? where id=?
 Delete 0: delete from t_usergroup where id=?
 Identity insert: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id) values (?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2be5faa2]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47397a2d]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27fe04f9]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66021e1d]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44658357]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f113865]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4802529a]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_10_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_6_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_10_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.UserGroup [NONE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_, group1_.id as id1_4_1_, group1_.create_date as create_d2_4_1_, group1_.info as info3_4_1_, group1_.user_id as user_id5_4_1_, group1_.name as name4_4_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_, project4_.id as id1_6_4_, project4_.create_date as create_d2_6_4_, project4_.description as descript3_6_4_, project4_.name as name4_6_4_, project4_.user_id as user_id5_6_4_, user5_.id as id1_10_5_, user5_.email as email2_10_5_, user5_.name as name3_10_5_, user5_.password as password4_10_5_, user5_.tel as tel5_10_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1eee3197]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c2804c8]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cb773f9]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3677b9d3]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36c1b6f0]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28b39547]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@637cd475]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_10_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_6_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_10_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.UserGroup [READ]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_, group1_.id as id1_4_1_, group1_.create_date as create_d2_4_1_, group1_.info as info3_4_1_, group1_.user_id as user_id5_4_1_, group1_.name as name4_4_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_, project4_.id as id1_6_4_, project4_.create_date as create_d2_6_4_, project4_.description as descript3_6_4_, project4_.name as name4_6_4_, project4_.user_id as user_id5_6_4_, user5_.id as id1_10_5_, user5_.email as email2_10_5_, user5_.name as name3_10_5_, user5_.password as password4_10_5_, user5_.tel as tel5_10_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cb58b87]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2df7c90f]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24d5a189]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ecef27]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37fa53de]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [UPGRADE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24564b9f]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e003835]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b01e888]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d1d4ac4]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@537e69d5]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_NOWAIT]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c00321f]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ffde403]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f6d16e8]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52105bd0]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6422ef17]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_SKIPLOCKED]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@140fd26c]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@131c5138]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60b55e1b]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a436cd3]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b72590c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [FORCE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a1656cb]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71ad4d30]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38dec030]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@206679ee]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c5354d6]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_READ]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@178c4ca1]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a277ae4]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cc46292]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29d8c4ef]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1efb0435]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_WRITE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f7abd54]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f45d392]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39d9bae3]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3732091]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f8ca97e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e84245e]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9359a9]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8ec79c]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1567ae47]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b5991d9]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@619dd10a]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@653ed2e3]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@525e40c4]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d44de04]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a54da66]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.UserGroup: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.UserGroup: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static SQL for entity: sw.entity.Menu
 Version select: select id from t_menu where id =?
 Snapshot select: select menu_.id, menu_.href as href2_5_, menu_.name as name3_5_, menu_.pid as pid4_5_ from t_menu menu_ where menu_.id=?
 Insert 0: insert into t_menu (href, name, pid, id) values (?, ?, ?, ?)
 Update 0: update t_menu set href=?, name=?, pid=? where id=?
 Delete 0: delete from t_menu where id=?
 Identity insert: insert into t_menu (href, name, pid) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19eeb805]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [NONE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42d9de44]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [READ]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b018d8]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@390a53d]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE_NOWAIT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a3189f7]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE_SKIPLOCKED]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4886ae9e]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [FORCE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fddb9cd]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_READ]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16f63e2b]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_WRITE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222d6b32]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22af24a0]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e020397]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Menu: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Menu: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static SQL for entity: sw.entity.ReferenceFile
 Version select: select id from t_referencefile where id =?
 Snapshot select: select referencef_.id, referencef_.company as company2_8_, referencef_.file_name as file_nam3_8_, referencef_.publish_date as publish_4_8_ from t_referencefile referencef_ where referencef_.id=?
 Insert 0: insert into t_referencefile (company, file_name, publish_date, id) values (?, ?, ?, ?)
 Update 0: update t_referencefile set company=?, file_name=?, publish_date=? where id=?
 Delete 0: delete from t_referencefile where id=?
 Identity insert: insert into t_referencefile (company, file_name, publish_date) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a09a291]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [NONE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f8866b8]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [READ]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@792a5ce4]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4289a1fc]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE_NOWAIT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54c6f7a4]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE_SKIPLOCKED]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3085fbbe]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [FORCE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e8ebf3e]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_READ]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f441f13]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_WRITE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49541bd8]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c5bc947]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [OPTIMISTIC]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@569ce447]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [OPTIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ReferenceFile: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ReferenceFile: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static SQL for entity: sw.entity.Project
 Version select: select id from t_project where id =?
 Snapshot select: select project_.id, project_.create_date as create_d2_6_, project_.description as descript3_6_, project_.name as name4_6_, project_.user_id as user_id5_6_ from t_project project_ where project_.id=?
 Insert 0: insert into t_project (create_date, description, name, user_id, id) values (?, ?, ?, ?, ?)
 Update 0: update t_project set create_date=?, description=?, name=?, user_id=? where id=?
 Delete 0: delete from t_project where id=?
 Identity insert: insert into t_project (create_date, description, name, user_id) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46d31e]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73e12991]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Project [NONE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e5888b7]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14cb8db3]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Project [READ]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6553d153]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27c90177]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fdc5ba3]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56729d6f]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE_NOWAIT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39dffc6f]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56ed25aa]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE_SKIPLOCKED]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@143643fd]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b7bf464]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [FORCE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54045cd4]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47beb3ba]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_READ]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7352a7fd]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2941d8c1]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_WRITE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b508d30]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d1007a3]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a305910]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@558a2edd]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [OPTIMISTIC]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@186a06d0]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36299748]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [OPTIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Project: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Project: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static SQL for entity: sw.entity.AssetType
 Version select: select id from t_asset_type where id =?
 Snapshot select: select assettype_.id, assettype_.name as name2_3_ from t_asset_type assettype_ where assettype_.id=?
 Insert 0: insert into t_asset_type (name, id) values (?, ?)
 Update 0: update t_asset_type set name=? where id=?
 Delete 0: delete from t_asset_type where id=?
 Identity insert: insert into t_asset_type (name) values (?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3251ab96]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [NONE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b3e2652]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [READ]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ee57b1d]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65eb9571]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE_NOWAIT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ae38b2c]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE_SKIPLOCKED]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55c2ea21]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [FORCE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@253154a8]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_READ]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@563c34e0]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_WRITE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62990910]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_FORCE_INCREMENT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b9b4e08]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [OPTIMISTIC]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@581b7fe6]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [OPTIMISTIC_FORCE_INCREMENT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.AssetType: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.AssetType: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static SQL for entity: sw.entity.Action
 Version select: select id from t_action where id =?
 Snapshot select: select action_.id, action_.menu_id as menu_id4_0_, action_.name as name2_0_, action_.url as url3_0_ from t_action action_ where action_.id=?
 Insert 0: insert into t_action (menu_id, name, url, id) values (?, ?, ?, ?)
 Update 0: update t_action set menu_id=?, name=?, url=? where id=?
 Delete 0: delete from t_action where id=?
 Identity insert: insert into t_action (menu_id, name, url) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0719e8]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aba24a8]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

Static select for entity sw.entity.Action [NONE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_5_1_, menu1_.href as href2_5_1_, menu1_.name as name3_5_1_, menu1_.pid as pid4_5_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c553d1d]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6228d882]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

Static select for entity sw.entity.Action [READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_5_1_, menu1_.href as href2_5_1_, menu1_.name as name3_5_1_, menu1_.pid as pid4_5_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@457ffbc]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8f8c345]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a0b63c]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@153e0ace]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_NOWAIT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b9201c7]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d9d35df]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_SKIPLOCKED]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8102ad8]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2eb4e26]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [FORCE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65ca069]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70da05e8]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2898efab]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cc4bf41]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_WRITE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c911474]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a3f8325]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f80594]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ea350af]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3803caf5]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78b0df56]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static SQL for entity: sw.entity.ActionGroup
 Version select: select id from t_actiongroup where id =?
 Snapshot select: select actiongrou_.id, actiongrou_.action_id as action_i3_1_, actiongrou_.create_date as create_d2_1_, actiongrou_.group_id as group_id4_1_, actiongrou_.menu_id as menu_id5_1_, actiongrou_.user_id as user_id6_1_ from t_actiongroup actiongrou_ where actiongrou_.id=?
 Insert 0: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update t_actiongroup set action_id=?, create_date=?, group_id=?, menu_id=?, user_id=? where id=?
 Delete 0: delete from t_actiongroup where id=?
 Identity insert: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id) values (?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c32cec7]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24ec12c6]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10568a08]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@294b40cd]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16317f25]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2013f649]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12d7df71]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_10_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_5_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.ActionGroup [NONE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_5_2_, menu2_.href as href2_5_2_, menu2_.name as name3_5_2_, menu2_.pid as pid4_5_2_, group3_.id as id1_4_3_, group3_.create_date as create_d2_4_3_, group3_.info as info3_4_3_, group3_.user_id as user_id5_4_3_, group3_.name as name4_4_3_, user4_.id as id1_10_4_, user4_.email as email2_10_4_, user4_.name as name3_10_4_, user4_.password as password4_10_4_, user4_.tel as tel5_10_4_, menu5_.id as id1_5_5_, menu5_.href as href2_5_5_, menu5_.name as name3_5_5_, menu5_.pid as pid4_5_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@129575f5]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2305594b]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c86b1f7]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43ffa9ac]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@653664ea]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5af725f1]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@345d87a]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_10_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_5_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.ActionGroup [READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_5_2_, menu2_.href as href2_5_2_, menu2_.name as name3_5_2_, menu2_.pid as pid4_5_2_, group3_.id as id1_4_3_, group3_.create_date as create_d2_4_3_, group3_.info as info3_4_3_, group3_.user_id as user_id5_4_3_, group3_.name as name4_4_3_, user4_.id as id1_10_4_, user4_.email as email2_10_4_, user4_.name as name3_10_4_, user4_.password as password4_10_4_, user4_.tel as tel5_10_4_, menu5_.id as id1_5_5_, menu5_.href as href2_5_5_, menu5_.name as name3_5_5_, menu5_.pid as pid4_5_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e2bdb7d]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31783083]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@99c4b8e]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@96c89f3]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8d55550]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78d990e1]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ebc44d3]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ce1f181]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@680b2c64]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68dbed36]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_NOWAIT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@745da622]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ba4c45]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21bfb1f9]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@384a6f5a]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f1c936]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_SKIPLOCKED]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@426d75c9]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@755aa831]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d6a67d5]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5480868c]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4336a90c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [FORCE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@638d9a7b]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d1346d4]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b9be2b3]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@644af3f9]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1120edfd]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16022ceb]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@115e2067]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70768b4]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6579cb]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64ee5cef]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_WRITE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@453150d]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13ad1214]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b22daa]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1955bb6c]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dd3adea]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36152bf6]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1664de0f]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46088dd4]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@595d5478]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f2af937]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f0eca7b]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e27eb22]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@569c4890]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f080d2a]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76384926]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Instantiated session factory
HHH000228: Running hbm2ddl schema update
No alter strings for table : t_action
No alter strings for table : t_actiongroup
No alter strings for table : t_asset
No alter strings for table : t_asset_type
No alter strings for table : t_group
No alter strings for table : t_menu
No alter strings for table : t_project
No alter strings for table : t_project_refence
No alter strings for table : t_referencefile
No alter strings for table : t_threat
No alter strings for table : t_user
No alter strings for table : t_usergroup
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3dde349f
Registering SessionFactory: 58635e75-e9e6-40d1-9edc-bfbe2b2293aa (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@552fcb0f
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@72ca43c7: startup date [Tue Nov 21 15:07:16 CST 2017]; root of context hierarchy
Mapped "{[/pro/projectForm],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectFormView(org.springframework.ui.Model)
Mapped "{[/pro/projectList],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectPage(org.springframework.ui.Model)
Mapped "{[/pro/projectMain/{projectId}/{groupIds}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectMain(int,java.lang.String,org.springframework.ui.Model)
Mapped "{[/pro/findAllGroups/{projectId}],methods=[GET]}" onto public void sw.controller.ProjectController.findAllGroups(int,org.springframework.ui.Model)
Mapped "{[/pro/updateProject],methods=[POST]}" onto public java.lang.String sw.controller.ProjectController.updateProject(sw.entity.Project)
Mapped "{[/pro/projectAdd],methods=[POST]}" onto public java.lang.String sw.controller.ProjectController.projectAdd(sw.entity.Project,org.springframework.ui.Model)
Mapped "{[/pro/projectForm/{id}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectForm(int,org.springframework.ui.Model)
Mapped "{[/pro/delProject/{id}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.delCollege(int)
Mapped "{[/pro/menu]}" onto public sw.model.MMenu sw.controller.ProjectController.findByroot()
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model,javax.servlet.http.HttpSession)
Mapped "{[/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage(org.springframework.ui.Model)
Mapped "{[/logout],methods=[GET]}" onto public java.lang.String sw.controller.UserController.logout(javax.servlet.http.HttpSession)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 12.151 seconds (JVM running for 12.748)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6f99969b
HHH000397: Using ASTQueryTranslatorFactory
parse() - HQL: select generatedAlias0 from sw.entity.Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'sw'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Project'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'user'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : sw.entity.Project (generatedAlias0) -> project0_
Resolved : generatedAlias0 -> project0_.id
getDataType() : user -> org.hibernate.type.ManyToOneType(sw.entity.User)
dereferenceEntityJoin() : generating join for user in sw.entity.Project (generatedAlias1) parent = [ {null} ]
FromClause{level=1} : sw.entity.User (generatedAlias1) -> user1_
addJoinByPathMap() : generatedAlias0.user -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=t_user,tableAlias=user1_,origin=t_project project0_,columns={project0_.user_id ,className=sw.entity.User}}
Resolved : generatedAlias0.user -> project0_.user_id
createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 't_user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=sw.entity.Project.user,tableName=t_user,tableAlias=user1_,origin=t_project project0_,columns={project0_.user_id ,className=sw.entity.User}}

Resolved : generatedAlias0 -> project0_.id
Resolved : generatedAlias1 -> user1_.id
getDataType() : id -> org.hibernate.type.IntegerType@4cd0235b
Resolved : generatedAlias1.id -> user1_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} project0_.id ) ( FromClause{level=1} ( t_project project0_ t_user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
Using FROM fragment [t_project project0_]
Using FROM fragment [left outer join t_user user1_ on project0_.user_id=user1_.id]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (t_user,t_project)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'project0_.id as id1_6_' {alias=generatedAlias0, className=sw.entity.Project, tableAlias=project0_}
    |  \-[SQL_TOKEN] SqlFragment: 'project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[project0_, user1_], fromElementsByPath=[generatedAlias0.user], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 't_project project0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=t_project,tableAlias=project0_,origin=null,columns={,className=sw.entity.Project}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join t_user user1_ on project0_.user_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=sw.entity.Project.user,tableName=t_user,tableAlias=user1_,origin=t_project project0_,columns={project0_.user_id ,className=sw.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=sw.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=sw.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.IntegerType@4cd0235b}

throwQueryException() : no errors
HQL: select generatedAlias0 from sw.entity.Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
SQL: select project0_.id as id1_6_, project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
throwQueryException() : no errors
select project0_.id as id1_6_, project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
parse() - HQL: select generatedAlias0 from sw.entity.UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'sw'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'UserGroup'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'user'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : sw.entity.UserGroup (generatedAlias0) -> usergroup0_
Resolved : generatedAlias0 -> usergroup0_.id
getDataType() : user -> org.hibernate.type.ManyToOneType(sw.entity.User)
dereferenceEntityJoin() : generating join for user in sw.entity.UserGroup (generatedAlias1) parent = [ {null} ]
FromClause{level=1} : sw.entity.User (generatedAlias1) -> user1_
addJoinByPathMap() : generatedAlias0.user -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=t_user,tableAlias=user1_,origin=t_usergroup usergroup0_,columns={usergroup0_.user_id ,className=sw.entity.User}}
Resolved : generatedAlias0.user -> usergroup0_.user_id
createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 't_user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=sw.entity.UserGroup.user,tableName=t_user,tableAlias=user1_,origin=t_usergroup usergroup0_,columns={usergroup0_.user_id ,className=sw.entity.User}}

Resolved : generatedAlias0 -> usergroup0_.id
Resolved : generatedAlias1 -> user1_.id
getDataType() : id -> org.hibernate.type.IntegerType@4cd0235b
Resolved : generatedAlias1.id -> user1_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} usergroup0_.id ) ( FromClause{level=1} ( t_usergroup usergroup0_ t_user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
Using FROM fragment [t_usergroup usergroup0_]
Using FROM fragment [left outer join t_user user1_ on usergroup0_.user_id=user1_.id]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (t_user,t_usergroup)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'usergroup0_.id as id1_11_' {alias=generatedAlias0, className=sw.entity.UserGroup, tableAlias=usergroup0_}
    |  \-[SQL_TOKEN] SqlFragment: 'usergroup0_.create_date as create_d2_11_, usergroup0_.group_id as group_id4_11_, usergroup0_.is_headman as is_headm3_11_, usergroup0_.modify_userid as modify_u5_11_, usergroup0_.project_id as project_6_11_, usergroup0_.user_id as user_id7_11_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[user1_, usergroup0_], fromElementsByPath=[generatedAlias0.user], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 't_usergroup usergroup0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=t_usergroup,tableAlias=usergroup0_,origin=null,columns={,className=sw.entity.UserGroup}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join t_user user1_ on usergroup0_.user_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=sw.entity.UserGroup.user,tableName=t_user,tableAlias=user1_,origin=t_usergroup usergroup0_,columns={usergroup0_.user_id ,className=sw.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=sw.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=sw.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.IntegerType@4cd0235b}

throwQueryException() : no errors
HQL: select generatedAlias0 from sw.entity.UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
SQL: select usergroup0_.id as id1_11_, usergroup0_.create_date as create_d2_11_, usergroup0_.group_id as group_id4_11_, usergroup0_.is_headman as is_headm3_11_, usergroup0_.modify_userid as modify_u5_11_, usergroup0_.project_id as project_6_11_, usergroup0_.user_id as user_id7_11_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
throwQueryException() : no errors
select usergroup0_.id as id1_11_, usergroup0_.create_date as create_d2_11_, usergroup0_.group_id as group_id4_11_, usergroup0_.is_headman as is_headm3_11_, usergroup0_.modify_userid as modify_u5_11_, usergroup0_.project_id as project_6_11_, usergroup0_.user_id as user_id7_11_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_6_, project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_11_, usergroup0_.create_date as create_d2_11_, usergroup0_.group_id as group_id4_11_, usergroup0_.is_headman as is_headm3_11_, usergroup0_.modify_userid as modify_u5_11_, usergroup0_.project_id as project_6_11_, usergroup0_.user_id as user_id7_11_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
begin
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#3]
Done materializing entity [sw.entity.Project#3]
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#3
committing
begin
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#3]
Done materializing entity [sw.entity.Project#3]
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#3
committing
Starting Application on LuoRong with PID 1076 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4fed91f0: startup date [Tue Nov 21 15:09:55 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d3ccd128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3180 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1b08dbd
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@aa9a0d6{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.Action
		sw.entity.ActionGroup
		sw.entity.Asset
		sw.entity.AssetType
		sw.entity.Group
		sw.entity.Menu
		sw.entity.Project
		sw.entity.ProRef
		sw.entity.ReferenceFile
		sw.entity.Threat
		sw.entity.User
		sw.entity.UserGroup]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@6a523a53
Adding type registration boolean -> org.hibernate.type.BooleanType@6a523a53
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6a523a53
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@50536716
Adding type registration true_false -> org.hibernate.type.TrueFalseType@23493a29
Adding type registration yes_no -> org.hibernate.type.YesNoType@4840d9b5
Adding type registration byte -> org.hibernate.type.ByteType@4cfc4550
Adding type registration byte -> org.hibernate.type.ByteType@4cfc4550
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4cfc4550
Adding type registration character -> org.hibernate.type.CharacterType@670d75f6
Adding type registration char -> org.hibernate.type.CharacterType@670d75f6
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@670d75f6
Adding type registration short -> org.hibernate.type.ShortType@277dfa1b
Adding type registration short -> org.hibernate.type.ShortType@277dfa1b
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@277dfa1b
Adding type registration integer -> org.hibernate.type.IntegerType@275d2f7b
Adding type registration int -> org.hibernate.type.IntegerType@275d2f7b
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@275d2f7b
Adding type registration long -> org.hibernate.type.LongType@46df23ee
Adding type registration long -> org.hibernate.type.LongType@46df23ee
Adding type registration java.lang.Long -> org.hibernate.type.LongType@46df23ee
Adding type registration float -> org.hibernate.type.FloatType@1f147da8
Adding type registration float -> org.hibernate.type.FloatType@1f147da8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1f147da8
Adding type registration double -> org.hibernate.type.DoubleType@4a944ace
Adding type registration double -> org.hibernate.type.DoubleType@4a944ace
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4a944ace
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4d737d2e
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4d737d2e
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@34842b22
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@34842b22
Adding type registration string -> org.hibernate.type.StringType@74e01472
Adding type registration java.lang.String -> org.hibernate.type.StringType@74e01472
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@22bb8064
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6dc85f47
Adding type registration url -> org.hibernate.type.UrlType@b96fec
Adding type registration java.net.URL -> org.hibernate.type.UrlType@b96fec
Adding type registration date -> org.hibernate.type.DateType@4df78ef4
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4df78ef4
Adding type registration time -> org.hibernate.type.TimeType@171d4f0a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@171d4f0a
Adding type registration timestamp -> org.hibernate.type.TimestampType@377d0097
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@377d0097
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@377d0097
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@365d2598
Adding type registration calendar -> org.hibernate.type.CalendarType@a591744
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@a591744
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@a591744
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@34957ccb
Adding type registration locale -> org.hibernate.type.LocaleType@1499a6ed
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1499a6ed
Adding type registration currency -> org.hibernate.type.CurrencyType@7f9183a
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7f9183a
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2fcb1f59
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2fcb1f59
Adding type registration class -> org.hibernate.type.ClassType@d3908a0
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@d3908a0
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@67c8ab23
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@67c8ab23
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2807129b
Adding type registration binary -> org.hibernate.type.BinaryType@399ea956
Adding type registration byte[] -> org.hibernate.type.BinaryType@399ea956
Adding type registration [B -> org.hibernate.type.BinaryType@399ea956
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6ae2529d
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6ae2529d
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6ae2529d
Adding type registration row_version -> org.hibernate.type.RowVersionType@4d24b361
Adding type registration image -> org.hibernate.type.ImageType@26230acd
Adding type registration characters -> org.hibernate.type.CharArrayType@78ba6a27
Adding type registration char[] -> org.hibernate.type.CharArrayType@78ba6a27
Adding type registration [C -> org.hibernate.type.CharArrayType@78ba6a27
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17b55ea4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17b55ea4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17b55ea4
Adding type registration text -> org.hibernate.type.TextType@6912eb62
Adding type registration ntext -> org.hibernate.type.NTextType@29b866d6
Adding type registration blob -> org.hibernate.type.BlobType@5b87eeb2
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5b87eeb2
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@182c555b
Adding type registration clob -> org.hibernate.type.ClobType@28a2f658
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28a2f658
Adding type registration nclob -> org.hibernate.type.NClobType@6abf3f44
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6abf3f44
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@34fabc1b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@76f468a5
Adding type registration serializable -> org.hibernate.type.SerializableType@23791936
Adding type registration object -> org.hibernate.type.ObjectType@671783cd
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@671783cd
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6cac08c2
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@377ee771
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@16833d79
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7617f0f9
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7af11ce1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3af429a1
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3513a373
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7cca0d10
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.Threat
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Threat
Bind entity sw.entity.Threat on table t_threat
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='asset_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=asset, insertable=true, updatable=true, unique=false}
Building property asset
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=frequency, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property frequency with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:frequency]
building SimpleValue for frequency
Building property frequency
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=threat_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property threatName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:threatName]
building SimpleValue for threatName
Building property threatName
Binding entity from annotated class: sw.entity.Group
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Group
Bind entity sw.entity.Group on table t_group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=info, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property info with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:info]
building SimpleValue for info
Building property info
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Asset
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Asset
Bind entity sw.entity.Asset on table t_asset
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='ass_typ_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=asset_type, insertable=true, updatable=true, unique=false}
Building property assetType
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=backup_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property backupForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:backupForm]
building SimpleValue for backupForm
Building property backupForm
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=depart, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property depart with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:depart]
building SimpleValue for depart
Building property depart
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=importance, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property importance with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:importance]
building SimpleValue for importance
Building property importance
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=principle, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property principle with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:principle]
building SimpleValue for principle
Building property principle
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=remark, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property remark with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:remark]
building SimpleValue for remark
Building property remark
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=save_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property saveForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:saveForm]
building SimpleValue for saveForm
Building property saveForm
Binding entity from annotated class: sw.entity.ProRef
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ProRef
Bind entity sw.entity.ProRef on table t_project_refence
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ProRef:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='ref_pro_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=reference_file, insertable=true, updatable=true, unique=false}
Building property referenceFile
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Binding entity from annotated class: sw.entity.UserGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name UserGroup
Bind entity sw.entity.UserGroup on table t_usergroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=is_headman, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property isHeadman with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:isHeadman]
building SimpleValue for isHeadman
Building property isHeadman
Binding column: Ejb3JoinColumn{logicalColumnName='modify_userid', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.Menu
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Menu
Bind entity sw.entity.Menu on table t_menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=href, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property href with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:href]
building SimpleValue for href
Building property href
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=pid, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property pid with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:pid]
building SimpleValue for pid
Building property pid
Binding entity from annotated class: sw.entity.ReferenceFile
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ReferenceFile
Bind entity sw.entity.ReferenceFile on table t_referencefile
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=company, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property company with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:company]
building SimpleValue for company
Building property company
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=file_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property fileName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:fileName]
building SimpleValue for fileName
Building property fileName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=publish_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property publishDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:publishDate]
building SimpleValue for publishDate
Building property publishDate
Binding entity from annotated class: sw.entity.Project
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Project
Bind entity sw.entity.Project on table t_project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:name]
building SimpleValue for name
Building property name
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.AssetType
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AssetType
Bind entity sw.entity.AssetType on table t_asset_type
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Action
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Action
Bind entity sw.entity.Action on table t_action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=url, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property url with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:url]
building SimpleValue for url
Building property url
Binding entity from annotated class: sw.entity.ActionGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ActionGroup
Bind entity sw.entity.ActionGroup on table t_actiongroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='action_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=action, insertable=true, updatable=true, unique=false}
Building property action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Starting fillSimpleValue for id
Starting fillSimpleValue for frequency
Starting fillSimpleValue for threatName
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for info
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for backupForm
Starting fillSimpleValue for depart
Starting fillSimpleValue for description
Starting fillSimpleValue for importance
Starting fillSimpleValue for name
Starting fillSimpleValue for principle
Starting fillSimpleValue for remark
Starting fillSimpleValue for saveForm
Starting fillSimpleValue for id
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for isHeadman
Starting fillSimpleValue for id
Starting fillSimpleValue for href
Starting fillSimpleValue for name
Starting fillSimpleValue for pid
Starting fillSimpleValue for id
Starting fillSimpleValue for company
Starting fillSimpleValue for fileName
Starting fillSimpleValue for publishDate
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for description
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for url
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Forcing column [id] to be non-null as it is part of the primary key for table [t_threat]
Forcing column [id] to be non-null as it is part of the primary key for table [t_group]
Forcing column [id] to be non-null as it is part of the primary key for table [t_asset]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project_refence]
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Forcing column [id] to be non-null as it is part of the primary key for table [t_usergroup]
Forcing column [id] to be non-null as it is part of the primary key for table [t_menu]
Forcing column [id] to be non-null as it is part of the primary key for table [t_referencefile]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project]
Forcing column [id] to be non-null as it is part of the primary key for table [t_asset_type]
Forcing column [id] to be non-null as it is part of the primary key for table [t_action]
Forcing column [id] to be non-null as it is part of the primary key for table [t_actiongroup]
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.AssetType
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.ReferenceFile
Resolving reference to class: sw.entity.Asset
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.AssetType
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.ReferenceFile
Resolving reference to class: sw.entity.Asset
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@49704c00
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.8488872014840973578.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=1076, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@53eae69a, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@aa9a0d6{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar;C:\Users\LR\.m2\repository\commons-beanutils\commons-beanutils\1.9.3\commons-beanutils-1.9.3.jar;C:\Users\LR\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\LR\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi\3.14\poi-3.14.jar;C:\Users\LR\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi-ooxml\3.14\poi-ooxml-3.14.jar;C:\Users\LR\.m2\repository\com\github\virtuald\curvesapi\1.03\curvesapi-1.03.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi-ooxml-schemas\3.14\poi-ooxml-schemas-3.14.jar;C:\Users\LR\.m2\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;C:\Users\LR\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.8488872014840973578.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@e0be0db, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.Threat] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Threat
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@73d0db22, payload=[Ljava.lang.Class;@629ef854}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@472fdeb0, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@2cc9ca4}, constraintType=GENERIC}.
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@14594f85, payload=[Ljava.lang.Class;@6b4c1dc4}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@5613d141, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@6359fcbc}, constraintType=GENERIC}.
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.Threat] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Threat
Not known whether passed class name [sw.entity.Threat] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Threat
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Static SQL for entity: sw.entity.Threat
 Version select: select id from t_threat where id =?
 Snapshot select: select threat_.id, threat_.asset_id as asset_id4_9_, threat_.frequency as frequenc2_9_, threat_.threat_name as threat_n3_9_ from t_threat threat_ where threat_.id=?
 Insert 0: insert into t_threat (asset_id, frequency, threat_name, id) values (?, ?, ?, ?)
 Update 0: update t_threat set asset_id=?, frequency=?, threat_name=? where id=?
 Delete 0: delete from t_threat where id=?
 Identity insert: insert into t_threat (asset_id, frequency, threat_name) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60d354ce]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c496872]
Visiting attribute path : asset.assetType
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3597dfcb]
Visiting attribute path : asset.assetType.name
Visiting attribute path : asset.backupForm
Visiting attribute path : asset.depart
Visiting attribute path : asset.description
Visiting attribute path : asset.importance
Visiting attribute path : asset.name
Visiting attribute path : asset.principle
Visiting attribute path : asset.project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37179daa]
Visiting attribute path : asset.project.createDate
Visiting attribute path : asset.project.description
Visiting attribute path : asset.project.name
Visiting attribute path : asset.project.user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37c0f1f7]
Visiting attribute path : asset.remark
Visiting attribute path : asset.saveForm
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
             - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:2>, path=sw.entity.Threat.asset.assetType)
             - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.Threat.asset.project)
                - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.Threat.asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}
          - JOIN (JoinDefinedByMetadata(asset)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Asset)
                - SQL table alias mapping - asset1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(assetType)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.AssetType)
                      - SQL table alias mapping - assettype2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_6_3_}

Static select for entity sw.entity.Threat [NONE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_, asset1_.id as id1_2_1_, asset1_.ass_typ_id as ass_typ10_2_1_, asset1_.backup_form as backup_f2_2_1_, asset1_.depart as depart3_2_1_, asset1_.description as descript4_2_1_, asset1_.importance as importan5_2_1_, asset1_.name as name6_2_1_, asset1_.principle as principl7_2_1_, asset1_.project_id as project11_2_1_, asset1_.remark as remark8_2_1_, asset1_.save_form as save_for9_2_1_, assettype2_.id as id1_3_2_, assettype2_.name as name2_3_2_, project3_.id as id1_6_3_, project3_.create_date as create_d2_6_3_, project3_.description as descript3_6_3_, project3_.name as name4_6_3_, project3_.user_id as user_id5_6_3_ from t_threat threat0_ left outer join t_asset asset1_ on threat0_.asset_id=asset1_.id left outer join t_asset_type assettype2_ on asset1_.ass_typ_id=assettype2_.id left outer join t_project project3_ on asset1_.project_id=project3_.id where threat0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b021f8a]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44756d39]
Visiting attribute path : asset.assetType
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@140e651d]
Visiting attribute path : asset.assetType.name
Visiting attribute path : asset.backupForm
Visiting attribute path : asset.depart
Visiting attribute path : asset.description
Visiting attribute path : asset.importance
Visiting attribute path : asset.name
Visiting attribute path : asset.principle
Visiting attribute path : asset.project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6366d649]
Visiting attribute path : asset.project.createDate
Visiting attribute path : asset.project.description
Visiting attribute path : asset.project.name
Visiting attribute path : asset.project.user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@157488eb]
Visiting attribute path : asset.remark
Visiting attribute path : asset.saveForm
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
             - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:2>, path=sw.entity.Threat.asset.assetType)
             - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.Threat.asset.project)
                - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.Threat.asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}
          - JOIN (JoinDefinedByMetadata(asset)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Asset)
                - SQL table alias mapping - asset1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(assetType)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.AssetType)
                      - SQL table alias mapping - assettype2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_6_3_}

Static select for entity sw.entity.Threat [READ]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_, asset1_.id as id1_2_1_, asset1_.ass_typ_id as ass_typ10_2_1_, asset1_.backup_form as backup_f2_2_1_, asset1_.depart as depart3_2_1_, asset1_.description as descript4_2_1_, asset1_.importance as importan5_2_1_, asset1_.name as name6_2_1_, asset1_.principle as principl7_2_1_, asset1_.project_id as project11_2_1_, asset1_.remark as remark8_2_1_, asset1_.save_form as save_for9_2_1_, assettype2_.id as id1_3_2_, assettype2_.name as name2_3_2_, project3_.id as id1_6_3_, project3_.create_date as create_d2_6_3_, project3_.description as descript3_6_3_, project3_.name as name4_6_3_, project3_.user_id as user_id5_6_3_ from t_threat threat0_ left outer join t_asset asset1_ on threat0_.asset_id=asset1_.id left outer join t_asset_type assettype2_ on asset1_.ass_typ_id=assettype2_.id left outer join t_project project3_ on asset1_.project_id=project3_.id where threat0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32343b54]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c32625b]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [UPGRADE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@db086e6]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@528ab5dc]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [UPGRADE_NOWAIT]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d05256c]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5235688]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [UPGRADE_SKIPLOCKED]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20027a5]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a816a64]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [FORCE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6509e4aa]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62af6687]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [PESSIMISTIC_READ]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@130cf2fc]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61305fd1]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [PESSIMISTIC_WRITE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78b2862e]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66793fae]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [PESSIMISTIC_FORCE_INCREMENT]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d43a67]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d843954]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [OPTIMISTIC]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222fe305]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35fc5696]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [OPTIMISTIC_FORCE_INCREMENT]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Threat: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Threat: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Static SQL for entity: sw.entity.Group
 Version select: select id from t_group where id =?
 Snapshot select: select group_.id, group_.create_date as create_d2_4_, group_.info as info3_4_, group_.user_id as user_id5_4_, group_.name as name4_4_ from t_group group_ where group_.id=?
 Insert 0: insert into t_group (create_date, info, user_id, name, id) values (?, ?, ?, ?, ?)
 Update 0: update t_group set create_date=?, info=?, user_id=?, name=? where id=?
 Delete 0: delete from t_group where id=?
 Identity insert: insert into t_group (create_date, info, user_id, name) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d84d8e9]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@522b664f]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Group [NONE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ea8e5a1]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@458e4286]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Group [READ]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48a5df64]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41ca3060]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d270823]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5382e6a1]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE_NOWAIT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43db8581]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60b1924c]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE_SKIPLOCKED]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24c2d715]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7acd2b8e]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [FORCE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1682e569]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ac2216a]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_READ]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59c0f2e7]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b47d0bf]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_WRITE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70556dcc]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31c3de1e]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@241432b1]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36169241]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [OPTIMISTIC]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@190a89b3]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43a2417a]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [OPTIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Group: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Group: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static SQL for entity: sw.entity.Asset
 Version select: select id from t_asset where id =?
 Snapshot select: select asset_.id, asset_.ass_typ_id as ass_typ10_2_, asset_.backup_form as backup_f2_2_, asset_.depart as depart3_2_, asset_.description as descript4_2_, asset_.importance as importan5_2_, asset_.name as name6_2_, asset_.principle as principl7_2_, asset_.project_id as project11_2_, asset_.remark as remark8_2_, asset_.save_form as save_for9_2_ from t_asset asset_ where asset_.id=?
 Insert 0: insert into t_asset (ass_typ_id, backup_form, depart, description, importance, name, principle, project_id, remark, save_form, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update t_asset set ass_typ_id=?, backup_form=?, depart=?, description=?, importance=?, name=?, principle=?, project_id=?, remark=?, save_form=? where id=?
 Delete 0: delete from t_asset where id=?
 Identity insert: insert into t_asset (ass_typ_id, backup_form, depart, description, importance, name, principle, project_id, remark, save_form) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41a457d5]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65c5f336]
Visiting attribute path : assetType.name
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57c424c8]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@614a416c]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.Asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(assetType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.AssetType)
                - SQL table alias mapping - assettype1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_10_3_}

Static select for entity sw.entity.Asset [NONE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_, assettype1_.id as id1_3_1_, assettype1_.name as name2_3_1_, project2_.id as id1_6_2_, project2_.create_date as create_d2_6_2_, project2_.description as descript3_6_2_, project2_.name as name4_6_2_, project2_.user_id as user_id5_6_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_ from t_asset asset0_ left outer join t_asset_type assettype1_ on asset0_.ass_typ_id=assettype1_.id left outer join t_project project2_ on asset0_.project_id=project2_.id left outer join t_user user3_ on project2_.user_id=user3_.id where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d823511]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37be00cc]
Visiting attribute path : assetType.name
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6576faa4]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4522c255]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.Asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(assetType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.AssetType)
                - SQL table alias mapping - assettype1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_10_3_}

Static select for entity sw.entity.Asset [READ]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_, assettype1_.id as id1_3_1_, assettype1_.name as name2_3_1_, project2_.id as id1_6_2_, project2_.create_date as create_d2_6_2_, project2_.description as descript3_6_2_, project2_.name as name4_6_2_, project2_.user_id as user_id5_6_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_ from t_asset asset0_ left outer join t_asset_type assettype1_ on asset0_.ass_typ_id=assettype1_.id left outer join t_project project2_ on asset0_.project_id=project2_.id left outer join t_user user3_ on project2_.user_id=user3_.id where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2db84774]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@143902bf]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22c97fe2]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d250f28]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4991aa7]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d4653b9]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE_NOWAIT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8ff4d76]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52bfc86b]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d3b921e]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE_SKIPLOCKED]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fddea32]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3078e1e3]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61823e90]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [FORCE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@711ed4e8]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e9aeb99]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e1c2864]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_READ]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29a210db]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a88957d]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1598d940]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_WRITE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c0527e0]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ac2e4d2]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9c37413]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_FORCE_INCREMENT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cfc78ec]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78814867]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a70d888]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [OPTIMISTIC]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@524f632]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43c6f4a]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@686453dd]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [OPTIMISTIC_FORCE_INCREMENT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Asset: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Asset: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static SQL for entity: sw.entity.ProRef
 Version select: select id from t_project_refence where id =?
 Snapshot select: select proref_.id, proref_.project_id as project_2_7_, proref_.ref_pro_id as ref_pro_3_7_ from t_project_refence proref_ where proref_.id=?
 Insert 0: insert into t_project_refence (project_id, ref_pro_id, id) values (?, ?, ?)
 Update 0: update t_project_refence set project_id=?, ref_pro_id=? where id=?
 Delete 0: delete from t_project_refence where id=?
 Identity insert: insert into t_project_refence (project_id, ref_pro_id) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ad3ad85]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d72754f]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20aa077f]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c76259f]
Visiting attribute path : referenceFile.company
Visiting attribute path : referenceFile.fileName
Visiting attribute path : referenceFile.publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(referenceFile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.ReferenceFile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_8_3_}

Static select for entity sw.entity.ProRef [NONE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_, project1_.id as id1_6_1_, project1_.create_date as create_d2_6_1_, project1_.description as descript3_6_1_, project1_.name as name4_6_1_, project1_.user_id as user_id5_6_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, referencef3_.id as id1_8_3_, referencef3_.company as company2_8_3_, referencef3_.file_name as file_nam3_8_3_, referencef3_.publish_date as publish_4_8_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a2f1254]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4289692f]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39cdfeee]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78aeed74]
Visiting attribute path : referenceFile.company
Visiting attribute path : referenceFile.fileName
Visiting attribute path : referenceFile.publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(referenceFile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.ReferenceFile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_8_3_}

Static select for entity sw.entity.ProRef [READ]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_, project1_.id as id1_6_1_, project1_.create_date as create_d2_6_1_, project1_.description as descript3_6_1_, project1_.name as name4_6_1_, project1_.user_id as user_id5_6_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, referencef3_.id as id1_8_3_, referencef3_.company as company2_8_3_, referencef3_.file_name as file_nam3_8_3_, referencef3_.publish_date as publish_4_8_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@220feb0d]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f91c57]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bfb35d0]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56f1f021]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dcbf272]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fcc13ae]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE_NOWAIT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e5908e]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e143b66]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@217a0a69]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE_SKIPLOCKED]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b318f28]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8a4a58c]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@797ccfb3]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [FORCE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7eb3577b]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@476edb09]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58708500]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_READ]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9c09fa]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b3e6aee]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67baa00c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_WRITE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b35a6d8]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@331cd348]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@114afe7]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1781da7b]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5407e9d6]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70481f26]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69034156]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2432b4e8]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14b32e67]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ProRef: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ProRef: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_10_, user_.name as name3_10_, user_.password as password4_10_, user_.tel as tel5_10_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67c9d456]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c5b551c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38549df6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a47fa2d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13d4c906]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f544962]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f6a7aca]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ab8d0e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cb9bf2d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@630a3c33]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b250c79]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Static SQL for entity: sw.entity.UserGroup
 Version select: select id from t_usergroup where id =?
 Snapshot select: select usergroup_.id, usergroup_.create_date as create_d2_11_, usergroup_.group_id as group_id4_11_, usergroup_.is_headman as is_headm3_11_, usergroup_.modify_userid as modify_u5_11_, usergroup_.project_id as project_6_11_, usergroup_.user_id as user_id7_11_ from t_usergroup usergroup_ where usergroup_.id=?
 Insert 0: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update t_usergroup set create_date=?, group_id=?, is_headman=?, modify_userid=?, project_id=?, user_id=? where id=?
 Delete 0: delete from t_usergroup where id=?
 Identity insert: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id) values (?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c153ae4]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@616c6dd7]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@198f4511]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76d27ccc]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dd528e0]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@691de1c2]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@294176c6]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_10_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_6_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_10_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.UserGroup [NONE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_, group1_.id as id1_4_1_, group1_.create_date as create_d2_4_1_, group1_.info as info3_4_1_, group1_.user_id as user_id5_4_1_, group1_.name as name4_4_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_, project4_.id as id1_6_4_, project4_.create_date as create_d2_6_4_, project4_.description as descript3_6_4_, project4_.name as name4_6_4_, project4_.user_id as user_id5_6_4_, user5_.id as id1_10_5_, user5_.email as email2_10_5_, user5_.name as name3_10_5_, user5_.password as password4_10_5_, user5_.tel as tel5_10_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45b68132]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@342a9146]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dc40f47]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@120416b3]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16d37188]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@768eb19b]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57cc9b4f]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_10_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_6_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_10_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.UserGroup [READ]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_, group1_.id as id1_4_1_, group1_.create_date as create_d2_4_1_, group1_.info as info3_4_1_, group1_.user_id as user_id5_4_1_, group1_.name as name4_4_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_, project4_.id as id1_6_4_, project4_.create_date as create_d2_6_4_, project4_.description as descript3_6_4_, project4_.name as name4_6_4_, project4_.user_id as user_id5_6_4_, user5_.id as id1_10_5_, user5_.email as email2_10_5_, user5_.name as name3_10_5_, user5_.password as password4_10_5_, user5_.tel as tel5_10_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cd977a6]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62baaad1]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dc008c2]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a13309b]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@410d2d22]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [UPGRADE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76d6fbf0]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58e901f2]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@702543f0]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@316d3f7f]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@717f9059]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_NOWAIT]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6109e915]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a74ad2]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ed7f3a7]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4038fe29]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33c2db1d]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_SKIPLOCKED]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aeaf66d]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cbf12ad]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19803c14]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2464f8d7]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14f7458d]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [FORCE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@501917c4]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b400ad4]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6535f51c]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d8a7949]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3aa6043e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_READ]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71fbbf14]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15c24f3f]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f4f2e4d]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e021af]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@695febd8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_WRITE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e63ea7b]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a67395d]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cf014e2]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d310335]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1120b943]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@128ed7eb]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b08021c]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f76449f]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ba3e515]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f6d74b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22c52c8b]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b550d53]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54a6c3fd]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f0c0c96]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6658bcc1]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.UserGroup: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.UserGroup: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static SQL for entity: sw.entity.Menu
 Version select: select id from t_menu where id =?
 Snapshot select: select menu_.id, menu_.href as href2_5_, menu_.name as name3_5_, menu_.pid as pid4_5_ from t_menu menu_ where menu_.id=?
 Insert 0: insert into t_menu (href, name, pid, id) values (?, ?, ?, ?)
 Update 0: update t_menu set href=?, name=?, pid=? where id=?
 Delete 0: delete from t_menu where id=?
 Identity insert: insert into t_menu (href, name, pid) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a41acc]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [NONE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7828407b]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [READ]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec256db]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ff2040e]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE_NOWAIT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62267070]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE_SKIPLOCKED]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@557ad3e0]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [FORCE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e3543ee]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_READ]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ca3e663]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_WRITE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f0725e0]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d1de6e7]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3972bdb9]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Menu: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Menu: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static SQL for entity: sw.entity.ReferenceFile
 Version select: select id from t_referencefile where id =?
 Snapshot select: select referencef_.id, referencef_.company as company2_8_, referencef_.file_name as file_nam3_8_, referencef_.publish_date as publish_4_8_ from t_referencefile referencef_ where referencef_.id=?
 Insert 0: insert into t_referencefile (company, file_name, publish_date, id) values (?, ?, ?, ?)
 Update 0: update t_referencefile set company=?, file_name=?, publish_date=? where id=?
 Delete 0: delete from t_referencefile where id=?
 Identity insert: insert into t_referencefile (company, file_name, publish_date) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@415304c7]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [NONE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76abae2]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [READ]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12b5efa6]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2148ea64]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE_NOWAIT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a5bd2a0]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE_SKIPLOCKED]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30d7847b]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [FORCE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25ab14aa]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_READ]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d85b158]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_WRITE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39199493]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c879cc]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [OPTIMISTIC]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17cfc13c]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [OPTIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ReferenceFile: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ReferenceFile: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static SQL for entity: sw.entity.Project
 Version select: select id from t_project where id =?
 Snapshot select: select project_.id, project_.create_date as create_d2_6_, project_.description as descript3_6_, project_.name as name4_6_, project_.user_id as user_id5_6_ from t_project project_ where project_.id=?
 Insert 0: insert into t_project (create_date, description, name, user_id, id) values (?, ?, ?, ?, ?)
 Update 0: update t_project set create_date=?, description=?, name=?, user_id=? where id=?
 Delete 0: delete from t_project where id=?
 Identity insert: insert into t_project (create_date, description, name, user_id) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c3abeed]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cac56d0]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Project [NONE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47a3721f]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51975ca9]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Project [READ]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48dd0be0]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@506effb4]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51da78f2]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@767bc74c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE_NOWAIT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@514f0568]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65c72ae8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE_SKIPLOCKED]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d2ec0bb]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30b544c6]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [FORCE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c79a852]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cb0ced0]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_READ]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36392cf4]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ce287b5]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_WRITE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@268e0eb7]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57484b83]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f8fb1f0]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eeab112]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [OPTIMISTIC]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bebe11f]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@175d296d]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [OPTIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Project: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Project: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static SQL for entity: sw.entity.AssetType
 Version select: select id from t_asset_type where id =?
 Snapshot select: select assettype_.id, assettype_.name as name2_3_ from t_asset_type assettype_ where assettype_.id=?
 Insert 0: insert into t_asset_type (name, id) values (?, ?)
 Update 0: update t_asset_type set name=? where id=?
 Delete 0: delete from t_asset_type where id=?
 Identity insert: insert into t_asset_type (name) values (?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cd468b5]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [NONE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f60a54f]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [READ]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e46bccb]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30e84622]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE_NOWAIT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d21dbd7]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE_SKIPLOCKED]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43b97a6e]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [FORCE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@523418aa]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_READ]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c7b5490]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_WRITE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b44e0d4]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_FORCE_INCREMENT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10ca345b]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [OPTIMISTIC]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f10ef91]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [OPTIMISTIC_FORCE_INCREMENT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.AssetType: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.AssetType: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static SQL for entity: sw.entity.Action
 Version select: select id from t_action where id =?
 Snapshot select: select action_.id, action_.menu_id as menu_id4_0_, action_.name as name2_0_, action_.url as url3_0_ from t_action action_ where action_.id=?
 Insert 0: insert into t_action (menu_id, name, url, id) values (?, ?, ?, ?)
 Update 0: update t_action set menu_id=?, name=?, url=? where id=?
 Delete 0: delete from t_action where id=?
 Identity insert: insert into t_action (menu_id, name, url) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11ebf274]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d1e9f53]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

Static select for entity sw.entity.Action [NONE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_5_1_, menu1_.href as href2_5_1_, menu1_.name as name3_5_1_, menu1_.pid as pid4_5_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@404f3d66]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18e9fa3b]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

Static select for entity sw.entity.Action [READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_5_1_, menu1_.href as href2_5_1_, menu1_.name as name3_5_1_, menu1_.pid as pid4_5_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67ff6860]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@314f695e]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79b329c2]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa553a]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_NOWAIT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a65d9e8]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@500617fe]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_SKIPLOCKED]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d78b41]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ca9821a]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [FORCE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cf0dd96]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79b2f610]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@394b026e]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fc4558f]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_WRITE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71a83211]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28319802]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15e4d8a6]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dd4aae2]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1981c4d2]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d7df29f]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static SQL for entity: sw.entity.ActionGroup
 Version select: select id from t_actiongroup where id =?
 Snapshot select: select actiongrou_.id, actiongrou_.action_id as action_i3_1_, actiongrou_.create_date as create_d2_1_, actiongrou_.group_id as group_id4_1_, actiongrou_.menu_id as menu_id5_1_, actiongrou_.user_id as user_id6_1_ from t_actiongroup actiongrou_ where actiongrou_.id=?
 Insert 0: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update t_actiongroup set action_id=?, create_date=?, group_id=?, menu_id=?, user_id=? where id=?
 Delete 0: delete from t_actiongroup where id=?
 Identity insert: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id) values (?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75e6d668]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50022fda]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@117f0fec]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31da14b]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@763328b1]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bf8c5b5]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79d0fac7]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_10_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_5_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.ActionGroup [NONE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_5_2_, menu2_.href as href2_5_2_, menu2_.name as name3_5_2_, menu2_.pid as pid4_5_2_, group3_.id as id1_4_3_, group3_.create_date as create_d2_4_3_, group3_.info as info3_4_3_, group3_.user_id as user_id5_4_3_, group3_.name as name4_4_3_, user4_.id as id1_10_4_, user4_.email as email2_10_4_, user4_.name as name3_10_4_, user4_.password as password4_10_4_, user4_.tel as tel5_10_4_, menu5_.id as id1_5_5_, menu5_.href as href2_5_5_, menu5_.name as name3_5_5_, menu5_.pid as pid4_5_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58c8bcb7]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79d69c17]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21452fab]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1922ba2c]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57fafda]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10d45a10]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a1df1c5]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_10_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_5_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.ActionGroup [READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_5_2_, menu2_.href as href2_5_2_, menu2_.name as name3_5_2_, menu2_.pid as pid4_5_2_, group3_.id as id1_4_3_, group3_.create_date as create_d2_4_3_, group3_.info as info3_4_3_, group3_.user_id as user_id5_4_3_, group3_.name as name4_4_3_, user4_.id as id1_10_4_, user4_.email as email2_10_4_, user4_.name as name3_10_4_, user4_.password as password4_10_4_, user4_.tel as tel5_10_4_, menu5_.id as id1_5_5_, menu5_.href as href2_5_5_, menu5_.name as name3_5_5_, menu5_.pid as pid4_5_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f44e7f9]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c193b6d]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10b39c29]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5880cae9]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0f98b3]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f5818cc]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d0fdac1]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b3309d3]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6472e801]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43bdd118]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_NOWAIT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70d7d27c]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2048f8a4]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dd0d8a4]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43dabf50]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59c8af0f]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_SKIPLOCKED]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e22e14a]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@230a121a]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f2661a3]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16a7ffbc]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43108431]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [FORCE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3079c48b]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15add276]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52dbfdfe]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c7826b2]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@646c9f03]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fa9df9a]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f301cca]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f2410a8]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e2045d9]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b09f984]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_WRITE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44a07463]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@377c0d30]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@434d0782]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48960e4]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b50239f]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c12a648]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58090b12]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@322f9757]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b2657bc]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a0589a8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a445a61]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d2dc5c9]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b83530d]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23ec9d4e]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48c2bf11]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Instantiated session factory
HHH000228: Running hbm2ddl schema update
No alter strings for table : t_action
No alter strings for table : t_actiongroup
No alter strings for table : t_asset
No alter strings for table : t_asset_type
No alter strings for table : t_group
No alter strings for table : t_menu
No alter strings for table : t_project
No alter strings for table : t_project_refence
No alter strings for table : t_referencefile
No alter strings for table : t_threat
No alter strings for table : t_user
No alter strings for table : t_usergroup
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@361254ab
Registering SessionFactory: 11016625-dd43-4620-bd62-2d0465a0f8a1 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@8aecb55
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4fed91f0: startup date [Tue Nov 21 15:09:55 CST 2017]; root of context hierarchy
Mapped "{[/pro/projectAdd],methods=[POST]}" onto public java.lang.String sw.controller.ProjectController.projectAdd(sw.entity.Project,org.springframework.ui.Model)
Mapped "{[/pro/updateProject],methods=[POST]}" onto public java.lang.String sw.controller.ProjectController.updateProject(sw.entity.Project)
Mapped "{[/pro/menu]}" onto public sw.model.MMenu sw.controller.ProjectController.findByroot()
Mapped "{[/pro/findAllGroups/{projectId}],methods=[GET]}" onto public void sw.controller.ProjectController.findAllGroups(int,org.springframework.ui.Model)
Mapped "{[/pro/projectList],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectPage(org.springframework.ui.Model)
Mapped "{[/pro/delProject/{id}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.delCollege(int)
Mapped "{[/pro/projectMain/{projectId}/{groupIds}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectMain(int,java.lang.String,org.springframework.ui.Model)
Mapped "{[/pro/projectForm/{id}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectForm(int,org.springframework.ui.Model)
Mapped "{[/pro/projectForm],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectFormView(org.springframework.ui.Model)
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model,javax.servlet.http.HttpSession)
Mapped "{[/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage(org.springframework.ui.Model)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession) throws java.io.IOException
Mapped "{[/logout],methods=[GET]}" onto public java.lang.String sw.controller.UserController.logout(javax.servlet.http.HttpSession)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 12.239 seconds (JVM running for 12.86)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7fd55557
HHH000397: Using ASTQueryTranslatorFactory
parse() - HQL: select generatedAlias0 from sw.entity.Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'sw'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Project'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'user'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : sw.entity.Project (generatedAlias0) -> project0_
Resolved : generatedAlias0 -> project0_.id
getDataType() : user -> org.hibernate.type.ManyToOneType(sw.entity.User)
dereferenceEntityJoin() : generating join for user in sw.entity.Project (generatedAlias1) parent = [ {null} ]
FromClause{level=1} : sw.entity.User (generatedAlias1) -> user1_
addJoinByPathMap() : generatedAlias0.user -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=t_user,tableAlias=user1_,origin=t_project project0_,columns={project0_.user_id ,className=sw.entity.User}}
Resolved : generatedAlias0.user -> project0_.user_id
createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 't_user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=sw.entity.Project.user,tableName=t_user,tableAlias=user1_,origin=t_project project0_,columns={project0_.user_id ,className=sw.entity.User}}

Resolved : generatedAlias0 -> project0_.id
Resolved : generatedAlias1 -> user1_.id
getDataType() : id -> org.hibernate.type.IntegerType@275d2f7b
Resolved : generatedAlias1.id -> user1_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} project0_.id ) ( FromClause{level=1} ( t_project project0_ t_user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
Using FROM fragment [t_project project0_]
Using FROM fragment [left outer join t_user user1_ on project0_.user_id=user1_.id]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (t_user,t_project)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'project0_.id as id1_6_' {alias=generatedAlias0, className=sw.entity.Project, tableAlias=project0_}
    |  \-[SQL_TOKEN] SqlFragment: 'project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[project0_, user1_], fromElementsByPath=[generatedAlias0.user], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 't_project project0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=t_project,tableAlias=project0_,origin=null,columns={,className=sw.entity.Project}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join t_user user1_ on project0_.user_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=sw.entity.Project.user,tableName=t_user,tableAlias=user1_,origin=t_project project0_,columns={project0_.user_id ,className=sw.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=sw.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=sw.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.IntegerType@275d2f7b}

throwQueryException() : no errors
HQL: select generatedAlias0 from sw.entity.Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
SQL: select project0_.id as id1_6_, project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
throwQueryException() : no errors
select project0_.id as id1_6_, project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
parse() - HQL: select generatedAlias0 from sw.entity.UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'sw'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'UserGroup'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'user'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : sw.entity.UserGroup (generatedAlias0) -> usergroup0_
Resolved : generatedAlias0 -> usergroup0_.id
getDataType() : user -> org.hibernate.type.ManyToOneType(sw.entity.User)
dereferenceEntityJoin() : generating join for user in sw.entity.UserGroup (generatedAlias1) parent = [ {null} ]
FromClause{level=1} : sw.entity.User (generatedAlias1) -> user1_
addJoinByPathMap() : generatedAlias0.user -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=t_user,tableAlias=user1_,origin=t_usergroup usergroup0_,columns={usergroup0_.user_id ,className=sw.entity.User}}
Resolved : generatedAlias0.user -> usergroup0_.user_id
createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 't_user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=sw.entity.UserGroup.user,tableName=t_user,tableAlias=user1_,origin=t_usergroup usergroup0_,columns={usergroup0_.user_id ,className=sw.entity.User}}

Resolved : generatedAlias0 -> usergroup0_.id
Resolved : generatedAlias1 -> user1_.id
getDataType() : id -> org.hibernate.type.IntegerType@275d2f7b
Resolved : generatedAlias1.id -> user1_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} usergroup0_.id ) ( FromClause{level=1} ( t_usergroup usergroup0_ t_user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
Using FROM fragment [t_usergroup usergroup0_]
Using FROM fragment [left outer join t_user user1_ on usergroup0_.user_id=user1_.id]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (t_user,t_usergroup)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'usergroup0_.id as id1_11_' {alias=generatedAlias0, className=sw.entity.UserGroup, tableAlias=usergroup0_}
    |  \-[SQL_TOKEN] SqlFragment: 'usergroup0_.create_date as create_d2_11_, usergroup0_.group_id as group_id4_11_, usergroup0_.is_headman as is_headm3_11_, usergroup0_.modify_userid as modify_u5_11_, usergroup0_.project_id as project_6_11_, usergroup0_.user_id as user_id7_11_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[user1_, usergroup0_], fromElementsByPath=[generatedAlias0.user], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 't_usergroup usergroup0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=t_usergroup,tableAlias=usergroup0_,origin=null,columns={,className=sw.entity.UserGroup}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join t_user user1_ on usergroup0_.user_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=sw.entity.UserGroup.user,tableName=t_user,tableAlias=user1_,origin=t_usergroup usergroup0_,columns={usergroup0_.user_id ,className=sw.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=sw.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=sw.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.IntegerType@275d2f7b}

throwQueryException() : no errors
HQL: select generatedAlias0 from sw.entity.UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
SQL: select usergroup0_.id as id1_11_, usergroup0_.create_date as create_d2_11_, usergroup0_.group_id as group_id4_11_, usergroup0_.is_headman as is_headm3_11_, usergroup0_.modify_userid as modify_u5_11_, usergroup0_.project_id as project_6_11_, usergroup0_.user_id as user_id7_11_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
throwQueryException() : no errors
select usergroup0_.id as id1_11_, usergroup0_.create_date as create_d2_11_, usergroup0_.group_id as group_id4_11_, usergroup0_.is_headman as is_headm3_11_, usergroup0_.modify_userid as modify_u5_11_, usergroup0_.project_id as project_6_11_, usergroup0_.user_id as user_id7_11_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
begin
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#3]
Done materializing entity [sw.entity.Project#3]
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#3
committing
begin
Rendered criteria query -> select generatedAlias0 from Menu as generatedAlias0
parse() - HQL: select generatedAlias0 from sw.entity.Menu as generatedAlias0
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'sw'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Menu'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : sw.entity.Menu (generatedAlias0) -> menu0_
Resolved : generatedAlias0 -> menu0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} menu0_.id ) ( FromClause{level=1} t_menu menu0_ ) )
Using FROM fragment [t_menu menu0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (t_menu)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'menu0_.id as id1_5_' {alias=generatedAlias0, className=sw.entity.Menu, tableAlias=menu0_}
    |  \-[SQL_TOKEN] SqlFragment: 'menu0_.href as href2_5_, menu0_.name as name3_5_, menu0_.pid as pid4_5_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[menu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 't_menu menu0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=t_menu,tableAlias=menu0_,origin=null,columns={,className=sw.entity.Menu}}

throwQueryException() : no errors
HQL: select generatedAlias0 from sw.entity.Menu as generatedAlias0
SQL: select menu0_.id as id1_5_, menu0_.href as href2_5_, menu0_.name as name3_5_, menu0_.pid as pid4_5_ from t_menu menu0_
throwQueryException() : no errors
select menu0_.id as id1_5_, menu0_.href as href2_5_, menu0_.name as name3_5_, menu0_.pid as pid4_5_ from t_menu menu0_
Result set row: 0
Result row: EntityKey[sw.entity.Menu#1]
Result set row: 1
Result row: EntityKey[sw.entity.Menu#2]
Result set row: 2
Result row: EntityKey[sw.entity.Menu#3]
Result set row: 3
Result row: EntityKey[sw.entity.Menu#4]
Result set row: 4
Result row: EntityKey[sw.entity.Menu#5]
Result set row: 5
Result row: EntityKey[sw.entity.Menu#6]
Result set row: 6
Result row: EntityKey[sw.entity.Menu#7]
Result set row: 7
Result row: EntityKey[sw.entity.Menu#8]
Resolving associations for [sw.entity.Menu#1]
Done materializing entity [sw.entity.Menu#1]
Resolving associations for [sw.entity.Menu#2]
Done materializing entity [sw.entity.Menu#2]
Resolving associations for [sw.entity.Menu#3]
Done materializing entity [sw.entity.Menu#3]
Resolving associations for [sw.entity.Menu#4]
Done materializing entity [sw.entity.Menu#4]
Resolving associations for [sw.entity.Menu#5]
Done materializing entity [sw.entity.Menu#5]
Resolving associations for [sw.entity.Menu#6]
Done materializing entity [sw.entity.Menu#6]
Resolving associations for [sw.entity.Menu#7]
Done materializing entity [sw.entity.Menu#7]
Resolving associations for [sw.entity.Menu#8]
Done materializing entity [sw.entity.Menu#8]
committing
begin
committing
begin
Rendered criteria query -> select generatedAlias0 from Menu as generatedAlias0
select menu0_.id as id1_5_, menu0_.href as href2_5_, menu0_.name as name3_5_, menu0_.pid as pid4_5_ from t_menu menu0_
Result set row: 0
Result row: EntityKey[sw.entity.Menu#1]
Result set row: 1
Result row: EntityKey[sw.entity.Menu#2]
Result set row: 2
Result row: EntityKey[sw.entity.Menu#3]
Result set row: 3
Result row: EntityKey[sw.entity.Menu#4]
Result set row: 4
Result row: EntityKey[sw.entity.Menu#5]
Result set row: 5
Result row: EntityKey[sw.entity.Menu#6]
Result set row: 6
Result row: EntityKey[sw.entity.Menu#7]
Result set row: 7
Result row: EntityKey[sw.entity.Menu#8]
committing
begin
committing
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_6_, project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_11_, usergroup0_.create_date as create_d2_11_, usergroup0_.group_id as group_id4_11_, usergroup0_.is_headman as is_headm3_11_, usergroup0_.modify_userid as modify_u5_11_, usergroup0_.project_id as project_6_11_, usergroup0_.user_id as user_id7_11_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
begin
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#3]
Done materializing entity [sw.entity.Project#3]
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#3
committing
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_6_, project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_11_, usergroup0_.create_date as create_d2_11_, usergroup0_.group_id as group_id4_11_, usergroup0_.is_headman as is_headm3_11_, usergroup0_.modify_userid as modify_u5_11_, usergroup0_.project_id as project_6_11_, usergroup0_.user_id as user_id7_11_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_6_, project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_11_, usergroup0_.create_date as create_d2_11_, usergroup0_.group_id as group_id4_11_, usergroup0_.is_headman as is_headm3_11_, usergroup0_.modify_userid as modify_u5_11_, usergroup0_.project_id as project_6_11_, usergroup0_.user_id as user_id7_11_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
begin
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#3]
Done materializing entity [sw.entity.Project#3]
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#3
committing
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_6_, project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_11_, usergroup0_.create_date as create_d2_11_, usergroup0_.group_id as group_id4_11_, usergroup0_.is_headman as is_headm3_11_, usergroup0_.modify_userid as modify_u5_11_, usergroup0_.project_id as project_6_11_, usergroup0_.user_id as user_id7_11_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_6_, project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_11_, usergroup0_.create_date as create_d2_11_, usergroup0_.group_id as group_id4_11_, usergroup0_.is_headman as is_headm3_11_, usergroup0_.modify_userid as modify_u5_11_, usergroup0_.project_id as project_6_11_, usergroup0_.user_id as user_id7_11_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_6_, project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_11_, usergroup0_.create_date as create_d2_11_, usergroup0_.group_id as group_id4_11_, usergroup0_.is_headman as is_headm3_11_, usergroup0_.modify_userid as modify_u5_11_, usergroup0_.project_id as project_6_11_, usergroup0_.user_id as user_id7_11_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_6_, project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_11_, usergroup0_.create_date as create_d2_11_, usergroup0_.group_id as group_id4_11_, usergroup0_.is_headman as is_headm3_11_, usergroup0_.modify_userid as modify_u5_11_, usergroup0_.project_id as project_6_11_, usergroup0_.user_id as user_id7_11_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
begin
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#3]
Done materializing entity [sw.entity.Project#3]
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#3
committing
begin
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#3]
Done materializing entity [sw.entity.Project#3]
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#3
committing
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_6_, project0_.create_date as create_d2_6_, project0_.description as descript3_6_, project0_.name as name4_6_, project0_.user_id as user_id5_6_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_11_, usergroup0_.create_date as create_d2_11_, usergroup0_.group_id as group_id4_11_, usergroup0_.is_headman as is_headm3_11_, usergroup0_.modify_userid as modify_u5_11_, usergroup0_.project_id as project_6_11_, usergroup0_.user_id as user_id7_11_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
begin
select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#3]
Done materializing entity [sw.entity.Project#3]
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#3
committing
begin
Rendered criteria query -> select generatedAlias0 from Menu as generatedAlias0
select menu0_.id as id1_5_, menu0_.href as href2_5_, menu0_.name as name3_5_, menu0_.pid as pid4_5_ from t_menu menu0_
Result set row: 0
Result row: EntityKey[sw.entity.Menu#1]
Result set row: 1
Result row: EntityKey[sw.entity.Menu#2]
Result set row: 2
Result row: EntityKey[sw.entity.Menu#3]
Result set row: 3
Result row: EntityKey[sw.entity.Menu#4]
Result set row: 4
Result row: EntityKey[sw.entity.Menu#5]
Result set row: 5
Result row: EntityKey[sw.entity.Menu#6]
Result set row: 6
Result row: EntityKey[sw.entity.Menu#7]
Result set row: 7
Result row: EntityKey[sw.entity.Menu#8]
Resolving associations for [sw.entity.Menu#1]
Done materializing entity [sw.entity.Menu#1]
Resolving associations for [sw.entity.Menu#2]
Done materializing entity [sw.entity.Menu#2]
Resolving associations for [sw.entity.Menu#3]
Done materializing entity [sw.entity.Menu#3]
Resolving associations for [sw.entity.Menu#4]
Done materializing entity [sw.entity.Menu#4]
Resolving associations for [sw.entity.Menu#5]
Done materializing entity [sw.entity.Menu#5]
Resolving associations for [sw.entity.Menu#6]
Done materializing entity [sw.entity.Menu#6]
Resolving associations for [sw.entity.Menu#7]
Done materializing entity [sw.entity.Menu#7]
Resolving associations for [sw.entity.Menu#8]
Done materializing entity [sw.entity.Menu#8]
committing
begin
committing
begin
Rendered criteria query -> select generatedAlias0 from Menu as generatedAlias0
select menu0_.id as id1_5_, menu0_.href as href2_5_, menu0_.name as name3_5_, menu0_.pid as pid4_5_ from t_menu menu0_
Result set row: 0
Result row: EntityKey[sw.entity.Menu#1]
Result set row: 1
Result row: EntityKey[sw.entity.Menu#2]
Result set row: 2
Result row: EntityKey[sw.entity.Menu#3]
Result set row: 3
Result row: EntityKey[sw.entity.Menu#4]
Result set row: 4
Result row: EntityKey[sw.entity.Menu#5]
Result set row: 5
Result row: EntityKey[sw.entity.Menu#6]
Result set row: 6
Result row: EntityKey[sw.entity.Menu#7]
Result set row: 7
Result row: EntityKey[sw.entity.Menu#8]
committing
begin
committing
begin
Rendered criteria query -> select generatedAlias0 from Menu as generatedAlias0
select menu0_.id as id1_5_, menu0_.href as href2_5_, menu0_.name as name3_5_, menu0_.pid as pid4_5_ from t_menu menu0_
Result set row: 0
Result row: EntityKey[sw.entity.Menu#1]
Result set row: 1
Result row: EntityKey[sw.entity.Menu#2]
Result set row: 2
Result row: EntityKey[sw.entity.Menu#3]
Result set row: 3
Result row: EntityKey[sw.entity.Menu#4]
Result set row: 4
Result row: EntityKey[sw.entity.Menu#5]
Result set row: 5
Result row: EntityKey[sw.entity.Menu#6]
Result set row: 6
Result row: EntityKey[sw.entity.Menu#7]
Result set row: 7
Result row: EntityKey[sw.entity.Menu#8]
Resolving associations for [sw.entity.Menu#1]
Done materializing entity [sw.entity.Menu#1]
Resolving associations for [sw.entity.Menu#2]
Done materializing entity [sw.entity.Menu#2]
Resolving associations for [sw.entity.Menu#3]
Done materializing entity [sw.entity.Menu#3]
Resolving associations for [sw.entity.Menu#4]
Done materializing entity [sw.entity.Menu#4]
Resolving associations for [sw.entity.Menu#5]
Done materializing entity [sw.entity.Menu#5]
Resolving associations for [sw.entity.Menu#6]
Done materializing entity [sw.entity.Menu#6]
Resolving associations for [sw.entity.Menu#7]
Done materializing entity [sw.entity.Menu#7]
Resolving associations for [sw.entity.Menu#8]
Done materializing entity [sw.entity.Menu#8]
committing
begin
committing
begin
Rendered criteria query -> select generatedAlias0 from Menu as generatedAlias0
select menu0_.id as id1_5_, menu0_.href as href2_5_, menu0_.name as name3_5_, menu0_.pid as pid4_5_ from t_menu menu0_
Result set row: 0
Result row: EntityKey[sw.entity.Menu#1]
Result set row: 1
Result row: EntityKey[sw.entity.Menu#2]
Result set row: 2
Result row: EntityKey[sw.entity.Menu#3]
Result set row: 3
Result row: EntityKey[sw.entity.Menu#4]
Result set row: 4
Result row: EntityKey[sw.entity.Menu#5]
Result set row: 5
Result row: EntityKey[sw.entity.Menu#6]
Result set row: 6
Result row: EntityKey[sw.entity.Menu#7]
Result set row: 7
Result row: EntityKey[sw.entity.Menu#8]
committing
begin
committing
begin
Rendered criteria query -> select generatedAlias0 from Menu as generatedAlias0
select menu0_.id as id1_5_, menu0_.href as href2_5_, menu0_.name as name3_5_, menu0_.pid as pid4_5_ from t_menu menu0_
Result set row: 0
Result row: EntityKey[sw.entity.Menu#1]
Result set row: 1
Result row: EntityKey[sw.entity.Menu#2]
Result set row: 2
Result row: EntityKey[sw.entity.Menu#3]
Result set row: 3
Result row: EntityKey[sw.entity.Menu#4]
Result set row: 4
Result row: EntityKey[sw.entity.Menu#5]
Result set row: 5
Result row: EntityKey[sw.entity.Menu#6]
Result set row: 6
Result row: EntityKey[sw.entity.Menu#7]
Result set row: 7
Result row: EntityKey[sw.entity.Menu#8]
Resolving associations for [sw.entity.Menu#1]
Done materializing entity [sw.entity.Menu#1]
Resolving associations for [sw.entity.Menu#2]
Done materializing entity [sw.entity.Menu#2]
Resolving associations for [sw.entity.Menu#3]
Done materializing entity [sw.entity.Menu#3]
Resolving associations for [sw.entity.Menu#4]
Done materializing entity [sw.entity.Menu#4]
Resolving associations for [sw.entity.Menu#5]
Done materializing entity [sw.entity.Menu#5]
Resolving associations for [sw.entity.Menu#6]
Done materializing entity [sw.entity.Menu#6]
Resolving associations for [sw.entity.Menu#7]
Done materializing entity [sw.entity.Menu#7]
Resolving associations for [sw.entity.Menu#8]
Done materializing entity [sw.entity.Menu#8]
committing
begin
committing
begin
Rendered criteria query -> select generatedAlias0 from Menu as generatedAlias0
select menu0_.id as id1_5_, menu0_.href as href2_5_, menu0_.name as name3_5_, menu0_.pid as pid4_5_ from t_menu menu0_
Result set row: 0
Result row: EntityKey[sw.entity.Menu#1]
Result set row: 1
Result row: EntityKey[sw.entity.Menu#2]
Result set row: 2
Result row: EntityKey[sw.entity.Menu#3]
Result set row: 3
Result row: EntityKey[sw.entity.Menu#4]
Result set row: 4
Result row: EntityKey[sw.entity.Menu#5]
Result set row: 5
Result row: EntityKey[sw.entity.Menu#6]
Result set row: 6
Result row: EntityKey[sw.entity.Menu#7]
Result set row: 7
Result row: EntityKey[sw.entity.Menu#8]
committing
begin
committing
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4fed91f0: startup date [Tue Nov 21 15:09:55 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Starting Application on LuoRong with PID 1076 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5da421ff: startup date [Tue Nov 21 15:54:47 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d3ccd128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 955 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3f88d3cd
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@74715d88{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.Action
		sw.entity.ActionGroup
		sw.entity.Asset
		sw.entity.AssetType
		sw.entity.Group
		sw.entity.Menu
		sw.entity.Project
		sw.entity.ProRef
		sw.entity.ReferenceFile
		sw.entity.Threat
		sw.entity.User
		sw.entity.UserGroup]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@6a523a53
Adding type registration boolean -> org.hibernate.type.BooleanType@6a523a53
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6a523a53
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@50536716
Adding type registration true_false -> org.hibernate.type.TrueFalseType@23493a29
Adding type registration yes_no -> org.hibernate.type.YesNoType@4840d9b5
Adding type registration byte -> org.hibernate.type.ByteType@4cfc4550
Adding type registration byte -> org.hibernate.type.ByteType@4cfc4550
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4cfc4550
Adding type registration character -> org.hibernate.type.CharacterType@670d75f6
Adding type registration char -> org.hibernate.type.CharacterType@670d75f6
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@670d75f6
Adding type registration short -> org.hibernate.type.ShortType@277dfa1b
Adding type registration short -> org.hibernate.type.ShortType@277dfa1b
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@277dfa1b
Adding type registration integer -> org.hibernate.type.IntegerType@275d2f7b
Adding type registration int -> org.hibernate.type.IntegerType@275d2f7b
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@275d2f7b
Adding type registration long -> org.hibernate.type.LongType@46df23ee
Adding type registration long -> org.hibernate.type.LongType@46df23ee
Adding type registration java.lang.Long -> org.hibernate.type.LongType@46df23ee
Adding type registration float -> org.hibernate.type.FloatType@1f147da8
Adding type registration float -> org.hibernate.type.FloatType@1f147da8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1f147da8
Adding type registration double -> org.hibernate.type.DoubleType@4a944ace
Adding type registration double -> org.hibernate.type.DoubleType@4a944ace
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4a944ace
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4d737d2e
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4d737d2e
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@34842b22
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@34842b22
Adding type registration string -> org.hibernate.type.StringType@74e01472
Adding type registration java.lang.String -> org.hibernate.type.StringType@74e01472
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@22bb8064
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6dc85f47
Adding type registration url -> org.hibernate.type.UrlType@b96fec
Adding type registration java.net.URL -> org.hibernate.type.UrlType@b96fec
Adding type registration date -> org.hibernate.type.DateType@4df78ef4
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4df78ef4
Adding type registration time -> org.hibernate.type.TimeType@171d4f0a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@171d4f0a
Adding type registration timestamp -> org.hibernate.type.TimestampType@377d0097
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@377d0097
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@377d0097
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@365d2598
Adding type registration calendar -> org.hibernate.type.CalendarType@a591744
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@a591744
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@a591744
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@34957ccb
Adding type registration locale -> org.hibernate.type.LocaleType@1499a6ed
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1499a6ed
Adding type registration currency -> org.hibernate.type.CurrencyType@7f9183a
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7f9183a
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2fcb1f59
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2fcb1f59
Adding type registration class -> org.hibernate.type.ClassType@d3908a0
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@d3908a0
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@67c8ab23
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@67c8ab23
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2807129b
Adding type registration binary -> org.hibernate.type.BinaryType@399ea956
Adding type registration byte[] -> org.hibernate.type.BinaryType@399ea956
Adding type registration [B -> org.hibernate.type.BinaryType@399ea956
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6ae2529d
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6ae2529d
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6ae2529d
Adding type registration row_version -> org.hibernate.type.RowVersionType@4d24b361
Adding type registration image -> org.hibernate.type.ImageType@26230acd
Adding type registration characters -> org.hibernate.type.CharArrayType@78ba6a27
Adding type registration char[] -> org.hibernate.type.CharArrayType@78ba6a27
Adding type registration [C -> org.hibernate.type.CharArrayType@78ba6a27
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17b55ea4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17b55ea4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17b55ea4
Adding type registration text -> org.hibernate.type.TextType@6912eb62
Adding type registration ntext -> org.hibernate.type.NTextType@29b866d6
Adding type registration blob -> org.hibernate.type.BlobType@5b87eeb2
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5b87eeb2
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@182c555b
Adding type registration clob -> org.hibernate.type.ClobType@28a2f658
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28a2f658
Adding type registration nclob -> org.hibernate.type.NClobType@6abf3f44
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6abf3f44
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@34fabc1b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@76f468a5
Adding type registration serializable -> org.hibernate.type.SerializableType@23791936
Adding type registration object -> org.hibernate.type.ObjectType@671783cd
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@671783cd
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2ad05d1a
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1799e28
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5bb29c6c
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@8cdee86
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@205d4a08
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6d9818f5
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2206b8d6
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4558cbce
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.Threat
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Threat
Bind entity sw.entity.Threat on table t_threat
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='asset_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=asset, insertable=true, updatable=true, unique=false}
Building property asset
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=frequency, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property frequency with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:frequency]
building SimpleValue for frequency
Building property frequency
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=threat_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property threatName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:threatName]
building SimpleValue for threatName
Building property threatName
Binding entity from annotated class: sw.entity.Group
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Group
Bind entity sw.entity.Group on table t_group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=info, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property info with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:info]
building SimpleValue for info
Building property info
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Asset
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Asset
Bind entity sw.entity.Asset on table t_asset
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='ass_typ_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=asset_type, insertable=true, updatable=true, unique=false}
Building property assetType
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=backup_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property backupForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:backupForm]
building SimpleValue for backupForm
Building property backupForm
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=depart, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property depart with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:depart]
building SimpleValue for depart
Building property depart
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=importance, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property importance with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:importance]
building SimpleValue for importance
Building property importance
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=principle, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property principle with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:principle]
building SimpleValue for principle
Building property principle
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=remark, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property remark with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:remark]
building SimpleValue for remark
Building property remark
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=save_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property saveForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:saveForm]
building SimpleValue for saveForm
Building property saveForm
Binding entity from annotated class: sw.entity.ProRef
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ProRef
Bind entity sw.entity.ProRef on table t_project_refence
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ProRef:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='ref_pro_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=reference_file, insertable=true, updatable=true, unique=false}
Building property referenceFile
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Binding entity from annotated class: sw.entity.UserGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name UserGroup
Bind entity sw.entity.UserGroup on table t_usergroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=is_headman, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property isHeadman with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:isHeadman]
building SimpleValue for isHeadman
Building property isHeadman
Binding column: Ejb3JoinColumn{logicalColumnName='modify_userid', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.Menu
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Menu
Bind entity sw.entity.Menu on table t_menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=href, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property href with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:href]
building SimpleValue for href
Building property href
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=pid, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property pid with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:pid]
building SimpleValue for pid
Building property pid
Binding entity from annotated class: sw.entity.ReferenceFile
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ReferenceFile
Bind entity sw.entity.ReferenceFile on table t_referencefile
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=company, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property company with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:company]
building SimpleValue for company
Building property company
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=file_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property fileName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:fileName]
building SimpleValue for fileName
Building property fileName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=publish_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property publishDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:publishDate]
building SimpleValue for publishDate
Building property publishDate
Binding entity from annotated class: sw.entity.Project
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Project
Bind entity sw.entity.Project on table t_project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:name]
building SimpleValue for name
Building property name
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.AssetType
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AssetType
Bind entity sw.entity.AssetType on table t_asset_type
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Action
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Action
Bind entity sw.entity.Action on table t_action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=url, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property url with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:url]
building SimpleValue for url
Building property url
Binding entity from annotated class: sw.entity.ActionGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ActionGroup
Bind entity sw.entity.ActionGroup on table t_actiongroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='action_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=action, insertable=true, updatable=true, unique=false}
Building property action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Starting fillSimpleValue for id
Starting fillSimpleValue for frequency
Starting fillSimpleValue for threatName
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for info
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for backupForm
Starting fillSimpleValue for depart
Starting fillSimpleValue for description
Starting fillSimpleValue for importance
Starting fillSimpleValue for name
Starting fillSimpleValue for principle
Starting fillSimpleValue for remark
Starting fillSimpleValue for saveForm
Starting fillSimpleValue for id
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for isHeadman
Starting fillSimpleValue for id
Starting fillSimpleValue for href
Starting fillSimpleValue for name
Starting fillSimpleValue for pid
Starting fillSimpleValue for id
Starting fillSimpleValue for company
Starting fillSimpleValue for fileName
Starting fillSimpleValue for publishDate
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for description
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for url
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Forcing column [id] to be non-null as it is part of the primary key for table [t_threat]
Forcing column [id] to be non-null as it is part of the primary key for table [t_group]
Forcing column [id] to be non-null as it is part of the primary key for table [t_asset]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project_refence]
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Forcing column [id] to be non-null as it is part of the primary key for table [t_usergroup]
Forcing column [id] to be non-null as it is part of the primary key for table [t_menu]
Forcing column [id] to be non-null as it is part of the primary key for table [t_referencefile]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project]
Forcing column [id] to be non-null as it is part of the primary key for table [t_asset_type]
Forcing column [id] to be non-null as it is part of the primary key for table [t_action]
Forcing column [id] to be non-null as it is part of the primary key for table [t_actiongroup]
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.AssetType
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.ReferenceFile
Resolving reference to class: sw.entity.Asset
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.AssetType
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.ReferenceFile
Resolving reference to class: sw.entity.Asset
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@49704c00
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.8488872014840973578.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=1076, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@a414e8f, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@74715d88{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar;C:\Users\LR\.m2\repository\commons-beanutils\commons-beanutils\1.9.3\commons-beanutils-1.9.3.jar;C:\Users\LR\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\LR\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi\3.14\poi-3.14.jar;C:\Users\LR\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi-ooxml\3.14\poi-ooxml-3.14.jar;C:\Users\LR\.m2\repository\com\github\virtuald\curvesapi\1.03\curvesapi-1.03.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi-ooxml-schemas\3.14\poi-ooxml-schemas-3.14.jar;C:\Users\LR\.m2\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;C:\Users\LR\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.8488872014840973578.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5b9032c9, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.Threat] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Threat
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@3c60259e, payload=[Ljava.lang.Class;@1c5331b6}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@5928ba16, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@5df42642}, constraintType=GENERIC}.
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@7203b0f7, payload=[Ljava.lang.Class;@3d237366}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@242f1a70, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@403d475c}, constraintType=GENERIC}.
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.Threat] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Threat
Not known whether passed class name [sw.entity.Threat] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Threat
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Static SQL for entity: sw.entity.Threat
 Version select: select id from t_threat where id =?
 Snapshot select: select threat_.id, threat_.asset_id as asset_id4_9_, threat_.frequency as frequenc2_9_, threat_.threat_name as threat_n3_9_ from t_threat threat_ where threat_.id=?
 Insert 0: insert into t_threat (asset_id, frequency, threat_name, id) values (?, ?, ?, ?)
 Update 0: update t_threat set asset_id=?, frequency=?, threat_name=? where id=?
 Delete 0: delete from t_threat where id=?
 Identity insert: insert into t_threat (asset_id, frequency, threat_name) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73e0376c]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dead49]
Visiting attribute path : asset.assetType
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cd72501]
Visiting attribute path : asset.assetType.name
Visiting attribute path : asset.backupForm
Visiting attribute path : asset.depart
Visiting attribute path : asset.description
Visiting attribute path : asset.importance
Visiting attribute path : asset.name
Visiting attribute path : asset.principle
Visiting attribute path : asset.project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caa1a97]
Visiting attribute path : asset.project.createDate
Visiting attribute path : asset.project.description
Visiting attribute path : asset.project.name
Visiting attribute path : asset.project.user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1656eea6]
Visiting attribute path : asset.remark
Visiting attribute path : asset.saveForm
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
             - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:2>, path=sw.entity.Threat.asset.assetType)
             - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.Threat.asset.project)
                - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.Threat.asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}
          - JOIN (JoinDefinedByMetadata(asset)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Asset)
                - SQL table alias mapping - asset1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(assetType)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.AssetType)
                      - SQL table alias mapping - assettype2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_6_3_}

Static select for entity sw.entity.Threat [NONE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_, asset1_.id as id1_2_1_, asset1_.ass_typ_id as ass_typ10_2_1_, asset1_.backup_form as backup_f2_2_1_, asset1_.depart as depart3_2_1_, asset1_.description as descript4_2_1_, asset1_.importance as importan5_2_1_, asset1_.name as name6_2_1_, asset1_.principle as principl7_2_1_, asset1_.project_id as project11_2_1_, asset1_.remark as remark8_2_1_, asset1_.save_form as save_for9_2_1_, assettype2_.id as id1_3_2_, assettype2_.name as name2_3_2_, project3_.id as id1_6_3_, project3_.create_date as create_d2_6_3_, project3_.description as descript3_6_3_, project3_.name as name4_6_3_, project3_.user_id as user_id5_6_3_ from t_threat threat0_ left outer join t_asset asset1_ on threat0_.asset_id=asset1_.id left outer join t_asset_type assettype2_ on asset1_.ass_typ_id=assettype2_.id left outer join t_project project3_ on asset1_.project_id=project3_.id where threat0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a01f77a]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64ea71b6]
Visiting attribute path : asset.assetType
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@607715b3]
Visiting attribute path : asset.assetType.name
Visiting attribute path : asset.backupForm
Visiting attribute path : asset.depart
Visiting attribute path : asset.description
Visiting attribute path : asset.importance
Visiting attribute path : asset.name
Visiting attribute path : asset.principle
Visiting attribute path : asset.project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@181b0f7a]
Visiting attribute path : asset.project.createDate
Visiting attribute path : asset.project.description
Visiting attribute path : asset.project.name
Visiting attribute path : asset.project.user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41f2aa32]
Visiting attribute path : asset.remark
Visiting attribute path : asset.saveForm
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
             - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:2>, path=sw.entity.Threat.asset.assetType)
             - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.Threat.asset.project)
                - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.Threat.asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}
          - JOIN (JoinDefinedByMetadata(asset)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Asset)
                - SQL table alias mapping - asset1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(assetType)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.AssetType)
                      - SQL table alias mapping - assettype2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_6_3_}

Static select for entity sw.entity.Threat [READ]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_, asset1_.id as id1_2_1_, asset1_.ass_typ_id as ass_typ10_2_1_, asset1_.backup_form as backup_f2_2_1_, asset1_.depart as depart3_2_1_, asset1_.description as descript4_2_1_, asset1_.importance as importan5_2_1_, asset1_.name as name6_2_1_, asset1_.principle as principl7_2_1_, asset1_.project_id as project11_2_1_, asset1_.remark as remark8_2_1_, asset1_.save_form as save_for9_2_1_, assettype2_.id as id1_3_2_, assettype2_.name as name2_3_2_, project3_.id as id1_6_3_, project3_.create_date as create_d2_6_3_, project3_.description as descript3_6_3_, project3_.name as name4_6_3_, project3_.user_id as user_id5_6_3_ from t_threat threat0_ left outer join t_asset asset1_ on threat0_.asset_id=asset1_.id left outer join t_asset_type assettype2_ on asset1_.ass_typ_id=assettype2_.id left outer join t_project project3_ on asset1_.project_id=project3_.id where threat0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33ac9274]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d13da99]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [UPGRADE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39645e33]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c4f0337]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [UPGRADE_NOWAIT]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ffbd935]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18d73b74]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [UPGRADE_SKIPLOCKED]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c85c5e2]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75f2c3d6]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [FORCE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54df4a87]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f71c9e0]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [PESSIMISTIC_READ]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cfe55ab]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dba60d6]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [PESSIMISTIC_WRITE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c159648]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d02375f]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [PESSIMISTIC_FORCE_INCREMENT]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@436048f9]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27b097a2]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [OPTIMISTIC]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b84e4c4]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20575df3]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [OPTIMISTIC_FORCE_INCREMENT]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Threat: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Threat: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Static SQL for entity: sw.entity.Group
 Version select: select id from t_group where id =?
 Snapshot select: select group_.id, group_.create_date as create_d2_4_, group_.info as info3_4_, group_.user_id as user_id5_4_, group_.name as name4_4_ from t_group group_ where group_.id=?
 Insert 0: insert into t_group (create_date, info, user_id, name, id) values (?, ?, ?, ?, ?)
 Update 0: update t_group set create_date=?, info=?, user_id=?, name=? where id=?
 Delete 0: delete from t_group where id=?
 Identity insert: insert into t_group (create_date, info, user_id, name) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f9d3dc]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@777bceaa]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Group [NONE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2073f437]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b1c3554]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Group [READ]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24e3b87b]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31c29feb]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b0d810f]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2e2bb1]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE_NOWAIT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59b6ce18]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a87111f]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE_SKIPLOCKED]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2779c45d]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@755228f]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [FORCE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1548d493]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34270358]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_READ]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a481e09]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60aebd13]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_WRITE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c9f5f9d]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42926444]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57411f20]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a70f2b1]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [OPTIMISTIC]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b9105ff]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73aa430f]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [OPTIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Group: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Group: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static SQL for entity: sw.entity.Asset
 Version select: select id from t_asset where id =?
 Snapshot select: select asset_.id, asset_.ass_typ_id as ass_typ10_2_, asset_.backup_form as backup_f2_2_, asset_.depart as depart3_2_, asset_.description as descript4_2_, asset_.importance as importan5_2_, asset_.name as name6_2_, asset_.principle as principl7_2_, asset_.project_id as project11_2_, asset_.remark as remark8_2_, asset_.save_form as save_for9_2_ from t_asset asset_ where asset_.id=?
 Insert 0: insert into t_asset (ass_typ_id, backup_form, depart, description, importance, name, principle, project_id, remark, save_form, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update t_asset set ass_typ_id=?, backup_form=?, depart=?, description=?, importance=?, name=?, principle=?, project_id=?, remark=?, save_form=? where id=?
 Delete 0: delete from t_asset where id=?
 Identity insert: insert into t_asset (ass_typ_id, backup_form, depart, description, importance, name, principle, project_id, remark, save_form) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ed2c2b1]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c258955]
Visiting attribute path : assetType.name
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@550999b8]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@245bc542]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.Asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(assetType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.AssetType)
                - SQL table alias mapping - assettype1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_10_3_}

Static select for entity sw.entity.Asset [NONE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_, assettype1_.id as id1_3_1_, assettype1_.name as name2_3_1_, project2_.id as id1_6_2_, project2_.create_date as create_d2_6_2_, project2_.description as descript3_6_2_, project2_.name as name4_6_2_, project2_.user_id as user_id5_6_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_ from t_asset asset0_ left outer join t_asset_type assettype1_ on asset0_.ass_typ_id=assettype1_.id left outer join t_project project2_ on asset0_.project_id=project2_.id left outer join t_user user3_ on project2_.user_id=user3_.id where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20a24bcb]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a4019ce]
Visiting attribute path : assetType.name
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f3e601c]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28b69079]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.Asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(assetType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.AssetType)
                - SQL table alias mapping - assettype1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_10_3_}

Static select for entity sw.entity.Asset [READ]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_, assettype1_.id as id1_3_1_, assettype1_.name as name2_3_1_, project2_.id as id1_6_2_, project2_.create_date as create_d2_6_2_, project2_.description as descript3_6_2_, project2_.name as name4_6_2_, project2_.user_id as user_id5_6_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_ from t_asset asset0_ left outer join t_asset_type assettype1_ on asset0_.ass_typ_id=assettype1_.id left outer join t_project project2_ on asset0_.project_id=project2_.id left outer join t_user user3_ on project2_.user_id=user3_.id where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dfe5276]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3038d4a1]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46840eed]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59f689a9]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ecd81d0]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68580582]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE_NOWAIT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50e62e1]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@293af5cc]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@166917c]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE_SKIPLOCKED]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7709e2db]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b19576d]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ec1d803]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [FORCE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16e6e83a]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@384d4793]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18ec8159]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_READ]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ea0d46]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7457d668]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@84d67f2]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_WRITE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61a4db80]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e1c860a]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d0d06cc]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_FORCE_INCREMENT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a32ac36]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3356d110]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16488ad0]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [OPTIMISTIC]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@984c733]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74b0b461]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26fcae2d]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [OPTIMISTIC_FORCE_INCREMENT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Asset: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Asset: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static SQL for entity: sw.entity.ProRef
 Version select: select id from t_project_refence where id =?
 Snapshot select: select proref_.id, proref_.project_id as project_2_7_, proref_.ref_pro_id as ref_pro_3_7_ from t_project_refence proref_ where proref_.id=?
 Insert 0: insert into t_project_refence (project_id, ref_pro_id, id) values (?, ?, ?)
 Update 0: update t_project_refence set project_id=?, ref_pro_id=? where id=?
 Delete 0: delete from t_project_refence where id=?
 Identity insert: insert into t_project_refence (project_id, ref_pro_id) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9ee489e]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5067fc9e]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6878bd3a]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c21c272]
Visiting attribute path : referenceFile.company
Visiting attribute path : referenceFile.fileName
Visiting attribute path : referenceFile.publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(referenceFile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.ReferenceFile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_8_3_}

Static select for entity sw.entity.ProRef [NONE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_, project1_.id as id1_6_1_, project1_.create_date as create_d2_6_1_, project1_.description as descript3_6_1_, project1_.name as name4_6_1_, project1_.user_id as user_id5_6_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, referencef3_.id as id1_8_3_, referencef3_.company as company2_8_3_, referencef3_.file_name as file_nam3_8_3_, referencef3_.publish_date as publish_4_8_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f8112fa]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74f9bb63]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e3fd6b1]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f79b0f5]
Visiting attribute path : referenceFile.company
Visiting attribute path : referenceFile.fileName
Visiting attribute path : referenceFile.publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(referenceFile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.ReferenceFile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_8_3_}

Static select for entity sw.entity.ProRef [READ]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_, project1_.id as id1_6_1_, project1_.create_date as create_d2_6_1_, project1_.description as descript3_6_1_, project1_.name as name4_6_1_, project1_.user_id as user_id5_6_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, referencef3_.id as id1_8_3_, referencef3_.company as company2_8_3_, referencef3_.file_name as file_nam3_8_3_, referencef3_.publish_date as publish_4_8_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46896b94]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23ff1b96]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38da86ed]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35829fa9]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@207d985e]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c7c8f52]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE_NOWAIT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6da22ea3]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@727f0964]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ad10e66]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE_SKIPLOCKED]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26fae4a9]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74dcf3b5]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26ac6176]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [FORCE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@570206a6]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d523b9d]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68304890]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_READ]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fc05406]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c780534]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4666bce3]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_WRITE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b2bb04d]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@454d9726]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36bfbac8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20cd8a]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@393e1f1]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@483172b1]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e7bbaa0]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dd3cc8b]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e34937a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ProRef: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ProRef: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_10_, user_.name as name3_10_, user_.password as password4_10_, user_.tel as tel5_10_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d898ea6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@462f45e3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d87f68a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f5c4721]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74f67668]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2aca5987]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@242a0564]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@89a01f9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c35597e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@570f5bd3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aad4886]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Static SQL for entity: sw.entity.UserGroup
 Version select: select id from t_usergroup where id =?
 Snapshot select: select usergroup_.id, usergroup_.create_date as create_d2_11_, usergroup_.group_id as group_id4_11_, usergroup_.is_headman as is_headm3_11_, usergroup_.modify_userid as modify_u5_11_, usergroup_.project_id as project_6_11_, usergroup_.user_id as user_id7_11_ from t_usergroup usergroup_ where usergroup_.id=?
 Insert 0: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update t_usergroup set create_date=?, group_id=?, is_headman=?, modify_userid=?, project_id=?, user_id=? where id=?
 Delete 0: delete from t_usergroup where id=?
 Identity insert: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id) values (?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@383cf53e]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c4275b3]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41f65e14]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6db09621]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@666e2f2b]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79610ddd]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@259a81d9]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_10_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_6_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_10_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.UserGroup [NONE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_, group1_.id as id1_4_1_, group1_.create_date as create_d2_4_1_, group1_.info as info3_4_1_, group1_.user_id as user_id5_4_1_, group1_.name as name4_4_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_, project4_.id as id1_6_4_, project4_.create_date as create_d2_6_4_, project4_.description as descript3_6_4_, project4_.name as name4_6_4_, project4_.user_id as user_id5_6_4_, user5_.id as id1_10_5_, user5_.email as email2_10_5_, user5_.name as name3_10_5_, user5_.password as password4_10_5_, user5_.tel as tel5_10_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8326290]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c165029]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ac668f8]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@457d32c6]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30979a2f]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@525e72fd]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a4d8703]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_10_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_6_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_10_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.UserGroup [READ]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_, group1_.id as id1_4_1_, group1_.create_date as create_d2_4_1_, group1_.info as info3_4_1_, group1_.user_id as user_id5_4_1_, group1_.name as name4_4_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_, project4_.id as id1_6_4_, project4_.create_date as create_d2_6_4_, project4_.description as descript3_6_4_, project4_.name as name4_6_4_, project4_.user_id as user_id5_6_4_, user5_.id as id1_10_5_, user5_.email as email2_10_5_, user5_.name as name3_10_5_, user5_.password as password4_10_5_, user5_.tel as tel5_10_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2929b88b]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@702a2928]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@773b7b13]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13b2789f]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b682763]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [UPGRADE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5aaa224f]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7613c129]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c7ab3b7]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4749482d]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@183c0347]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_NOWAIT]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@704e93e0]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64b5546e]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c6b4584]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18be147a]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@726ee4e1]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_SKIPLOCKED]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cb6d8e6]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12423b69]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@170e9c2c]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d7507c3]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58eb3a99]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [FORCE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b71cb9e]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d0380e3]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cbd4c28]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59c54b1a]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f7777c1]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_READ]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e62fa54]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bb62026]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f4b97ee]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36727a09]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f5ea0a2]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_WRITE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3553167f]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7343993f]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9627c45]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@242f73f8]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52835e42]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d66af4c]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78937b45]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@302a4b5b]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38be8edd]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c61f6df]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fcbe345]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@315db264]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42f97d9e]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e87f4f]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@379f0ed5]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.UserGroup: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.UserGroup: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static SQL for entity: sw.entity.Menu
 Version select: select id from t_menu where id =?
 Snapshot select: select menu_.id, menu_.href as href2_5_, menu_.name as name3_5_, menu_.pid as pid4_5_ from t_menu menu_ where menu_.id=?
 Insert 0: insert into t_menu (href, name, pid, id) values (?, ?, ?, ?)
 Update 0: update t_menu set href=?, name=?, pid=? where id=?
 Delete 0: delete from t_menu where id=?
 Identity insert: insert into t_menu (href, name, pid) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b0d44d0]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [NONE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2342c8a8]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [READ]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d4e613b]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@348c2ee6]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE_NOWAIT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6264bbca]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE_SKIPLOCKED]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@438fd8e2]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [FORCE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@128fc2e1]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_READ]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30bad1b2]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_WRITE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1db64b21]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c5e254c]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@428479b8]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Menu: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Menu: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static SQL for entity: sw.entity.ReferenceFile
 Version select: select id from t_referencefile where id =?
 Snapshot select: select referencef_.id, referencef_.company as company2_8_, referencef_.file_name as file_nam3_8_, referencef_.publish_date as publish_4_8_ from t_referencefile referencef_ where referencef_.id=?
 Insert 0: insert into t_referencefile (company, file_name, publish_date, id) values (?, ?, ?, ?)
 Update 0: update t_referencefile set company=?, file_name=?, publish_date=? where id=?
 Delete 0: delete from t_referencefile where id=?
 Identity insert: insert into t_referencefile (company, file_name, publish_date) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f659c6c]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [NONE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@581aa2e]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [READ]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e6e40d]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@170c7103]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE_NOWAIT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fc70b82]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE_SKIPLOCKED]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@771f7570]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [FORCE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73b69d72]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_READ]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ddf4a]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_WRITE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6352592a]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d246d3c]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [OPTIMISTIC]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@388cb8b6]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [OPTIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ReferenceFile: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ReferenceFile: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static SQL for entity: sw.entity.Project
 Version select: select id from t_project where id =?
 Snapshot select: select project_.id, project_.create_date as create_d2_6_, project_.description as descript3_6_, project_.name as name4_6_, project_.user_id as user_id5_6_ from t_project project_ where project_.id=?
 Insert 0: insert into t_project (create_date, description, name, user_id, id) values (?, ?, ?, ?, ?)
 Update 0: update t_project set create_date=?, description=?, name=?, user_id=? where id=?
 Delete 0: delete from t_project where id=?
 Identity insert: insert into t_project (create_date, description, name, user_id) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fe711cb]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3af0cf27]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Project [NONE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a37f439]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55b6df50]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Project [READ]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3274946]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@141a1e57]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2583ed1a]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43a0b5c2]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE_NOWAIT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78cf347]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ec54cfa]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE_SKIPLOCKED]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@588de445]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cde69fb]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [FORCE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58484a06]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e5c3056]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_READ]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11d201d7]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@657a367f]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_WRITE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@acb6406]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@342243b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@373f33e2]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d29193e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [OPTIMISTIC]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fd89d5c]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b2be235]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [OPTIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Project: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Project: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static SQL for entity: sw.entity.AssetType
 Version select: select id from t_asset_type where id =?
 Snapshot select: select assettype_.id, assettype_.name as name2_3_ from t_asset_type assettype_ where assettype_.id=?
 Insert 0: insert into t_asset_type (name, id) values (?, ?)
 Update 0: update t_asset_type set name=? where id=?
 Delete 0: delete from t_asset_type where id=?
 Identity insert: insert into t_asset_type (name) values (?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e5ef287]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [NONE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64db8690]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [READ]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5916e437]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@97d9a05]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE_NOWAIT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38dd86af]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE_SKIPLOCKED]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ff0d7b7]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [FORCE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a81b49c]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_READ]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f4bdcff]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_WRITE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b3fa7ae]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_FORCE_INCREMENT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@134386dd]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [OPTIMISTIC]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17671274]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [OPTIMISTIC_FORCE_INCREMENT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.AssetType: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.AssetType: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static SQL for entity: sw.entity.Action
 Version select: select id from t_action where id =?
 Snapshot select: select action_.id, action_.menu_id as menu_id4_0_, action_.name as name2_0_, action_.url as url3_0_ from t_action action_ where action_.id=?
 Insert 0: insert into t_action (menu_id, name, url, id) values (?, ?, ?, ?)
 Update 0: update t_action set menu_id=?, name=?, url=? where id=?
 Delete 0: delete from t_action where id=?
 Identity insert: insert into t_action (menu_id, name, url) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a13bd69]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4afd9dd5]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

Static select for entity sw.entity.Action [NONE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_5_1_, menu1_.href as href2_5_1_, menu1_.name as name3_5_1_, menu1_.pid as pid4_5_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1590cda0]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@606d9571]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

Static select for entity sw.entity.Action [READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_5_1_, menu1_.href as href2_5_1_, menu1_.name as name3_5_1_, menu1_.pid as pid4_5_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f139ea5]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10583c08]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71bebed3]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79659f0e]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_NOWAIT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@288c5456]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b12e95]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_SKIPLOCKED]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54795c42]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@330d8da1]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [FORCE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b40d8d3]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57498606]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8f669cb]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38c008fa]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_WRITE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23a2c052]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40467f10]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78f9383a]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f312cfb]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c7c76f2]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@360b9ac9]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static SQL for entity: sw.entity.ActionGroup
 Version select: select id from t_actiongroup where id =?
 Snapshot select: select actiongrou_.id, actiongrou_.action_id as action_i3_1_, actiongrou_.create_date as create_d2_1_, actiongrou_.group_id as group_id4_1_, actiongrou_.menu_id as menu_id5_1_, actiongrou_.user_id as user_id6_1_ from t_actiongroup actiongrou_ where actiongrou_.id=?
 Insert 0: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update t_actiongroup set action_id=?, create_date=?, group_id=?, menu_id=?, user_id=? where id=?
 Delete 0: delete from t_actiongroup where id=?
 Identity insert: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id) values (?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@600b2e07]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fd7a987]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c22d6cb]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@393baeb4]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@134e7415]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79d63e8c]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5329598c]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_10_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_5_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.ActionGroup [NONE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_5_2_, menu2_.href as href2_5_2_, menu2_.name as name3_5_2_, menu2_.pid as pid4_5_2_, group3_.id as id1_4_3_, group3_.create_date as create_d2_4_3_, group3_.info as info3_4_3_, group3_.user_id as user_id5_4_3_, group3_.name as name4_4_3_, user4_.id as id1_10_4_, user4_.email as email2_10_4_, user4_.name as name3_10_4_, user4_.password as password4_10_4_, user4_.tel as tel5_10_4_, menu5_.id as id1_5_5_, menu5_.href as href2_5_5_, menu5_.name as name3_5_5_, menu5_.pid as pid4_5_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65ad9f2f]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74976956]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f2de349]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10a68053]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74e7b654]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bd1078c]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17c9ef06]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_10_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_5_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.ActionGroup [READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_5_2_, menu2_.href as href2_5_2_, menu2_.name as name3_5_2_, menu2_.pid as pid4_5_2_, group3_.id as id1_4_3_, group3_.create_date as create_d2_4_3_, group3_.info as info3_4_3_, group3_.user_id as user_id5_4_3_, group3_.name as name4_4_3_, user4_.id as id1_10_4_, user4_.email as email2_10_4_, user4_.name as name3_10_4_, user4_.password as password4_10_4_, user4_.tel as tel5_10_4_, menu5_.id as id1_5_5_, menu5_.href as href2_5_5_, menu5_.name as name3_5_5_, menu5_.pid as pid4_5_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3605a7c2]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d76e9a1]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@510d72b0]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a2df4e4]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73f5cb2d]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59e40f13]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46e93c35]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b182b66]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@627d3381]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32189cb5]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_NOWAIT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d9f1657]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cec9fd3]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a674bcf]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f8fdb7a]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a109b93]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_SKIPLOCKED]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28a8f05]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@366ce9b]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d240167]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b004561]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6500257c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [FORCE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50273d51]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24d75893]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4018b2b0]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@293cd257]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d459312]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63c84fe9]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@292134e7]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78adefd2]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59bb5029]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@387a1770]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_WRITE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18dc9a94]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c2116f0]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64084193]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18fc6fbc]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5683f8a4]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5211e212]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fc925bf]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4646aa3a]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b1ad192]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@766cbc1e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@304e9bb1]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e712f4e]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d6efed2]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59b97ddd]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d00eb22]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Instantiated session factory
HHH000228: Running hbm2ddl schema update
No alter strings for table : t_action
No alter strings for table : t_actiongroup
No alter strings for table : t_asset
No alter strings for table : t_asset_type
No alter strings for table : t_group
No alter strings for table : t_menu
No alter strings for table : t_project
No alter strings for table : t_project_refence
No alter strings for table : t_referencefile
No alter strings for table : t_threat
No alter strings for table : t_user
No alter strings for table : t_usergroup
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 2e816dff-bb8e-4e47-a554-c618980ecc33 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5da421ff: startup date [Tue Nov 21 15:54:47 CST 2017]; root of context hierarchy
Mapped "{[/pro/projectAdd],methods=[POST]}" onto public java.lang.String sw.controller.ProjectController.projectAdd(sw.entity.Project,org.springframework.ui.Model)
Mapped "{[/pro/updateProject],methods=[POST]}" onto public java.lang.String sw.controller.ProjectController.updateProject(sw.entity.Project)
Mapped "{[/pro/menu]}" onto public sw.model.MMenu sw.controller.ProjectController.findByroot()
Mapped "{[/pro/findAllGroups/{projectId}],methods=[GET]}" onto public void sw.controller.ProjectController.findAllGroups(int,org.springframework.ui.Model)
Mapped "{[/pro/projectList],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectPage(org.springframework.ui.Model)
Mapped "{[/pro/delProject/{id}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.delCollege(int)
Mapped "{[/pro/projectMain/{projectId}/{groupIds}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectMain(int,java.lang.String,org.springframework.ui.Model)
Mapped "{[/pro/projectForm/{id}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectForm(int,org.springframework.ui.Model)
Mapped "{[/pro/projectForm],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectFormView(org.springframework.ui.Model)
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model,javax.servlet.http.HttpSession)
Mapped "{[/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage(org.springframework.ui.Model)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession) throws java.io.IOException
Mapped "{[/logout],methods=[GET]}" onto public java.lang.String sw.controller.UserController.logout(javax.servlet.http.HttpSession)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 5.331 seconds (JVM running for 2698.398)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5da421ff: startup date [Tue Nov 21 15:54:47 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 1076 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@43f85244: startup date [Tue Nov 21 16:07:55 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d3ccd128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 894 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@662e9fdf
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@517ac77e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.Action
		sw.entity.ActionGroup
		sw.entity.Asset
		sw.entity.AssetType
		sw.entity.Group
		sw.entity.Menu
		sw.entity.Project
		sw.entity.ProRef
		sw.entity.ReferenceFile
		sw.entity.Threat
		sw.entity.User
		sw.entity.UserGroup]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@6a523a53
Adding type registration boolean -> org.hibernate.type.BooleanType@6a523a53
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6a523a53
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@50536716
Adding type registration true_false -> org.hibernate.type.TrueFalseType@23493a29
Adding type registration yes_no -> org.hibernate.type.YesNoType@4840d9b5
Adding type registration byte -> org.hibernate.type.ByteType@4cfc4550
Adding type registration byte -> org.hibernate.type.ByteType@4cfc4550
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4cfc4550
Adding type registration character -> org.hibernate.type.CharacterType@670d75f6
Adding type registration char -> org.hibernate.type.CharacterType@670d75f6
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@670d75f6
Adding type registration short -> org.hibernate.type.ShortType@277dfa1b
Adding type registration short -> org.hibernate.type.ShortType@277dfa1b
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@277dfa1b
Adding type registration integer -> org.hibernate.type.IntegerType@275d2f7b
Adding type registration int -> org.hibernate.type.IntegerType@275d2f7b
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@275d2f7b
Adding type registration long -> org.hibernate.type.LongType@46df23ee
Adding type registration long -> org.hibernate.type.LongType@46df23ee
Adding type registration java.lang.Long -> org.hibernate.type.LongType@46df23ee
Adding type registration float -> org.hibernate.type.FloatType@1f147da8
Adding type registration float -> org.hibernate.type.FloatType@1f147da8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1f147da8
Adding type registration double -> org.hibernate.type.DoubleType@4a944ace
Adding type registration double -> org.hibernate.type.DoubleType@4a944ace
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4a944ace
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4d737d2e
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4d737d2e
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@34842b22
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@34842b22
Adding type registration string -> org.hibernate.type.StringType@74e01472
Adding type registration java.lang.String -> org.hibernate.type.StringType@74e01472
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@22bb8064
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6dc85f47
Adding type registration url -> org.hibernate.type.UrlType@b96fec
Adding type registration java.net.URL -> org.hibernate.type.UrlType@b96fec
Adding type registration date -> org.hibernate.type.DateType@4df78ef4
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4df78ef4
Adding type registration time -> org.hibernate.type.TimeType@171d4f0a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@171d4f0a
Adding type registration timestamp -> org.hibernate.type.TimestampType@377d0097
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@377d0097
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@377d0097
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@365d2598
Adding type registration calendar -> org.hibernate.type.CalendarType@a591744
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@a591744
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@a591744
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@34957ccb
Adding type registration locale -> org.hibernate.type.LocaleType@1499a6ed
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1499a6ed
Adding type registration currency -> org.hibernate.type.CurrencyType@7f9183a
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7f9183a
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2fcb1f59
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2fcb1f59
Adding type registration class -> org.hibernate.type.ClassType@d3908a0
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@d3908a0
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@67c8ab23
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@67c8ab23
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2807129b
Adding type registration binary -> org.hibernate.type.BinaryType@399ea956
Adding type registration byte[] -> org.hibernate.type.BinaryType@399ea956
Adding type registration [B -> org.hibernate.type.BinaryType@399ea956
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6ae2529d
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6ae2529d
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6ae2529d
Adding type registration row_version -> org.hibernate.type.RowVersionType@4d24b361
Adding type registration image -> org.hibernate.type.ImageType@26230acd
Adding type registration characters -> org.hibernate.type.CharArrayType@78ba6a27
Adding type registration char[] -> org.hibernate.type.CharArrayType@78ba6a27
Adding type registration [C -> org.hibernate.type.CharArrayType@78ba6a27
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17b55ea4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17b55ea4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17b55ea4
Adding type registration text -> org.hibernate.type.TextType@6912eb62
Adding type registration ntext -> org.hibernate.type.NTextType@29b866d6
Adding type registration blob -> org.hibernate.type.BlobType@5b87eeb2
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5b87eeb2
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@182c555b
Adding type registration clob -> org.hibernate.type.ClobType@28a2f658
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28a2f658
Adding type registration nclob -> org.hibernate.type.NClobType@6abf3f44
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6abf3f44
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@34fabc1b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@76f468a5
Adding type registration serializable -> org.hibernate.type.SerializableType@23791936
Adding type registration object -> org.hibernate.type.ObjectType@671783cd
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@671783cd
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44269602
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@348f0afc
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@16467dd5
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@30db995e
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@403d8fc1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@ca9b5d0
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2924c945
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@45d9b456
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.Threat
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Threat
Bind entity sw.entity.Threat on table t_threat
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='asset_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=asset, insertable=true, updatable=true, unique=false}
Building property asset
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=frequency, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property frequency with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:frequency]
building SimpleValue for frequency
Building property frequency
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=threat_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property threatName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:threatName]
building SimpleValue for threatName
Building property threatName
Binding entity from annotated class: sw.entity.Group
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Group
Bind entity sw.entity.Group on table t_group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=info, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property info with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:info]
building SimpleValue for info
Building property info
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Asset
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Asset
Bind entity sw.entity.Asset on table t_asset
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='ass_typ_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=asset_type, insertable=true, updatable=true, unique=false}
Building property assetType
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=backup_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property backupForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:backupForm]
building SimpleValue for backupForm
Building property backupForm
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=depart, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property depart with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:depart]
building SimpleValue for depart
Building property depart
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=importance, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property importance with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:importance]
building SimpleValue for importance
Building property importance
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=principle, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property principle with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:principle]
building SimpleValue for principle
Building property principle
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=remark, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property remark with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:remark]
building SimpleValue for remark
Building property remark
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=save_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property saveForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:saveForm]
building SimpleValue for saveForm
Building property saveForm
Binding entity from annotated class: sw.entity.ProRef
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ProRef
Bind entity sw.entity.ProRef on table t_project_refence
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ProRef:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='ref_pro_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=reference_file, insertable=true, updatable=true, unique=false}
Building property referenceFile
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Binding entity from annotated class: sw.entity.UserGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name UserGroup
Bind entity sw.entity.UserGroup on table t_usergroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=is_headman, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property isHeadman with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:isHeadman]
building SimpleValue for isHeadman
Building property isHeadman
Binding column: Ejb3JoinColumn{logicalColumnName='modify_userid', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.Menu
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Menu
Bind entity sw.entity.Menu on table t_menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=href, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property href with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:href]
building SimpleValue for href
Building property href
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=pid, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property pid with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:pid]
building SimpleValue for pid
Building property pid
Binding entity from annotated class: sw.entity.ReferenceFile
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ReferenceFile
Bind entity sw.entity.ReferenceFile on table t_referencefile
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=company, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property company with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:company]
building SimpleValue for company
Building property company
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=file_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property fileName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:fileName]
building SimpleValue for fileName
Building property fileName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=publish_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property publishDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:publishDate]
building SimpleValue for publishDate
Building property publishDate
Binding entity from annotated class: sw.entity.Project
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Project
Bind entity sw.entity.Project on table t_project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:name]
building SimpleValue for name
Building property name
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.AssetType
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AssetType
Bind entity sw.entity.AssetType on table t_asset_type
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Action
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Action
Bind entity sw.entity.Action on table t_action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=url, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property url with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:url]
building SimpleValue for url
Building property url
Binding entity from annotated class: sw.entity.ActionGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ActionGroup
Bind entity sw.entity.ActionGroup on table t_actiongroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='action_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=action, insertable=true, updatable=true, unique=false}
Building property action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Starting fillSimpleValue for id
Starting fillSimpleValue for frequency
Starting fillSimpleValue for threatName
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for info
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for backupForm
Starting fillSimpleValue for depart
Starting fillSimpleValue for description
Starting fillSimpleValue for importance
Starting fillSimpleValue for name
Starting fillSimpleValue for principle
Starting fillSimpleValue for remark
Starting fillSimpleValue for saveForm
Starting fillSimpleValue for id
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for isHeadman
Starting fillSimpleValue for id
Starting fillSimpleValue for href
Starting fillSimpleValue for name
Starting fillSimpleValue for pid
Starting fillSimpleValue for id
Starting fillSimpleValue for company
Starting fillSimpleValue for fileName
Starting fillSimpleValue for publishDate
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for description
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for url
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Forcing column [id] to be non-null as it is part of the primary key for table [t_threat]
Forcing column [id] to be non-null as it is part of the primary key for table [t_group]
Forcing column [id] to be non-null as it is part of the primary key for table [t_asset]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project_refence]
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Forcing column [id] to be non-null as it is part of the primary key for table [t_usergroup]
Forcing column [id] to be non-null as it is part of the primary key for table [t_menu]
Forcing column [id] to be non-null as it is part of the primary key for table [t_referencefile]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project]
Forcing column [id] to be non-null as it is part of the primary key for table [t_asset_type]
Forcing column [id] to be non-null as it is part of the primary key for table [t_action]
Forcing column [id] to be non-null as it is part of the primary key for table [t_actiongroup]
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.AssetType
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.ReferenceFile
Resolving reference to class: sw.entity.Asset
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.AssetType
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.ReferenceFile
Resolving reference to class: sw.entity.Asset
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@49704c00
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.8488872014840973578.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=1076, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3193d4e7, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@517ac77e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar;C:\Users\LR\.m2\repository\commons-beanutils\commons-beanutils\1.9.3\commons-beanutils-1.9.3.jar;C:\Users\LR\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\LR\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi\3.14\poi-3.14.jar;C:\Users\LR\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi-ooxml\3.14\poi-ooxml-3.14.jar;C:\Users\LR\.m2\repository\com\github\virtuald\curvesapi\1.03\curvesapi-1.03.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi-ooxml-schemas\3.14\poi-ooxml-schemas-3.14.jar;C:\Users\LR\.m2\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;C:\Users\LR\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.8488872014840973578.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7a3be5a0, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.Threat] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Threat
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@755f6dac, payload=[Ljava.lang.Class;@3a32cf4}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@185d741a, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@47d64c8}, constraintType=GENERIC}.
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@2285f5db, payload=[Ljava.lang.Class;@316db024}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@3659af9d, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@f4b01b3}, constraintType=GENERIC}.
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.Threat] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Threat
Not known whether passed class name [sw.entity.Threat] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Threat
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Static SQL for entity: sw.entity.Threat
 Version select: select id from t_threat where id =?
 Snapshot select: select threat_.id, threat_.asset_id as asset_id4_9_, threat_.frequency as frequenc2_9_, threat_.threat_name as threat_n3_9_ from t_threat threat_ where threat_.id=?
 Insert 0: insert into t_threat (asset_id, frequency, threat_name, id) values (?, ?, ?, ?)
 Update 0: update t_threat set asset_id=?, frequency=?, threat_name=? where id=?
 Delete 0: delete from t_threat where id=?
 Identity insert: insert into t_threat (asset_id, frequency, threat_name) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4526456b]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72b74a78]
Visiting attribute path : asset.assetType
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@694d3281]
Visiting attribute path : asset.assetType.name
Visiting attribute path : asset.backupForm
Visiting attribute path : asset.depart
Visiting attribute path : asset.description
Visiting attribute path : asset.importance
Visiting attribute path : asset.name
Visiting attribute path : asset.principle
Visiting attribute path : asset.project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b47ee59]
Visiting attribute path : asset.project.createDate
Visiting attribute path : asset.project.description
Visiting attribute path : asset.project.name
Visiting attribute path : asset.project.user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c870e99]
Visiting attribute path : asset.remark
Visiting attribute path : asset.saveForm
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
             - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:2>, path=sw.entity.Threat.asset.assetType)
             - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.Threat.asset.project)
                - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.Threat.asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}
          - JOIN (JoinDefinedByMetadata(asset)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Asset)
                - SQL table alias mapping - asset1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(assetType)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.AssetType)
                      - SQL table alias mapping - assettype2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_6_3_}

Static select for entity sw.entity.Threat [NONE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_, asset1_.id as id1_2_1_, asset1_.ass_typ_id as ass_typ10_2_1_, asset1_.backup_form as backup_f2_2_1_, asset1_.depart as depart3_2_1_, asset1_.description as descript4_2_1_, asset1_.importance as importan5_2_1_, asset1_.name as name6_2_1_, asset1_.principle as principl7_2_1_, asset1_.project_id as project11_2_1_, asset1_.remark as remark8_2_1_, asset1_.save_form as save_for9_2_1_, assettype2_.id as id1_3_2_, assettype2_.name as name2_3_2_, project3_.id as id1_6_3_, project3_.create_date as create_d2_6_3_, project3_.description as descript3_6_3_, project3_.name as name4_6_3_, project3_.user_id as user_id5_6_3_ from t_threat threat0_ left outer join t_asset asset1_ on threat0_.asset_id=asset1_.id left outer join t_asset_type assettype2_ on asset1_.ass_typ_id=assettype2_.id left outer join t_project project3_ on asset1_.project_id=project3_.id where threat0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33354eff]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cb42099]
Visiting attribute path : asset.assetType
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1148eb1b]
Visiting attribute path : asset.assetType.name
Visiting attribute path : asset.backupForm
Visiting attribute path : asset.depart
Visiting attribute path : asset.description
Visiting attribute path : asset.importance
Visiting attribute path : asset.name
Visiting attribute path : asset.principle
Visiting attribute path : asset.project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@94b7f5e]
Visiting attribute path : asset.project.createDate
Visiting attribute path : asset.project.description
Visiting attribute path : asset.project.name
Visiting attribute path : asset.project.user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f7c31b6]
Visiting attribute path : asset.remark
Visiting attribute path : asset.saveForm
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
             - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:2>, path=sw.entity.Threat.asset.assetType)
             - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.Threat.asset.project)
                - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.Threat.asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}
          - JOIN (JoinDefinedByMetadata(asset)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Asset)
                - SQL table alias mapping - asset1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(assetType)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.AssetType)
                      - SQL table alias mapping - assettype2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_6_3_}

Static select for entity sw.entity.Threat [READ]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_, asset1_.id as id1_2_1_, asset1_.ass_typ_id as ass_typ10_2_1_, asset1_.backup_form as backup_f2_2_1_, asset1_.depart as depart3_2_1_, asset1_.description as descript4_2_1_, asset1_.importance as importan5_2_1_, asset1_.name as name6_2_1_, asset1_.principle as principl7_2_1_, asset1_.project_id as project11_2_1_, asset1_.remark as remark8_2_1_, asset1_.save_form as save_for9_2_1_, assettype2_.id as id1_3_2_, assettype2_.name as name2_3_2_, project3_.id as id1_6_3_, project3_.create_date as create_d2_6_3_, project3_.description as descript3_6_3_, project3_.name as name4_6_3_, project3_.user_id as user_id5_6_3_ from t_threat threat0_ left outer join t_asset asset1_ on threat0_.asset_id=asset1_.id left outer join t_asset_type assettype2_ on asset1_.ass_typ_id=assettype2_.id left outer join t_project project3_ on asset1_.project_id=project3_.id where threat0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a72a2b7]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11ef684a]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [UPGRADE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f301a40]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7464d1e7]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [UPGRADE_NOWAIT]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ea34a19]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42d5559b]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [UPGRADE_SKIPLOCKED]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@106c5fcf]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40bd5554]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [FORCE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@282ca955]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17f80f5c]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [PESSIMISTIC_READ]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d45ef02]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ad5d992]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [PESSIMISTIC_WRITE]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d80ad7b]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b3a0342]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [PESSIMISTIC_FORCE_INCREMENT]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f4742fe]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30e4d04]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [OPTIMISTIC]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58757e34]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c1d3bd1]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Threat)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Threat, querySpaceUid=<gen:0>, path=sw.entity.Threat)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Threat.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Threat)
          - SQL table alias mapping - threat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Threat [OPTIMISTIC_FORCE_INCREMENT]: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Threat: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Threat: select threat0_.id as id1_9_0_, threat0_.asset_id as asset_id4_9_0_, threat0_.frequency as frequenc2_9_0_, threat0_.threat_name as threat_n3_9_0_ from t_threat threat0_ where threat0_.id=?
Static SQL for entity: sw.entity.Group
 Version select: select id from t_group where id =?
 Snapshot select: select group_.id, group_.create_date as create_d2_4_, group_.info as info3_4_, group_.user_id as user_id5_4_, group_.name as name4_4_ from t_group group_ where group_.id=?
 Insert 0: insert into t_group (create_date, info, user_id, name, id) values (?, ?, ?, ?, ?)
 Update 0: update t_group set create_date=?, info=?, user_id=?, name=? where id=?
 Delete 0: delete from t_group where id=?
 Identity insert: insert into t_group (create_date, info, user_id, name) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d0a2b3b]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@573f03ee]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Group [NONE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e66d5fa]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4022a4e]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Group [READ]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@548c0de]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50a5c601]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35a500a8]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35ae3f92]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE_NOWAIT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bc562e8]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@632206ad]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE_SKIPLOCKED]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2734e7f4]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55b7f31b]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [FORCE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2653806e]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@513717c7]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_READ]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bf209d1]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61605675]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_WRITE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@880fcb1]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67ba1b94]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40a3ae8]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16edf279]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [OPTIMISTIC]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@213c2d8b]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e83f64f]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [OPTIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Group: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Group: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static SQL for entity: sw.entity.Asset
 Version select: select id from t_asset where id =?
 Snapshot select: select asset_.id, asset_.ass_typ_id as ass_typ10_2_, asset_.backup_form as backup_f2_2_, asset_.depart as depart3_2_, asset_.description as descript4_2_, asset_.importance as importan5_2_, asset_.name as name6_2_, asset_.principle as principl7_2_, asset_.project_id as project11_2_, asset_.remark as remark8_2_, asset_.save_form as save_for9_2_ from t_asset asset_ where asset_.id=?
 Insert 0: insert into t_asset (ass_typ_id, backup_form, depart, description, importance, name, principle, project_id, remark, save_form, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update t_asset set ass_typ_id=?, backup_form=?, depart=?, description=?, importance=?, name=?, principle=?, project_id=?, remark=?, save_form=? where id=?
 Delete 0: delete from t_asset where id=?
 Identity insert: insert into t_asset (ass_typ_id, backup_form, depart, description, importance, name, principle, project_id, remark, save_form) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@784addc]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1781ab70]
Visiting attribute path : assetType.name
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5419af1a]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d6808fd]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.Asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(assetType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.AssetType)
                - SQL table alias mapping - assettype1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_10_3_}

Static select for entity sw.entity.Asset [NONE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_, assettype1_.id as id1_3_1_, assettype1_.name as name2_3_1_, project2_.id as id1_6_2_, project2_.create_date as create_d2_6_2_, project2_.description as descript3_6_2_, project2_.name as name4_6_2_, project2_.user_id as user_id5_6_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_ from t_asset asset0_ left outer join t_asset_type assettype1_ on asset0_.ass_typ_id=assettype1_.id left outer join t_project project2_ on asset0_.project_id=project2_.id left outer join t_user user3_ on project2_.user_id=user3_.id where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a8d6404]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@576d10b9]
Visiting attribute path : assetType.name
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@eec9b6f]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75979baa]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.Asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(assetType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.AssetType)
                - SQL table alias mapping - assettype1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_10_3_}

Static select for entity sw.entity.Asset [READ]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_, assettype1_.id as id1_3_1_, assettype1_.name as name2_3_1_, project2_.id as id1_6_2_, project2_.create_date as create_d2_6_2_, project2_.description as descript3_6_2_, project2_.name as name4_6_2_, project2_.user_id as user_id5_6_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_ from t_asset asset0_ left outer join t_asset_type assettype1_ on asset0_.ass_typ_id=assettype1_.id left outer join t_project project2_ on asset0_.project_id=project2_.id left outer join t_user user3_ on project2_.user_id=user3_.id where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3338fb94]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35201d3f]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45945bab]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3184ecd6]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6425b29e]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38be4b2]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE_NOWAIT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15ff5a49]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41e0acba]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d126e40]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE_SKIPLOCKED]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@725042b9]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cb03fa8]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72de2e10]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [FORCE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ebff78]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49976057]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a3a69db]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_READ]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17f74fdb]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b99f075]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7274386c]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_WRITE]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fd0386e]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@178a799c]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@446e9459]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_FORCE_INCREMENT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a23c7f2]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c69d5fc]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c954c74]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [OPTIMISTIC]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@788d0843]
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a2d6ed9]
Visiting attribute path : backupForm
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c0d7104]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [OPTIMISTIC_FORCE_INCREMENT]: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Asset: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Asset: select asset0_.id as id1_2_0_, asset0_.ass_typ_id as ass_typ10_2_0_, asset0_.backup_form as backup_f2_2_0_, asset0_.depart as depart3_2_0_, asset0_.description as descript4_2_0_, asset0_.importance as importan5_2_0_, asset0_.name as name6_2_0_, asset0_.principle as principl7_2_0_, asset0_.project_id as project11_2_0_, asset0_.remark as remark8_2_0_, asset0_.save_form as save_for9_2_0_ from t_asset asset0_ where asset0_.id=?
Static SQL for entity: sw.entity.ProRef
 Version select: select id from t_project_refence where id =?
 Snapshot select: select proref_.id, proref_.project_id as project_2_7_, proref_.ref_pro_id as ref_pro_3_7_ from t_project_refence proref_ where proref_.id=?
 Insert 0: insert into t_project_refence (project_id, ref_pro_id, id) values (?, ?, ?)
 Update 0: update t_project_refence set project_id=?, ref_pro_id=? where id=?
 Delete 0: delete from t_project_refence where id=?
 Identity insert: insert into t_project_refence (project_id, ref_pro_id) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd2b1d6]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@498599dd]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27b202bd]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@315df935]
Visiting attribute path : referenceFile.company
Visiting attribute path : referenceFile.fileName
Visiting attribute path : referenceFile.publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(referenceFile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.ReferenceFile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_8_3_}

Static select for entity sw.entity.ProRef [NONE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_, project1_.id as id1_6_1_, project1_.create_date as create_d2_6_1_, project1_.description as descript3_6_1_, project1_.name as name4_6_1_, project1_.user_id as user_id5_6_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, referencef3_.id as id1_8_3_, referencef3_.company as company2_8_3_, referencef3_.file_name as file_nam3_8_3_, referencef3_.publish_date as publish_4_8_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@629b0ed4]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76209808]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433ac160]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bfb0f5b]
Visiting attribute path : referenceFile.company
Visiting attribute path : referenceFile.fileName
Visiting attribute path : referenceFile.publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(referenceFile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.ReferenceFile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_8_3_}

Static select for entity sw.entity.ProRef [READ]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_, project1_.id as id1_6_1_, project1_.create_date as create_d2_6_1_, project1_.description as descript3_6_1_, project1_.name as name4_6_1_, project1_.user_id as user_id5_6_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, referencef3_.id as id1_8_3_, referencef3_.company as company2_8_3_, referencef3_.file_name as file_nam3_8_3_, referencef3_.publish_date as publish_4_8_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bceccda]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@284078e3]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27982dda]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a8d9def]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b91f42e]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d81ec7b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE_NOWAIT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b1564c1]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47799e9d]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35e9503d]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE_SKIPLOCKED]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15fa192d]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2499ea16]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b0e2e00]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [FORCE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e78673d]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22b23576]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8e6610e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_READ]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@557aaea0]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a742cb0]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11a1c6e1]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_WRITE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11ae75db]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@761de359]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6914b5b5]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bf605e1]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55a7d0f6]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19526eea]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2230a92c]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ae98536]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40c697bf]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ProRef: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ProRef: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_10_, user_.name as name3_10_, user_.password as password4_10_, user_.tel as tel5_10_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67182f42]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56c793d7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48cd4fb]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35830678]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@310afefd]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4000374c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b0eceb4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d0d0855]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14fd77bc]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a1cdb0c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27f05c73]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_10_0_, user0_.email as email2_10_0_, user0_.name as name3_10_0_, user0_.password as password4_10_0_, user0_.tel as tel5_10_0_ from t_user user0_ where user0_.id=?
Static SQL for entity: sw.entity.UserGroup
 Version select: select id from t_usergroup where id =?
 Snapshot select: select usergroup_.id, usergroup_.create_date as create_d2_11_, usergroup_.group_id as group_id4_11_, usergroup_.is_headman as is_headm3_11_, usergroup_.modify_userid as modify_u5_11_, usergroup_.project_id as project_6_11_, usergroup_.user_id as user_id7_11_ from t_usergroup usergroup_ where usergroup_.id=?
 Insert 0: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update t_usergroup set create_date=?, group_id=?, is_headman=?, modify_userid=?, project_id=?, user_id=? where id=?
 Delete 0: delete from t_usergroup where id=?
 Identity insert: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id) values (?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3558a7ea]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34073109]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b241a4a]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@82dced7]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@441d6996]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e338c8f]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@837a2a9]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_10_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_6_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_10_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.UserGroup [NONE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_, group1_.id as id1_4_1_, group1_.create_date as create_d2_4_1_, group1_.info as info3_4_1_, group1_.user_id as user_id5_4_1_, group1_.name as name4_4_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_, project4_.id as id1_6_4_, project4_.create_date as create_d2_6_4_, project4_.description as descript3_6_4_, project4_.name as name4_6_4_, project4_.user_id as user_id5_6_4_, user5_.id as id1_10_5_, user5_.email as email2_10_5_, user5_.name as name3_10_5_, user5_.password as password4_10_5_, user5_.tel as tel5_10_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@750691d]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c1043dd]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33b436da]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3803ddc8]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5804e324]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c2a8f0]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ac5352]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_10_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_10_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_6_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_10_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.UserGroup [READ]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_, group1_.id as id1_4_1_, group1_.create_date as create_d2_4_1_, group1_.info as info3_4_1_, group1_.user_id as user_id5_4_1_, group1_.name as name4_4_1_, user2_.id as id1_10_2_, user2_.email as email2_10_2_, user2_.name as name3_10_2_, user2_.password as password4_10_2_, user2_.tel as tel5_10_2_, user3_.id as id1_10_3_, user3_.email as email2_10_3_, user3_.name as name3_10_3_, user3_.password as password4_10_3_, user3_.tel as tel5_10_3_, project4_.id as id1_6_4_, project4_.create_date as create_d2_6_4_, project4_.description as descript3_6_4_, project4_.name as name4_6_4_, project4_.user_id as user_id5_6_4_, user5_.id as id1_10_5_, user5_.email as email2_10_5_, user5_.name as name3_10_5_, user5_.password as password4_10_5_, user5_.tel as tel5_10_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b3d6692]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a8bad5]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@92a8f53]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9237112]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2de18f36]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [UPGRADE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a58f64d]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25ecf05b]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d553ef]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@299237a6]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33bf297a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_NOWAIT]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7193797e]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@676035d7]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dde34b8]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47ece0f4]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20486dc7]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_SKIPLOCKED]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46e02a94]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a8c15f8]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59c9713b]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e3a541c]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39b2e552]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [FORCE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@634b1449]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d4fc129]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13792ba7]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@282b8cdd]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16016c1b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_READ]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5504b17b]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b43a439]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66bf6efe]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16c0843b]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d02eb68]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_WRITE]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b86fc9d]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24a00430]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e23f267]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@625d9b2a]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49d9ef2b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d7cf3a4]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a7dac2]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@401cd0a]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@eeafffd]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e02d222]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@524f64ea]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16093db]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@798bc217]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50ca91f8]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c0b5cef]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.UserGroup: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.UserGroup: select usergroup0_.id as id1_11_0_, usergroup0_.create_date as create_d2_11_0_, usergroup0_.group_id as group_id4_11_0_, usergroup0_.is_headman as is_headm3_11_0_, usergroup0_.modify_userid as modify_u5_11_0_, usergroup0_.project_id as project_6_11_0_, usergroup0_.user_id as user_id7_11_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static SQL for entity: sw.entity.Menu
 Version select: select id from t_menu where id =?
 Snapshot select: select menu_.id, menu_.href as href2_5_, menu_.name as name3_5_, menu_.pid as pid4_5_ from t_menu menu_ where menu_.id=?
 Insert 0: insert into t_menu (href, name, pid, id) values (?, ?, ?, ?)
 Update 0: update t_menu set href=?, name=?, pid=? where id=?
 Delete 0: delete from t_menu where id=?
 Identity insert: insert into t_menu (href, name, pid) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69f0e4fe]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [NONE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a0d15cd]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [READ]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12ee1837]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e48aa8e]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE_NOWAIT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e32a4e4]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE_SKIPLOCKED]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12d6f3a8]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [FORCE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cb5cecf]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_READ]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79ec15c0]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_WRITE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26b185eb]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@749155a4]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4de66642]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Menu: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Menu: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static SQL for entity: sw.entity.ReferenceFile
 Version select: select id from t_referencefile where id =?
 Snapshot select: select referencef_.id, referencef_.company as company2_8_, referencef_.file_name as file_nam3_8_, referencef_.publish_date as publish_4_8_ from t_referencefile referencef_ where referencef_.id=?
 Insert 0: insert into t_referencefile (company, file_name, publish_date, id) values (?, ?, ?, ?)
 Update 0: update t_referencefile set company=?, file_name=?, publish_date=? where id=?
 Delete 0: delete from t_referencefile where id=?
 Identity insert: insert into t_referencefile (company, file_name, publish_date) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e2d5335]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [NONE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6efa80b]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [READ]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a7ff2f8]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4197768e]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE_NOWAIT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2751ce74]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE_SKIPLOCKED]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e199b75]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [FORCE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fbac83]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_READ]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36b97880]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_WRITE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@450dc393]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7046bdcc]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [OPTIMISTIC]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1124efd1]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [OPTIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ReferenceFile: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ReferenceFile: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static SQL for entity: sw.entity.Project
 Version select: select id from t_project where id =?
 Snapshot select: select project_.id, project_.create_date as create_d2_6_, project_.description as descript3_6_, project_.name as name4_6_, project_.user_id as user_id5_6_ from t_project project_ where project_.id=?
 Insert 0: insert into t_project (create_date, description, name, user_id, id) values (?, ?, ?, ?, ?)
 Update 0: update t_project set create_date=?, description=?, name=?, user_id=? where id=?
 Delete 0: delete from t_project where id=?
 Identity insert: insert into t_project (create_date, description, name, user_id) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cfbce03]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15549465]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Project [NONE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b9683a1]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ce30c07]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}

Static select for entity sw.entity.Project [READ]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_10_1_, user1_.email as email2_10_1_, user1_.name as name3_10_1_, user1_.password as password4_10_1_, user1_.tel as tel5_10_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14c5004f]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1703637c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c9c37a]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dc21eb3]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE_NOWAIT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71d68af4]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10b1cac6]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE_SKIPLOCKED]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7deb69e5]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71854449]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [FORCE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f7c4745]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f7b184a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_READ]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5407b2e0]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6576d3a2]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_WRITE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32182e0e]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@669a86e8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35a2b25a]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@155bd994]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [OPTIMISTIC]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27c4b011]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@df238e7]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [OPTIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Project: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Project: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static SQL for entity: sw.entity.AssetType
 Version select: select id from t_asset_type where id =?
 Snapshot select: select assettype_.id, assettype_.name as name2_3_ from t_asset_type assettype_ where assettype_.id=?
 Insert 0: insert into t_asset_type (name, id) values (?, ?)
 Update 0: update t_asset_type set name=? where id=?
 Delete 0: delete from t_asset_type where id=?
 Identity insert: insert into t_asset_type (name) values (?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46aec7b4]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [NONE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64aa376a]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [READ]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4820f5db]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cf70243]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE_NOWAIT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53251061]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE_SKIPLOCKED]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@456e905c]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [FORCE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76e257d]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_READ]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c7f8f3b]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_WRITE]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5abb0803]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_FORCE_INCREMENT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72717ed]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [OPTIMISTIC]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d97c550]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [OPTIMISTIC_FORCE_INCREMENT]: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.AssetType: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.AssetType: select assettype0_.id as id1_3_0_, assettype0_.name as name2_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static SQL for entity: sw.entity.Action
 Version select: select id from t_action where id =?
 Snapshot select: select action_.id, action_.menu_id as menu_id4_0_, action_.name as name2_0_, action_.url as url3_0_ from t_action action_ where action_.id=?
 Insert 0: insert into t_action (menu_id, name, url, id) values (?, ?, ?, ?)
 Update 0: update t_action set menu_id=?, name=?, url=? where id=?
 Delete 0: delete from t_action where id=?
 Identity insert: insert into t_action (menu_id, name, url) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f9f7f4c]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@229ca4e9]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

Static select for entity sw.entity.Action [NONE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_5_1_, menu1_.href as href2_5_1_, menu1_.name as name3_5_1_, menu1_.pid as pid4_5_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225738be]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62c55cb]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

Static select for entity sw.entity.Action [READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_5_1_, menu1_.href as href2_5_1_, menu1_.name as name3_5_1_, menu1_.pid as pid4_5_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19a68488]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c86bea8]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40a0f505]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34e52fb4]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_NOWAIT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d9fb47e]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a956f41]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_SKIPLOCKED]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77906528]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ef52bd6]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [FORCE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f5bba2e]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c325859]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bfe6d92]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5344f892]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_WRITE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d0a8233]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d0e903c]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@97a6767]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62ad4e9f]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6babad86]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42a0a4e3]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static SQL for entity: sw.entity.ActionGroup
 Version select: select id from t_actiongroup where id =?
 Snapshot select: select actiongrou_.id, actiongrou_.action_id as action_i3_1_, actiongrou_.create_date as create_d2_1_, actiongrou_.group_id as group_id4_1_, actiongrou_.menu_id as menu_id5_1_, actiongrou_.user_id as user_id6_1_ from t_actiongroup actiongrou_ where actiongrou_.id=?
 Insert 0: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update t_actiongroup set action_id=?, create_date=?, group_id=?, menu_id=?, user_id=? where id=?
 Delete 0: delete from t_actiongroup where id=?
 Identity insert: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id) values (?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4af1c39e]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48f2bf76]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b9b527c]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e311599]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64e8523d]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1941adfa]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45273cf9]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_10_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_5_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.ActionGroup [NONE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_5_2_, menu2_.href as href2_5_2_, menu2_.name as name3_5_2_, menu2_.pid as pid4_5_2_, group3_.id as id1_4_3_, group3_.create_date as create_d2_4_3_, group3_.info as info3_4_3_, group3_.user_id as user_id5_4_3_, group3_.name as name4_4_3_, user4_.id as id1_10_4_, user4_.email as email2_10_4_, user4_.name as name3_10_4_, user4_.password as password4_10_4_, user4_.tel as tel5_10_4_, menu5_.id as id1_5_5_, menu5_.href as href2_5_5_, menu5_.name as name3_5_5_, menu5_.pid as pid4_5_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@791d781d]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21e5c3f2]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6768c48f]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a341873]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@128a4c7b]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30656195]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ef43113]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_10_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_5_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_10_6_}

Static select for entity sw.entity.ActionGroup [READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_5_2_, menu2_.href as href2_5_2_, menu2_.name as name3_5_2_, menu2_.pid as pid4_5_2_, group3_.id as id1_4_3_, group3_.create_date as create_d2_4_3_, group3_.info as info3_4_3_, group3_.user_id as user_id5_4_3_, group3_.name as name4_4_3_, user4_.id as id1_10_4_, user4_.email as email2_10_4_, user4_.name as name3_10_4_, user4_.password as password4_10_4_, user4_.tel as tel5_10_4_, menu5_.id as id1_5_5_, menu5_.href as href2_5_5_, menu5_.name as name3_5_5_, menu5_.pid as pid4_5_5_, user6_.id as id1_10_6_, user6_.email as email2_10_6_, user6_.name as name3_10_6_, user6_.password as password4_10_6_, user6_.tel as tel5_10_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fbd6654]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@444ede20]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e4f39ec]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ae47db7]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@393d7e2c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bb008f5]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75471fc0]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27d9d35a]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c2590f4]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ea1d336]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_NOWAIT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43d5743d]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2addab85]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ae5f58b]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42f91876]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@113553eb]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_SKIPLOCKED]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@567353cb]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@598f259a]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@629e8f4b]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e3f75d8]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@478389]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [FORCE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20c4c5ee]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63f2d0c1]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f155cfd]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59780944]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@585c85b3]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d5d32a1]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41717125]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d3c15a5]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39b0e899]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@326bc695]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_WRITE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@785971a4]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b1f1a24]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37ac20bc]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cbb3bc]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f441d78]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c29e08e]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@635996d2]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c99e81c]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f175491]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@216c9828]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e2c75d1]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5890d3eb]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d78ad09]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7017d18a]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@871e43d]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Instantiated session factory
HHH000228: Running hbm2ddl schema update
No alter strings for table : t_action
No alter strings for table : t_actiongroup
No alter strings for table : t_asset
No alter strings for table : t_asset_type
No alter strings for table : t_group
No alter strings for table : t_menu
No alter strings for table : t_project
No alter strings for table : t_project_refence
No alter strings for table : t_referencefile
No alter strings for table : t_threat
No alter strings for table : t_user
No alter strings for table : t_usergroup
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 79336192-4e65-4603-b9cc-1f73d9265b71 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@43f85244: startup date [Tue Nov 21 16:07:55 CST 2017]; root of context hierarchy
Mapped "{[/pro/projectAdd],methods=[POST]}" onto public java.lang.String sw.controller.ProjectController.projectAdd(sw.entity.Project,org.springframework.ui.Model)
Mapped "{[/pro/updateProject],methods=[POST]}" onto public java.lang.String sw.controller.ProjectController.updateProject(sw.entity.Project)
Mapped "{[/pro/menu]}" onto public sw.model.MMenu sw.controller.ProjectController.findByroot()
Mapped "{[/pro/findAllGroups/{projectId}],methods=[GET]}" onto public void sw.controller.ProjectController.findAllGroups(int,org.springframework.ui.Model)
Mapped "{[/pro/projectList],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectPage(org.springframework.ui.Model)
Mapped "{[/pro/delProject/{id}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.delCollege(int)
Mapped "{[/pro/projectMain/{projectId}/{groupIds}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectMain(int,java.lang.String,org.springframework.ui.Model)
Mapped "{[/pro/projectForm/{id}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectForm(int,org.springframework.ui.Model)
Mapped "{[/pro/projectForm],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectFormView(org.springframework.ui.Model)
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model,javax.servlet.http.HttpSession)
Mapped "{[/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage(org.springframework.ui.Model)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession) throws java.io.IOException
Mapped "{[/logout],methods=[GET]}" onto public java.lang.String sw.controller.UserController.logout(javax.servlet.http.HttpSession)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 4.583 seconds (JVM running for 3485.836)
